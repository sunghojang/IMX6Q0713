/* linux/drivers/media/video/mt9p111.h
 *
 * Copyright (c) 2010 Samsung Electronics Co., Ltd.
 *	http://www.samsung.com/
 *
 * Driver for MT9P111 (SXGA camera) from Samsung Electronics
 * 1/6" 1.3Mp CMOS Image Sensor SoC with an Embedded Image Processor
 * supporting MIPI CSI-2
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
  http://code.google.com/p/bricked/source/browse/drivers/media/video/msm/mt9p111_reg.c?repo=tenderloin&r=84c9f4aa0c64639fb9773094757dfd2e5591017b
 */

#define MT9P111_COMPLETE
#undef MT9P111_COMPLETE
#ifndef __MT9P111_H__
#define __MT9P111_H__

struct mt9p111_reg {
	unsigned short addr;
	unsigned short val;
};

struct mt9p111_regset_type {
	unsigned char *regset;
	int len;
};

/*
 * Macro
 */
#define REGSET_LENGTH(x)	(sizeof(x)/sizeof(mt9p111_reg))
/************************************
 * FEATURE DEFINITIONS
 ************************************/
#define FEATURE_YUV_CAPTURE
/*
 * Host S/W Register interface (0x70000000-0x70002000)
 */
/* Initialization section */
#define MT9P111_Speed_368Mbps		0
#define MT9P111_Speed_464Mbps		1
#define MT9P111_Speed_552Mbps		2
#define MT9P111_Speed_648Mbps		3
#define MT9P111_Speed_736Mbps		4
#define MT9P111_Speed_832Mbps		5
#define MT9P111_Speed_920Mbps		6

#define MT9P1114Khz_0Mhz		0x0000
#define MT9P1114Khz_46Mhz		0x2CEC
#define MT9P1114Khz_58Mhz		0x38A4
#define MT9P1114Khz_69Mhz		0x4362
#define MT9P1114Khz_81Mhz		0x4F1A
#define MT9P1114Khz_91Mhz		0x58DE
#define MT9P1114Khz_92Mhz		0x59D8
#define MT9P1114Khz_93Mhz		0x5AD2
#define MT9P1114Khz_104Mhz		0x6590
#define MT9P1114Khz_115Mhz		0x704E

#define MT9P111FrTime_30fps		0x014D	/*  33.3ms -> 30 fps */
#define MT9P111FrTime_15fps		0x029A	/*  66.6ms -> 15 fps */
#define MT9P111FrTime_7P5fps		0x0535	/*  133.3ms -> 7.5 fps */
#define MT9P111FrTime_1P5fps		0x1964	/*  650.0ms -> 1.5 fps */
/*=====================================*/
/*========Register map for MT9P111 EVT1(Don't modify)===========*/
#define MT9P111_REG_TC_IPRM_InClockLSBs				0x0238
#define MT9P111_REG_TC_IPRM_InClockMSBs				0x023A
#define MT9P111_REG_TC_IPRM_UseNPviClocks			0x0252
#define MT9P111_REG_TC_IPRM_UseNMipiClocks			0x0254
#define MT9P111_REG_TC_IPRM_NumberOfMipiLanes			0x0256
#define MT9P111_REG_TC_IPRM_OpClk4KHz_0				0x025A
#define MT9P111_REG_TC_IPRM_MinOutRate4KHz_0			0x025C
#define MT9P111_REG_TC_IPRM_MaxOutRate4KHz_0			0x025E
#define MT9P111_REG_TC_IPRM_InitParamsUpdated			0x026E
#define MT9P111_REG_TC_GP_EnablePreview				0x0280
#define MT9P111_REG_TC_GP_EnablePreviewChanged			0x0282
#define MT9P111_REG_TC_GP_NewConfigSync				0x0290
#define MT9P111_REG_TC_GP_ActivePrevConfig			0x02A4
#define MT9P111_REG_TC_GP_PrevConfigChanged			0x02A6
#define MT9P111_REG_TC_GP_PrevOpenAfterChange			0x02A8
#define MT9P111_REG_0TC_PCFG_usWidth				0x02E2
#define MT9P111_REG_0TC_PCFG_usHeight				0x02E4
#define MT9P111_REG_0TC_PCFG_Format				0x02E6
#define MT9P111_REG_0TC_PCFG_usMaxOut4KHzRate			0x02E8
#define MT9P111_REG_0TC_PCFG_usMinOut4KHzRate			0x02EA
#define MT9P111_REG_0TC_PCFG_PVIMask				0x02F0
#define MT9P111_REG_0TC_PCFG_uClockInd				0x02F8
#define MT9P111_REG_0TC_PCFG_FrRateQualityType			0x02FC
#define MT9P111_REG_0TC_PCFG_usFrTimeType			0x02FA
#define MT9P111_REG_0TC_PCFG_usMaxFrTimeMsecMult10		0x02FE
#define MT9P111_REG_0TC_PCFG_usMinFrTimeMsecMult10		0x0300

#define MT9P111_PCLK_MIN	MT9P1114Khz_115Mhz
#define MT9P111_PCLK_MAX	MT9P1114Khz_115Mhz

#define MT9P111_FrTime_MAX	MT9P111FrTime_30fps
/*
 * User defined commands
 */
/* S/W defined features for tune */
#define REG_DELAY	0xFFFF	/* in ms */
#define REG_CMD		0xFFFF	/* Followed by command */
#define FIRST_SETTING_FOCUS_MODE_DELAY_MS	100
#define SECOND_SETTING_FOCUS_MODE_DELAY_MS	200
#define TAG_NAME	"["MT9P111_DRIVER_NAME"]"" "
#define cam_err(fmt, ...)	\
	printk(KERN_ERR TAG_NAME fmt, ##__VA_ARGS__)
#define cam_warn(fmt, ...)	\
	printk(KERN_WARNING TAG_NAME fmt, ##__VA_ARGS__)
#define cam_info(fmt, ...)	\
	printk(KERN_INFO TAG_NAME fmt, ##__VA_ARGS__)

#if defined(CONFIG_CAM_DEBUG)
#define cam_dbg(fmt, ...)	\
	printk(KERN_DEBUG TAG_NAME fmt, ##__VA_ARGS__)
#else
#define cam_dbg(fmt, ...)	\
	do { \
		if (*to_state(sd)->dbg_level & CAMDBG_LEVEL_DEBUG) \
			printk(KERN_DEBUG TAG_NAME fmt, ##__VA_ARGS__); \
	} while (0)
#endif

#if defined(CONFIG_CAM_DEBUG) && defined(CONFIG_CAM_TRACE)
#define cam_trace(fmt, ...)	cam_dbg("%s: " fmt, __func__, ##__VA_ARGS__);
#else
#define cam_trace(fmt, ...)	\
	do { \
		if (*to_state(sd)->dbg_level & CAMDBG_LEVEL_TRACE) \
			printk(KERN_DEBUG TAG_NAME "%s: " fmt, \
				__func__, ##__VA_ARGS__); \
	} while (0)
#endif

#if defined(CONFIG_CAM_DEBUG) && defined(CONFIG_CAM_AF_DEBUG)
#define af_dbg(fmt, ...)	cam_dbg(fmt, ##__VA_ARGS__);
#else
#define af_dbg(fmt, ...)
#endif

#define CHECK_ERR_COND(condition, ret)	\
	do { if (unlikely(condition)) return ret; } while (0)
#define CHECK_ERR_COND_MSG(condition, ret, fmt, ...) \
		if (unlikely(condition)) { \
			cam_err("%s: ERROR, " fmt, __func__, ##__VA_ARGS__); \
			return ret; \
		}

#define CHECK_ERR(x)	CHECK_ERR_COND(((x) < 0), (x))
#define CHECK_ERR_MSG(x, fmt, ...) \
	CHECK_ERR_COND_MSG(((x) < 0), (x), fmt, ##__VA_ARGS__)



/* Following order should not be changed */
enum image_size_mt9p111 {
	/* This SoC supports upto SXGA (1280*1024) */
#if 0
	QQVGA, /* 160*120*/
	QCIF, /* 176*144 */
	QVGA, /* 320*240 */
	CIF, /* 352*288 */
#endif
	VGA, /* 640*480 */
#if 0
	SVGA, /* 800*600 */
	HD720P, /* 1280*720 */
	SXGA, /* 1280*1024 */
#endif
};

/*
 * Following values describe controls of camera
 * in user aspect and must be match with index of mt9p111_regset[]
 * These values indicates each controls and should be used
 * to control each control
 */

struct mt9p111_control {
	u32 id;
	s32 value;
	s32 default_value;
};

#define MT9P111_INIT_CONTROL(ctrl_id, default_val) \
	{					\
		.id = ctrl_id,			\
		.value = default_val,		\
		.default_value = default_val,	\
	}

#define MT9P111_REGSET(x)	{	\
	.regset = x,			\
	.len = sizeof(x)/sizeof(mt9p111_reg),}

enum mt9p111_width {
    LONG_LEN,//crazyboys 20140621
    WORD_LEN,
    BYTE_LEN
};

struct mt9p111_i2c_reg_conf {
    unsigned short waddr;
    unsigned short wdata;
    enum mt9p111_width width;
    unsigned short mdelay_time;
};
#if 0 //640x480 test org
struct mt9p111_i2c_reg_conf mt9p111_reg_init_tab[] = {
//[initial_setting_110930]
//for 24MHz input, VCO=768MHz PCLK=76.8MHz
//20.2-7fps 7.3-4.8fps
//640*480 2592x1944
//;PLL_set
{ 0x0010, 0x0340, WORD_LEN, 0}, 	// PLL_DIVIDERS   //Pclk 72->76.8MHz
{ 0x0012, 0x0090, WORD_LEN, 0}, 	// PLL_P_DIVIDERS  //Pclk 72->76.8MHz
{ 0x0014, 0x2025, WORD_LEN, 0}, 	// PLL_CONTROL
{ 0x001E, 0x0665, WORD_LEN, 0}, 	// PAD_SLEW_PAD_CONFIG  //Pclk 72->76.8MHz
{ 0x0022, 0x0030, WORD_LEN, 0},	//1E0 	// VDD_DIS_COUNTER  //진입시간 관련 Aptina Guide(06.01)
{ 0x002A, 0x7F7F, WORD_LEN, 0}, 	// PLL_P4_P5_P6_DIVIDERS  //Pclk 72->76.8MHz
{ 0x002C, 0x0000, WORD_LEN, 0}, 	// PLL_P7_DIVIDER
{ 0x002E, 0x0000, WORD_LEN, 0}, 	// SENSOR_CLOCK_DIVIDER
//LEAVE STANDBY
{ 0x0018, 0x4008, WORD_LEN, 100}, 	// STANDBY_CONTROL_AND_STATUS
//POLL_{0x0018,0xE07F,!=0x2008,DELAY=10,TIMEOUT=100	//Wait for the core ready
{ 0x0010, 0x0340, WORD_LEN, 0}, 	// PLL_DIVIDERS
//[bin2_skip2_5140SoC_HP]
//;Max Framerate in Preview with High Power Mode
{ 0x098E, 0x483A, WORD_LEN, 0}, 	// LOGICAL_ADDRESS_ACCESS
{ 0xC83A, 0x000C, WORD_LEN, 0}, 	// CAM_CORE_A_Y_ADDR_START
{ 0xC83C, 0x0018, WORD_LEN, 0}, 	// CAM_CORE_A_X_ADDR_START
{ 0xC83E, 0x07B1, WORD_LEN, 0}, 	// CAM_CORE_A_Y_ADDR_END
{ 0xC840, 0x0A45, WORD_LEN, 0}, 	// CAM_CORE_A_X_ADDR_END
{ 0xC842, 0x0001, WORD_LEN, 0}, 	// CAM_CORE_A_ROW_SPEED
{ 0xC844, 0x0103, WORD_LEN, 0}, 	// CAM_CORE_A_SKIP_X_CORE
{ 0xC846, 0x0103, WORD_LEN, 0}, 	// CAM_CORE_A_SKIP_Y_CORE
{ 0xC848, 0x0103, WORD_LEN, 0}, 	// CAM_CORE_A_SKIP_X_PIPE
{ 0xC84A, 0x0103, WORD_LEN, 0}, 	// CAM_CORE_A_SKIP_Y_PIPE
{ 0xC84C, 0x0096, WORD_LEN, 0}, 	// CAM_CORE_A_POWER_MODE  //Aptina Guide(06.01)
{ 0xC84E, 0x0001, WORD_LEN, 0}, 	// CAM_CORE_A_BIN_MODE
{ 0xC850, 0x03,   BYTE_LEN, 0},	//0 	// CAM_CORE_A_ORIENTATION
{ 0xC851, 0x03,   BYTE_LEN, 0},	//0 	// CAM_CORE_A_PIXEL_ORDER  //Core setup with Orientation (06.01)
{ 0xC852, 0x019C, WORD_LEN, 0}, 	// CAM_CORE_A_FINE_CORRECTION
{ 0xC854, 0x0732, WORD_LEN, 0}, 	// CAM_CORE_A_FINE_ITMIN
{ 0xC858, 0x0000, WORD_LEN, 0}, 	// CAM_CORE_A_COARSE_ITMIN
{ 0xC85A, 0x0001, WORD_LEN, 0}, 	// CAM_CORE_A_COARSE_ITMAX_MARGIN
{ 0xC85C, 0x0423, WORD_LEN, 0}, 	// CAM_CORE_A_MIN_FRAME_LENGTH_LINES
{ 0xC85E, 0xFFFF, WORD_LEN, 0}, 	// CAM_CORE_A_MAX_FRAME_LENGTH_LINES
{ 0xC860, 0x0423, WORD_LEN, 0}, 	// CAM_CORE_A_BASE_FRAME_LENGTH_LINES
{ 0xC862, 0x1194, WORD_LEN, 0}, 	// CAM_CORE_A_MIN_LINE_LENGTH_PCLK
{ 0xC864, 0xFFFE, WORD_LEN, 0},  	// CAM_CORE_A_MAX_LINE_LENGTH_PCLK
{ 0xC866, 0x7F7F, WORD_LEN, 0}, 	// CAM_CORE_A_P4_5_6_DIVIDER  //Preview 18.5->20.2fps
{ 0xC868, 0x0423, WORD_LEN, 0}, 	// CAM_CORE_A_FRAME_LENGTH_LINES
{ 0xC86A, 0x1194, WORD_LEN, 0}, 	// CAM_CORE_A_LINE_LENGTH_PCK
{ 0xC86C, 0x0518, WORD_LEN, 0}, 	// CAM_CORE_A_OUTPUT_SIZE_WIDTH
{ 0xC86E, 0x03D4, WORD_LEN, 0}, 	// CAM_CORE_A_OUTPUT_SIZE_HEIGHT
{ 0xC870, 0x0014, WORD_LEN, 0}, 	// CAM_CORE_A_RX_FIFO_TRIGGER_MARK
{ 0xC858, 0x0002, WORD_LEN, 0}, 	// CAM_CORE_A_COARSE_ITMIN
{ 0xC8B8, 0x0004, WORD_LEN, 0}, 	// CAM_OUTPUT_0_JPEG_CONTROL
{ 0xC8AE, 0x0001, WORD_LEN, 0}, 	// CAM_OUTPUT_0_OUTPUT_FORMAT
{ 0xC8AA, 0x0284, WORD_LEN, 0}, //500 	// CAM_OUTPUT_0_IMAGE_WIDTH //crazyboys
//{ 0xC8AA, 0x02D0, WORD_LEN, 0}, //500 	// CAM_OUTPUT_0_IMAGE_WIDTH //crazyboys
{ 0xC8AC, 0x01E0, WORD_LEN, 0}, //3C0 	// CAM_OUTPUT_0_IMAGE_HEIGHT
//[Full_Res_Settings_JPEG_Fullspeed]
//;Max Framerate in Full Res
{ 0x098E, 0x4872, WORD_LEN, 0}, 	// LOGICAL_ADDRESS_ACCESS
{ 0xC872, 0x0010, WORD_LEN, 0}, 	// CAM_CORE_B_Y_ADDR_START
{ 0xC874, 0x001C, WORD_LEN, 0}, 	// CAM_CORE_B_X_ADDR_START
{ 0xC876, 0x07AF, WORD_LEN, 0}, 	// CAM_CORE_B_Y_ADDR_END
{ 0xC878, 0x0A43, WORD_LEN, 0}, 	// CAM_CORE_B_X_ADDR_END
{ 0xC87A, 0x0001, WORD_LEN, 0}, 	// CAM_CORE_B_ROW_SPEED
{ 0xC87C, 0x0101, WORD_LEN, 0}, 	// CAM_CORE_B_SKIP_X_CORE
{ 0xC87E, 0x0101, WORD_LEN, 0}, 	// CAM_CORE_B_SKIP_Y_CORE
{ 0xC880, 0x0101, WORD_LEN, 0}, 	// CAM_CORE_B_SKIP_X_PIPE
{ 0xC882, 0x0101, WORD_LEN, 0}, 	// CAM_CORE_B_SKIP_Y_PIPE
{ 0xC884, 0x005C, WORD_LEN, 0}, 	// CAM_CORE_B_POWER_MODE [101124 적용] 0x00F2-> 0x005C  //Aptina Guide(06.01)
{ 0xC886, 0x0000, WORD_LEN, 0}, 	// CAM_CORE_B_BIN_MODE
{ 0xC888, 0x03,   BYTE_LEN, 0},	//0 	// CAM_CORE_B_ORIENTATION
{ 0xC889, 0x03,   BYTE_LEN, 0},	//0 	// CAM_CORE_B_PIXEL_ORDER
{ 0xC88A, 0x009C, WORD_LEN, 0}, 	// CAM_CORE_B_FINE_CORRECTION
{ 0xC88C, 0x034A, WORD_LEN, 0}, 	// CAM_CORE_B_FINE_ITMIN
{ 0xC890, 0x0000, WORD_LEN, 0}, 	// CAM_CORE_B_COARSE_ITMIN
{ 0xC892, 0x0001, WORD_LEN, 0}, 	// CAM_CORE_B_COARSE_ITMAX_MARGIN
{ 0xC894, 0x07EF, WORD_LEN, 0}, 	// CAM_CORE_B_MIN_FRAME_LENGTH_LINES  //Capture 4.5 -> 5~7.3fps
{ 0xC896, 0xFFFF, WORD_LEN, 0}, 	// CAM_CORE_B_MAX_FRAME_LENGTH_LINES
{ 0xC898, 0x082F, WORD_LEN, 0}, 	// CAM_CORE_B_BASE_FRAME_LENGTH_LINES
{ 0xC89A, 0x1964, WORD_LEN, 0}, 	// CAM_CORE_B_MIN_LINE_LENGTH_PCLK  //Capture 4.5 -> 5~7.3fps
{ 0xC89C, 0xFFFE, WORD_LEN, 0}, 	// CAM_CORE_B_MAX_LINE_LENGTH_PCLK
{ 0xC89E, 0x7F7F, WORD_LEN, 0}, 	// CAM_CORE_B_P4_5_6_DIVIDER  //Capture 4.5 -> 5~7.3fps
{ 0xC8A0, 0x07EF, WORD_LEN, 0}, 	// CAM_CORE_B_FRAME_LENGTH_LINES  //Capture 4.5 -> 5~7.3fps
{ 0xC8A2, 0x1964, WORD_LEN, 0}, 	// CAM_CORE_B_LINE_LENGTH_PCK  //Capture 4.5 -> 5~7.3fps
{ 0xC8A4, 0x0A28, WORD_LEN, 0}, 	// CAM_CORE_B_OUTPUT_SIZE_WIDTH
{ 0xC8A6, 0x07A0, WORD_LEN, 0}, 	// CAM_CORE_B_OUTPUT_SIZE_HEIGHT
{ 0xC8A8, 0x0124, WORD_LEN, 0}, 	// CAM_CORE_B_RX_FIFO_TRIGGER_MARK  //Aptina Guide(06.01)
{ 0xC8B0, 0x0002, WORD_LEN, 0},   // cam_output_0_output_format_order 추가 110930
{ 0xC890, 0x0002, WORD_LEN, 0}, 	// CAM_CORE_B_COARSE_ITMIN
{ 0xC8C0, 0x0A20, WORD_LEN, 0}, 	// CAM_OUTPUT_1_IMAGE_WIDTH
{ 0xC89A, 0x1964, WORD_LEN, 0}, 	// CAM_CORE_B_MIN_LINE_LENGTH_PCLK  //Capture 4.5 -> 5~7.3fps
{ 0xC8A2, 0x1964, WORD_LEN, 0}, 	// CAM_CORE_B_LINE_LENGTH_PCK  //Capture 4.5 -> 5~7.3fps
{ 0xC8C4, 0x0001, WORD_LEN, 0}, 	// CAM_OUTPUT_1_OUTPUT_FORMAT
{ 0xC8C6, 0x0000, WORD_LEN, 0}, 	// CAM_OUTPUT_1_OUTPUT_FORMAT_ORDER
{ 0xC8CE, 0x0014, WORD_LEN, 0}, 	// CAM_OUTPUT_1_JPEG_CONTROL
{ 0xD822, 0x4610, WORD_LEN, 0}, 	// JPEG_JPSS_CTRL_VAR
{ 0x3330, 0x0000, WORD_LEN, 0}, 	// OUTPUT_FORMAT_TEST
//[Flicker]
{ 0xA010, 0x00CC, WORD_LEN, 0}, 	// FD_MIN_EXPECTED50HZ_FLICKER_PERIOD  //frame변경에 따른 flicker설정
{ 0xA012, 0x00E0, WORD_LEN, 0}, 	// FD_MAX_EXPECTED50HZ_FLICKER_PERIOD  //frame변경에 따른 flicker설정
{ 0xA014, 0x00A8, WORD_LEN, 0}, 	// FD_MIN_EXPECTED60HZ_FLICKER_PERIOD  //frame변경에 따른 flicker설정
{ 0xA016, 0x00BC, WORD_LEN, 0}, 	// FD_MAX_EXPECTED60HZ_FLICKER_PERIOD  //frame변경에 따른 flicker설정
{ 0xA018, 0x00D6, WORD_LEN, 0}, 	// FD_EXPECTED50HZ_FLICKER_PERIOD_IN_CONTEXT_A  //frame변경에 따른 flicker설정
{ 0xA01A, 0x0095, WORD_LEN, 0}, 	// FD_EXPECTED50HZ_FLICKER_PERIOD_IN_CONTEXT_B  //frame변경에 따른 flicker설정
{ 0xA01C, 0x00B2, WORD_LEN, 0}, 	// FD_EXPECTED60HZ_FLICKER_PERIOD_IN_CONTEXT_A  //frame변경에 따른 flicker설정
{ 0xA01E, 0x007C, WORD_LEN, 0}, 	// FD_EXPECTED60HZ_FLICKER_PERIOD_IN_CONTEXT_B  //frame변경에 따른 flicker설정
//[k28a_rev3_FW_patch7]
//; NEW Patch_AF
//  k28a_rev03_patch07_CR30221_MCNEX_AWB_AFNOISE_YOFFSET_APGA_REV6 //Patch update ver 5.3->7.6(06.01)
{ 0x0982, 0x0000, WORD_LEN, 0},
{ 0x098A, 0x0000, WORD_LEN, 0},
{ 0x886C, 0xC0F1, WORD_LEN, 0},
{ 0x886E, 0xC5E1, WORD_LEN, 0},
{ 0x8870, 0x246A, WORD_LEN, 0},
{ 0x8872, 0x1280, WORD_LEN, 0},
{ 0x8874, 0xC4E1, WORD_LEN, 0},
{ 0x8876, 0xD30E, WORD_LEN, 0},
{ 0x8878, 0x2069, WORD_LEN, 0},
{ 0x887A, 0x0000, WORD_LEN, 0},
{ 0x887C, 0x1305, WORD_LEN, 0},
{ 0x887E, 0x0084, WORD_LEN, 0},
{ 0x8880, 0x1730, WORD_LEN, 0},
{ 0x8882, 0x7005, WORD_LEN, 0},
{ 0x8884, 0xD801, WORD_LEN, 0},
{ 0x8886, 0x8B41, WORD_LEN, 0},
{ 0x8888, 0xD900, WORD_LEN, 0},
{ 0x888A, 0x0D5E, WORD_LEN, 0},
{ 0x888C, 0x0664, WORD_LEN, 0},
{ 0x888E, 0x8B63, WORD_LEN, 0},
{ 0x8890, 0xE809, WORD_LEN, 0},
{ 0x8892, 0xD509, WORD_LEN, 0},
{ 0x8894, 0xF004, WORD_LEN, 0},
{ 0x8896, 0x1504, WORD_LEN, 0},
{ 0x8898, 0x1400, WORD_LEN, 0},
{ 0x889A, 0x7840, WORD_LEN, 0},
{ 0x889C, 0xD007, WORD_LEN, 0},
{ 0x889E, 0x0DFB, WORD_LEN, 0},
{ 0x88A0, 0x9004, WORD_LEN, 0},
{ 0x88A2, 0xC4C1, WORD_LEN, 0},
{ 0x88A4, 0x2029, WORD_LEN, 0},
{ 0x88A6, 0x0300, WORD_LEN, 0},
{ 0x88A8, 0x021D, WORD_LEN, 0},
{ 0x88AA, 0x06C4, WORD_LEN, 0},
{ 0x88AC, 0xFF80, WORD_LEN, 0},
{ 0x88AE, 0x08C8, WORD_LEN, 0},
{ 0x88B0, 0xFF80, WORD_LEN, 0},
{ 0x88B2, 0x086C, WORD_LEN, 0},
{ 0x88B4, 0xFF80, WORD_LEN, 0},
{ 0x88B6, 0x08BC, WORD_LEN, 0},
{ 0x88B8, 0xFF80, WORD_LEN, 0},
{ 0x88BA, 0x08C8, WORD_LEN, 0},
{ 0x88BC, 0xFF80, WORD_LEN, 0},
{ 0x88BE, 0x08D0, WORD_LEN, 0},
{ 0x88C0, 0xFF80, WORD_LEN, 0},
{ 0x88C2, 0x0978, WORD_LEN, 0},
{ 0x88C4, 0xFF80, WORD_LEN, 0},
{ 0x88C6, 0x0F88, WORD_LEN, 0},
{ 0x88C8, 0x0007, WORD_LEN, 0},
{ 0x88CA, 0x0006, WORD_LEN, 0},
{ 0x88CC, 0x0000, WORD_LEN, 0},
{ 0x88CE, 0x0000, WORD_LEN, 0},
{ 0x88D0, 0xC0F1, WORD_LEN, 0},
{ 0x88D2, 0x097E, WORD_LEN, 0},
{ 0x88D4, 0x06E4, WORD_LEN, 0},
{ 0x88D6, 0xDA14, WORD_LEN, 0},
{ 0x88D8, 0xD0DB, WORD_LEN, 0},
{ 0x88DA, 0xDE00, WORD_LEN, 0},
{ 0x88DC, 0xD1DB, WORD_LEN, 0},
{ 0x88DE, 0x2E41, WORD_LEN, 0},
{ 0x88E0, 0x120C, WORD_LEN, 0},
{ 0x88E2, 0xA895, WORD_LEN, 0},
{ 0x88E4, 0xD5DA, WORD_LEN, 0},
{ 0x88E6, 0xA8D4, WORD_LEN, 0},
{ 0x88E8, 0xA8D6, WORD_LEN, 0},
{ 0x88EA, 0x0F0A, WORD_LEN, 0},
{ 0x88EC, 0x06A4, WORD_LEN, 0},
{ 0x88EE, 0x2555, WORD_LEN, 0},
{ 0x88F0, 0x1440, WORD_LEN, 0},
{ 0x88F2, 0xD0D8, WORD_LEN, 0},
{ 0x88F4, 0x2555, WORD_LEN, 0},
{ 0x88F6, 0x1441, WORD_LEN, 0},
{ 0x88F8, 0x77A9, WORD_LEN, 0},
{ 0x88FA, 0xA515, WORD_LEN, 0},
{ 0x88FC, 0xD0D6, WORD_LEN, 0},
{ 0x88FE, 0xA020, WORD_LEN, 0},
{ 0x8900, 0xD1D6, WORD_LEN, 0},
{ 0x8902, 0x70E9, WORD_LEN, 0},
{ 0x8904, 0x0EEE, WORD_LEN, 0},
{ 0x8906, 0x06A4, WORD_LEN, 0},
{ 0x8908, 0xDA44, WORD_LEN, 0},
{ 0x890A, 0xD0D5, WORD_LEN, 0},
{ 0x890C, 0xD1D5, WORD_LEN, 0},
{ 0x890E, 0xDAF0, WORD_LEN, 0},
{ 0x8910, 0xDB08, WORD_LEN, 0},
{ 0x8912, 0xA502, WORD_LEN, 0},
{ 0x8914, 0xD0D4, WORD_LEN, 0},
{ 0x8916, 0x19B0, WORD_LEN, 0},
{ 0x8918, 0x00C2, WORD_LEN, 0},
{ 0x891A, 0x19B1, WORD_LEN, 0},
{ 0x891C, 0x0082, WORD_LEN, 0},
{ 0x891E, 0x19B4, WORD_LEN, 0},
{ 0x8920, 0x00C2, WORD_LEN, 0},
{ 0x8922, 0xA0E0, WORD_LEN, 0},
{ 0x8924, 0xD0D1, WORD_LEN, 0},
{ 0x8926, 0x19B5, WORD_LEN, 0},
{ 0x8928, 0x0082, WORD_LEN, 0},
{ 0x892A, 0xB0CB, WORD_LEN, 0},
{ 0x892C, 0x8900, WORD_LEN, 0},
{ 0x892E, 0xB8A6, WORD_LEN, 0},
{ 0x8930, 0xA900, WORD_LEN, 0},
{ 0x8932, 0xD851, WORD_LEN, 0},
{ 0x8934, 0x19B2, WORD_LEN, 0},
{ 0x8936, 0x0002, WORD_LEN, 0},
{ 0x8938, 0xD852, WORD_LEN, 0},
{ 0x893A, 0x19B3, WORD_LEN, 0},
{ 0x893C, 0x0002, WORD_LEN, 0},
{ 0x893E, 0xD855, WORD_LEN, 0},
{ 0x8940, 0x19B6, WORD_LEN, 0},
{ 0x8942, 0x0002, WORD_LEN, 0},
{ 0x8944, 0xD856, WORD_LEN, 0},
{ 0x8946, 0x19B7, WORD_LEN, 0},
{ 0x8948, 0x0002, WORD_LEN, 0},
{ 0x894A, 0xD896, WORD_LEN, 0},
{ 0x894C, 0x19B8, WORD_LEN, 0},
{ 0x894E, 0x0004, WORD_LEN, 0},
{ 0x8950, 0xD814, WORD_LEN, 0},
{ 0x8952, 0x19BA, WORD_LEN, 0},
{ 0x8954, 0x0004, WORD_LEN, 0},
{ 0x8956, 0xD805, WORD_LEN, 0},
{ 0x8958, 0xB111, WORD_LEN, 0},
{ 0x895A, 0xD1C5, WORD_LEN, 0},
{ 0x895C, 0x2556, WORD_LEN, 0},
{ 0x895E, 0x12C0, WORD_LEN, 0},
{ 0x8960, 0x0E92, WORD_LEN, 0},
{ 0x8962, 0x06A4, WORD_LEN, 0},
{ 0x8964, 0xDA2C, WORD_LEN, 0},
{ 0x8966, 0xD0C3, WORD_LEN, 0},
{ 0x8968, 0x2556, WORD_LEN, 0},
{ 0x896A, 0x12C1, WORD_LEN, 0},
{ 0x896C, 0xA519, WORD_LEN, 0},
{ 0x896E, 0xD0C2, WORD_LEN, 0},
{ 0x8970, 0x0145, WORD_LEN, 0},
{ 0x8972, 0x06E4, WORD_LEN, 0},
{ 0x8974, 0xA020, WORD_LEN, 0},
{ 0x8976, 0x78E0, WORD_LEN, 0},
{ 0x8978, 0xD0C0, WORD_LEN, 0},
{ 0x897A, 0xD1B5, WORD_LEN, 0},
{ 0x897C, 0x1984, WORD_LEN, 0},
{ 0x897E, 0x0000, WORD_LEN, 0},
{ 0x8980, 0xD0BF, WORD_LEN, 0},
{ 0x8982, 0x1988, WORD_LEN, 0},
{ 0x8984, 0x0000, WORD_LEN, 0},
{ 0x8986, 0xD0BF, WORD_LEN, 0},
{ 0x8988, 0x198C, WORD_LEN, 0},
{ 0x898A, 0x0000, WORD_LEN, 0},
{ 0x898C, 0xD0BE, WORD_LEN, 0},
{ 0x898E, 0x1990, WORD_LEN, 0},
{ 0x8990, 0x0000, WORD_LEN, 0},
{ 0x8992, 0xD0BE, WORD_LEN, 0},
{ 0x8994, 0x2180, WORD_LEN, 0},
{ 0x8996, 0x0102, WORD_LEN, 0},
{ 0x8998, 0x7FE0, WORD_LEN, 0},
{ 0x899A, 0xA020, WORD_LEN, 0},
{ 0x899C, 0xC0F1, WORD_LEN, 0},
{ 0x899E, 0x08B6, WORD_LEN, 0},
{ 0x89A0, 0x06E4, WORD_LEN, 0},
{ 0x89A2, 0xDB03, WORD_LEN, 0},
{ 0x89A4, 0xD2BA, WORD_LEN, 0},
{ 0x89A6, 0x8A2E, WORD_LEN, 0},
{ 0x89A8, 0x8ACF, WORD_LEN, 0},
{ 0x89AA, 0xB908, WORD_LEN, 0},
{ 0x89AC, 0x79C5, WORD_LEN, 0},
{ 0x89AE, 0xDD65, WORD_LEN, 0},
{ 0x89B0, 0x094F, WORD_LEN, 0},
{ 0x89B2, 0x00D1, WORD_LEN, 0},
{ 0x89B4, 0xD90A, WORD_LEN, 0},
{ 0x89B6, 0x1A24, WORD_LEN, 0},
{ 0x89B8, 0x0042, WORD_LEN, 0},
{ 0x89BA, 0x8A24, WORD_LEN, 0},
{ 0x89BC, 0xE1E5, WORD_LEN, 0},
{ 0x89BE, 0xF6C9, WORD_LEN, 0},
{ 0x89C0, 0xD902, WORD_LEN, 0},
{ 0x89C2, 0x2941, WORD_LEN, 0},
{ 0x89C4, 0x0200, WORD_LEN, 0},
{ 0x89C6, 0xAA0E, WORD_LEN, 0},
{ 0x89C8, 0xAA2F, WORD_LEN, 0},
{ 0x89CA, 0x70A9, WORD_LEN, 0},
{ 0x89CC, 0xF014, WORD_LEN, 0},
{ 0x89CE, 0xE1C8, WORD_LEN, 0},
{ 0x89D0, 0x0036, WORD_LEN, 0},
{ 0x89D2, 0x000B, WORD_LEN, 0},
{ 0x89D4, 0xE0C8, WORD_LEN, 0},
{ 0x89D6, 0x003A, WORD_LEN, 0},
{ 0x89D8, 0x000A, WORD_LEN, 0},
{ 0x89DA, 0xD901, WORD_LEN, 0},
{ 0x89DC, 0x2941, WORD_LEN, 0},
{ 0x89DE, 0x0200, WORD_LEN, 0},
{ 0x89E0, 0xAA0E, WORD_LEN, 0},
{ 0x89E2, 0xAA2F, WORD_LEN, 0},
{ 0x89E4, 0xD848, WORD_LEN, 0},
{ 0x89E6, 0xF008, WORD_LEN, 0},
{ 0x89E8, 0xD900, WORD_LEN, 0},
{ 0x89EA, 0x2941, WORD_LEN, 0},
{ 0x89EC, 0x0200, WORD_LEN, 0},
{ 0x89EE, 0xAA0E, WORD_LEN, 0},
{ 0x89F0, 0xAA2F, WORD_LEN, 0},
{ 0x89F2, 0xD820, WORD_LEN, 0},
{ 0x89F4, 0xD2A7, WORD_LEN, 0},
{ 0x89F6, 0x8A26, WORD_LEN, 0},
{ 0x89F8, 0xB961, WORD_LEN, 0},
{ 0x89FA, 0xAA26, WORD_LEN, 0},
{ 0x89FC, 0xF00D, WORD_LEN, 0},
{ 0x89FE, 0x091F, WORD_LEN, 0},
{ 0x8A00, 0x0091, WORD_LEN, 0},
{ 0x8A02, 0x8A24, WORD_LEN, 0},
{ 0x8A04, 0xF1E5, WORD_LEN, 0},
{ 0x8A06, 0x0913, WORD_LEN, 0},
{ 0x8A08, 0x0812, WORD_LEN, 0},
{ 0x8A0A, 0x08E1, WORD_LEN, 0},
{ 0x8A0C, 0x8812, WORD_LEN, 0},
{ 0x8A0E, 0x2B41, WORD_LEN, 0},
{ 0x8A10, 0x0201, WORD_LEN, 0},
{ 0x8A12, 0xAA2E, WORD_LEN, 0},
{ 0x8A14, 0xAA6F, WORD_LEN, 0},
{ 0x8A16, 0x00A9, WORD_LEN, 0},
{ 0x8A18, 0x06C4, WORD_LEN, 0},
{ 0x8A1A, 0x09F7, WORD_LEN, 0},
{ 0x8A1C, 0x8051, WORD_LEN, 0},
{ 0x8A1E, 0x8A24, WORD_LEN, 0},
{ 0x8A20, 0xF1F3, WORD_LEN, 0},
{ 0x8A22, 0x78E0, WORD_LEN, 0},
{ 0x8A24, 0xC0F1, WORD_LEN, 0},
{ 0x8A26, 0x0822, WORD_LEN, 0},
{ 0x8A28, 0x06C4, WORD_LEN, 0},
{ 0x8A2A, 0xD699, WORD_LEN, 0},
{ 0x8A2C, 0x7508, WORD_LEN, 0},
{ 0x8A2E, 0xD199, WORD_LEN, 0},
{ 0x8A30, 0x8E01, WORD_LEN, 0},
{ 0x8A32, 0x1146, WORD_LEN, 0},
{ 0x8A34, 0x0082, WORD_LEN, 0},
{ 0x8A36, 0x2046, WORD_LEN, 0},
{ 0x8A38, 0x00C0, WORD_LEN, 0},
{ 0x8A3A, 0xAE01, WORD_LEN, 0},
{ 0x8A3C, 0x1145, WORD_LEN, 0},
{ 0x8A3E, 0x0080, WORD_LEN, 0},
{ 0x8A40, 0xB808, WORD_LEN, 0},
{ 0x8A42, 0x7845, WORD_LEN, 0},
{ 0x8A44, 0x0817, WORD_LEN, 0},
{ 0x8A46, 0x001E, WORD_LEN, 0},
{ 0x8A48, 0x8900, WORD_LEN, 0},
{ 0x8A4A, 0x8941, WORD_LEN, 0},
{ 0x8A4C, 0xB808, WORD_LEN, 0},
{ 0x8A4E, 0x7845, WORD_LEN, 0},
{ 0x8A50, 0x080B, WORD_LEN, 0},
{ 0x8A52, 0x00DE, WORD_LEN, 0},
{ 0x8A54, 0x70A9, WORD_LEN, 0},
{ 0x8A56, 0xFFD2, WORD_LEN, 0},
{ 0x8A58, 0x7508, WORD_LEN, 0},
{ 0x8A5A, 0x1604, WORD_LEN, 0},
{ 0x8A5C, 0x1090, WORD_LEN, 0},
{ 0x8A5E, 0x0D93, WORD_LEN, 0},
{ 0x8A60, 0x1400, WORD_LEN, 0},
{ 0x8A62, 0x8EEA, WORD_LEN, 0},
{ 0x8A64, 0x8E0B, WORD_LEN, 0},
{ 0x8A66, 0x214A, WORD_LEN, 0},
{ 0x8A68, 0x2040, WORD_LEN, 0},
{ 0x8A6A, 0x8E2D, WORD_LEN, 0},
{ 0x8A6C, 0xBF08, WORD_LEN, 0},
{ 0x8A6E, 0x7F05, WORD_LEN, 0},
{ 0x8A70, 0x8E0C, WORD_LEN, 0},
{ 0x8A72, 0xB808, WORD_LEN, 0},
{ 0x8A74, 0x7825, WORD_LEN, 0},
{ 0x8A76, 0x7710, WORD_LEN, 0},
{ 0x8A78, 0x21C2, WORD_LEN, 0},
{ 0x8A7A, 0x244C, WORD_LEN, 0},
{ 0x8A7C, 0x081D, WORD_LEN, 0},
{ 0x8A7E, 0x03E3, WORD_LEN, 0},
{ 0x8A80, 0xD9FF, WORD_LEN, 0},
{ 0x8A82, 0x2702, WORD_LEN, 0},
{ 0x8A84, 0x1002, WORD_LEN, 0},
{ 0x8A86, 0x2A05, WORD_LEN, 0},
{ 0x8A88, 0x037E, WORD_LEN, 0},
{ 0x8A8A, 0x089E, WORD_LEN, 0},
{ 0x8A8C, 0x06E4, WORD_LEN, 0},
{ 0x8A8E, 0x702F, WORD_LEN, 0},
{ 0x8A90, 0x7810, WORD_LEN, 0},
{ 0x8A92, 0x7F02, WORD_LEN, 0},
{ 0x8A94, 0x7FF0, WORD_LEN, 0},
{ 0x8A96, 0xF00B, WORD_LEN, 0},
{ 0x8A98, 0x78E2, WORD_LEN, 0},
{ 0x8A9A, 0x2805, WORD_LEN, 0},
{ 0x8A9C, 0x037E, WORD_LEN, 0},
{ 0x8A9E, 0x088A, WORD_LEN, 0},
{ 0x8AA0, 0x06E4, WORD_LEN, 0},
{ 0x8AA2, 0x702F, WORD_LEN, 0},
{ 0x8AA4, 0x7810, WORD_LEN, 0},
{ 0x8AA6, 0x671F, WORD_LEN, 0},
{ 0x8AA8, 0x7FF0, WORD_LEN, 0},
{ 0x8AAA, 0x8E08, WORD_LEN, 0},
{ 0x8AAC, 0xD17A, WORD_LEN, 0},
{ 0x8AAE, 0x7FEF, WORD_LEN, 0},
{ 0x8AB0, 0xBF06, WORD_LEN, 0},
{ 0x8AB2, 0xB8C3, WORD_LEN, 0},
{ 0x8AB4, 0x78E5, WORD_LEN, 0},
{ 0x8AB6, 0xB88F, WORD_LEN, 0},
{ 0x8AB8, 0x1908, WORD_LEN, 0},
{ 0x8ABA, 0x0024, WORD_LEN, 0},
{ 0x8ABC, 0x2841, WORD_LEN, 0},
{ 0x8ABE, 0x0201, WORD_LEN, 0},
{ 0x8AC0, 0x1E26, WORD_LEN, 0},
{ 0x8AC2, 0x1042, WORD_LEN, 0},
{ 0x8AC4, 0x0D15, WORD_LEN, 0},
{ 0x8AC6, 0x1423, WORD_LEN, 0},
{ 0x8AC8, 0x1E27, WORD_LEN, 0},
{ 0x8ACA, 0x1002, WORD_LEN, 0},
{ 0x8ACC, 0x214C, WORD_LEN, 0},
{ 0x8ACE, 0xA000, WORD_LEN, 0},
{ 0x8AD0, 0x214A, WORD_LEN, 0},
{ 0x8AD2, 0x2040, WORD_LEN, 0},
{ 0x8AD4, 0x21C2, WORD_LEN, 0},
{ 0x8AD6, 0x2442, WORD_LEN, 0},
{ 0x8AD8, 0x8E21, WORD_LEN, 0},
{ 0x8ADA, 0x214F, WORD_LEN, 0},
{ 0x8ADC, 0x0040, WORD_LEN, 0},
{ 0x8ADE, 0x090F, WORD_LEN, 0},
{ 0x8AE0, 0x2010, WORD_LEN, 0},
{ 0x8AE2, 0x2145, WORD_LEN, 0},
{ 0x8AE4, 0x0181, WORD_LEN, 0},
{ 0x8AE6, 0xAE21, WORD_LEN, 0},
{ 0x8AE8, 0xF003, WORD_LEN, 0},
{ 0x8AEA, 0xB8A2, WORD_LEN, 0},
{ 0x8AEC, 0xAE01, WORD_LEN, 0},
{ 0x8AEE, 0x0C22, WORD_LEN, 0},
{ 0x8AF0, 0xFFE3, WORD_LEN, 0},
{ 0x8AF2, 0x70A9, WORD_LEN, 0},
{ 0x8AF4, 0x07B1, WORD_LEN, 0},
{ 0x8AF6, 0x0684, WORD_LEN, 0},
{ 0x8AF8, 0xC0F1, WORD_LEN, 0},
{ 0x8AFA, 0x0F5A, WORD_LEN, 0},
{ 0x8AFC, 0x0684, WORD_LEN, 0},
{ 0x8AFE, 0xD564, WORD_LEN, 0},
{ 0x8B00, 0x8D00, WORD_LEN, 0},
{ 0x8B02, 0x083D, WORD_LEN, 0},
{ 0x8B04, 0x01DE, WORD_LEN, 0},
{ 0x8B06, 0xB8A7, WORD_LEN, 0},
{ 0x8B08, 0x790F, WORD_LEN, 0},
{ 0x8B0A, 0xD660, WORD_LEN, 0},
{ 0x8B0C, 0xAD00, WORD_LEN, 0},
{ 0x8B0E, 0x091D, WORD_LEN, 0},
{ 0x8B10, 0x0050, WORD_LEN, 0},
{ 0x8B12, 0x091D, WORD_LEN, 0},
{ 0x8B14, 0x0110, WORD_LEN, 0},
{ 0x8B16, 0x0911, WORD_LEN, 0},
{ 0x8B18, 0x0210, WORD_LEN, 0},
{ 0x8B1A, 0xD060, WORD_LEN, 0},
{ 0x8B1C, 0x0B56, WORD_LEN, 0},
{ 0x8B1E, 0xFFE3, WORD_LEN, 0},
{ 0x8B20, 0xA600, WORD_LEN, 0},
{ 0x8B22, 0xF008, WORD_LEN, 0},
{ 0x8B24, 0xD05E, WORD_LEN, 0},
{ 0x8B26, 0xF005, WORD_LEN, 0},
{ 0x8B28, 0xD05E, WORD_LEN, 0},
{ 0x8B2A, 0xF003, WORD_LEN, 0},
{ 0x8B2C, 0xD05E, WORD_LEN, 0},
{ 0x8B2E, 0xA600, WORD_LEN, 0},
{ 0x8B30, 0x8600, WORD_LEN, 0},
{ 0x8B32, 0x8023, WORD_LEN, 0},
{ 0x8B34, 0x7960, WORD_LEN, 0},
{ 0x8B36, 0xD801, WORD_LEN, 0},
{ 0x8B38, 0xD800, WORD_LEN, 0},
{ 0x8B3A, 0xAD05, WORD_LEN, 0},
{ 0x8B3C, 0x1528, WORD_LEN, 0},
{ 0x8B3E, 0x1080, WORD_LEN, 0},
{ 0x8B40, 0x0817, WORD_LEN, 0},
{ 0x8B42, 0x01DE, WORD_LEN, 0},
{ 0x8B44, 0xB8A7, WORD_LEN, 0},
{ 0x8B46, 0x1D28, WORD_LEN, 0},
{ 0x8B48, 0x1002, WORD_LEN, 0},
{ 0x8B4A, 0xD050, WORD_LEN, 0},
{ 0x8B4C, 0x8000, WORD_LEN, 0},
{ 0x8B4E, 0x8023, WORD_LEN, 0},
{ 0x8B50, 0x7960, WORD_LEN, 0},
{ 0x8B52, 0x1528, WORD_LEN, 0},
{ 0x8B54, 0x1080, WORD_LEN, 0},
{ 0x8B56, 0x0769, WORD_LEN, 0},
{ 0x8B58, 0x0684, WORD_LEN, 0},
{ 0x8B5A, 0x78E0, WORD_LEN, 0},
{ 0x8B5C, 0xD24C, WORD_LEN, 0},
{ 0x8B5E, 0x8A21, WORD_LEN, 0},
{ 0x8B60, 0xB9A1, WORD_LEN, 0},
{ 0x8B62, 0x782F, WORD_LEN, 0},
{ 0x8B64, 0x7FE0, WORD_LEN, 0},
{ 0x8B66, 0xAA21, WORD_LEN, 0},
{ 0x8B68, 0xD150, WORD_LEN, 0},
{ 0x8B6A, 0xD251, WORD_LEN, 0},
{ 0x8B6C, 0x11B2, WORD_LEN, 0},
{ 0x8B6E, 0x8903, WORD_LEN, 0},
{ 0x8B70, 0x1252, WORD_LEN, 0},
{ 0x8B72, 0x0100, WORD_LEN, 0},
{ 0x8B74, 0x7B6F, WORD_LEN, 0},
{ 0x8B76, 0xB808, WORD_LEN, 0},
{ 0x8B78, 0x2004, WORD_LEN, 0},
{ 0x8B7A, 0x0F80, WORD_LEN, 0},
{ 0x8B7C, 0x0000, WORD_LEN, 0},
{ 0x8B7E, 0xFF00, WORD_LEN, 0},
{ 0x8B80, 0x7865, WORD_LEN, 0},
{ 0x8B82, 0x19B2, WORD_LEN, 0},
{ 0x8B84, 0x8024, WORD_LEN, 0},
{ 0x8B86, 0xD04B, WORD_LEN, 0},
{ 0x8B88, 0x8801, WORD_LEN, 0},
{ 0x8B8A, 0x2051, WORD_LEN, 0},
{ 0x8B8C, 0x8040, WORD_LEN, 0},
{ 0x8B8E, 0xD800, WORD_LEN, 0},
{ 0x8B90, 0xF403, WORD_LEN, 0},
{ 0x8B92, 0x1234, WORD_LEN, 0},
{ 0x8B94, 0x0080, WORD_LEN, 0},
{ 0x8B96, 0x1955, WORD_LEN, 0},
{ 0x8B98, 0x803C, WORD_LEN, 0},
{ 0x8B9A, 0x1233, WORD_LEN, 0},
{ 0x8B9C, 0x0080, WORD_LEN, 0},
{ 0x8B9E, 0xB802, WORD_LEN, 0},
{ 0x8BA0, 0x1957, WORD_LEN, 0},
{ 0x8BA2, 0x803C, WORD_LEN, 0},
{ 0x8BA4, 0x1958, WORD_LEN, 0},
{ 0x8BA6, 0x803C, WORD_LEN, 0},
{ 0x8BA8, 0x1959, WORD_LEN, 0},
{ 0x8BAA, 0x803C, WORD_LEN, 0},
{ 0x8BAC, 0x195A, WORD_LEN, 0},
{ 0x8BAE, 0x803C, WORD_LEN, 0},
{ 0x8BB0, 0x7EE0, WORD_LEN, 0},
{ 0x8BB2, 0x78E0, WORD_LEN, 0},
{ 0x8BB4, 0xC0F1, WORD_LEN, 0},
{ 0x8BB6, 0x0E9A, WORD_LEN, 0},
{ 0x8BB8, 0x0684, WORD_LEN, 0},
{ 0x8BBA, 0xD523, WORD_LEN, 0},
{ 0x8BBC, 0x8D2C, WORD_LEN, 0},
{ 0x8BBE, 0x0983, WORD_LEN, 0},
{ 0x8BC0, 0x0010, WORD_LEN, 0},
{ 0x8BC2, 0xD23C, WORD_LEN, 0},
{ 0x8BC4, 0x123A, WORD_LEN, 0},
{ 0x8BC6, 0x0083, WORD_LEN, 0},
{ 0x8BC8, 0x123B, WORD_LEN, 0},
{ 0x8BCA, 0x008F, WORD_LEN, 0},
{ 0x8BCC, 0x8D55, WORD_LEN, 0},
{ 0x8BCE, 0xBB08, WORD_LEN, 0},
{ 0x8BD0, 0x7BE5, WORD_LEN, 0},
{ 0x8BD2, 0x8DF6, WORD_LEN, 0},
{ 0x8BD4, 0xBA08, WORD_LEN, 0},
{ 0x8BD6, 0x7AE5, WORD_LEN, 0},
{ 0x8BD8, 0x0B0D, WORD_LEN, 0},
{ 0x8BDA, 0x00A3, WORD_LEN, 0},
{ 0x8BDC, 0x8DC5, WORD_LEN, 0},
{ 0x8BDE, 0x8D54, WORD_LEN, 0},
{ 0x8BE0, 0xAD45, WORD_LEN, 0},
{ 0x8BE2, 0xF026, WORD_LEN, 0},
{ 0x8BE4, 0x65DB, WORD_LEN, 0},
{ 0x8BE6, 0x8B6D, WORD_LEN, 0},
{ 0x8BE8, 0x0815, WORD_LEN, 0},
{ 0x8BEA, 0x00E2, WORD_LEN, 0},
{ 0x8BEC, 0x65DA, WORD_LEN, 0},
{ 0x8BEE, 0x8A51, WORD_LEN, 0},
{ 0x8BF0, 0x0A0D, WORD_LEN, 0},
{ 0x8BF2, 0x0002, WORD_LEN, 0},
{ 0x8BF4, 0xE683, WORD_LEN, 0},
{ 0x8BF6, 0x22CA, WORD_LEN, 0},
{ 0x8BF8, 0x038B, WORD_LEN, 0},
{ 0x8BFA, 0xF69A, WORD_LEN, 0},
{ 0x8BFC, 0xDA00, WORD_LEN, 0},
{ 0x8BFE, 0xAD45, WORD_LEN, 0},
{ 0x8C00, 0x2540, WORD_LEN, 0},
{ 0x8C02, 0x1343, WORD_LEN, 0},
{ 0x8C04, 0xE180, WORD_LEN, 0},
{ 0x8C06, 0x2540, WORD_LEN, 0},
{ 0x8C08, 0x144F, WORD_LEN, 0},
{ 0x8C0A, 0xF6D2, WORD_LEN, 0},
{ 0x8C0C, 0x719F, WORD_LEN, 0},
{ 0x8C0E, 0x78E0, WORD_LEN, 0},
{ 0x8C10, 0x20A8, WORD_LEN, 0},
{ 0x8C12, 0x0280, WORD_LEN, 0},
{ 0x8C14, 0x8B20, WORD_LEN, 0},
{ 0x8C16, 0x0813, WORD_LEN, 0},
{ 0x8C18, 0x0043, WORD_LEN, 0},
{ 0x8C1A, 0xE201, WORD_LEN, 0},
{ 0x8C1C, 0x7A4F, WORD_LEN, 0},
{ 0x8C1E, 0xAD45, WORD_LEN, 0},
{ 0x8C20, 0xE301, WORD_LEN, 0},
{ 0x8C22, 0xE701, WORD_LEN, 0},
{ 0x8C24, 0xF004, WORD_LEN, 0},
{ 0x8C26, 0x8F20, WORD_LEN, 0},
{ 0x8C28, 0x09F3, WORD_LEN, 0},
{ 0x8C2A, 0x8002, WORD_LEN, 0},
{ 0x8C2C, 0xD022, WORD_LEN, 0},
{ 0x8C2E, 0x8800, WORD_LEN, 0},
{ 0x8C30, 0xE803, WORD_LEN, 0},
{ 0x8C32, 0x0E0F, WORD_LEN, 0},
{ 0x8C34, 0x1080, WORD_LEN, 0},
{ 0x8C36, 0xD008, WORD_LEN, 0},
{ 0x8C38, 0x8000, WORD_LEN, 0},
{ 0x8C3A, 0x8002, WORD_LEN, 0},
{ 0x8C3C, 0x7840, WORD_LEN, 0},
{ 0x8C3E, 0x0679, WORD_LEN, 0},
{ 0x8C40, 0x0684, WORD_LEN, 0},
{ 0x8C42, 0x78E0, WORD_LEN, 0},
{ 0x8C44, 0xFF80, WORD_LEN, 0},
{ 0x8C46, 0x0644, WORD_LEN, 0},
{ 0x8C48, 0x0000, WORD_LEN, 0},
{ 0x8C4A, 0xF978, WORD_LEN, 0},
{ 0x8C4C, 0xFF80, WORD_LEN, 0},
{ 0x8C4E, 0x1030, WORD_LEN, 0},
{ 0x8C50, 0xFF80, WORD_LEN, 0},
{ 0x8C52, 0x0BB4, WORD_LEN, 0},
{ 0x8C54, 0x8000, WORD_LEN, 0},
{ 0x8C56, 0x0164, WORD_LEN, 0},
{ 0x8C58, 0x0000, WORD_LEN, 0},
{ 0x8C5A, 0xF9AC, WORD_LEN, 0},
{ 0x8C5C, 0xFF80, WORD_LEN, 0},
{ 0x8C5E, 0x0B68, WORD_LEN, 0},
{ 0x8C60, 0xFF80, WORD_LEN, 0},
{ 0x8C62, 0x0314, WORD_LEN, 0},
{ 0x8C64, 0x8000, WORD_LEN, 0},
{ 0x8C66, 0x016C, WORD_LEN, 0},
{ 0x8C68, 0xFF80, WORD_LEN, 0},
{ 0x8C6A, 0x0694, WORD_LEN, 0},
{ 0x8C6C, 0x0000, WORD_LEN, 0},
{ 0x8C6E, 0xF444, WORD_LEN, 0},
{ 0x8C70, 0xFF80, WORD_LEN, 0},
{ 0x8C72, 0x0CB8, WORD_LEN, 0},
{ 0x8C74, 0x8000, WORD_LEN, 0},
{ 0x8C76, 0x009C, WORD_LEN, 0},
{ 0x8C78, 0xFF80, WORD_LEN, 0},
{ 0x8C7A, 0x0AF8, WORD_LEN, 0},
{ 0x8C7C, 0xFF80, WORD_LEN, 0},
{ 0x8C7E, 0x0A24, WORD_LEN, 0},
{ 0x8C80, 0xFF80, WORD_LEN, 0},
{ 0x8C82, 0x0B5C, WORD_LEN, 0},
{ 0x8C84, 0x0000, WORD_LEN, 0},
{ 0x8C86, 0x0998, WORD_LEN, 0},
{ 0x8C88, 0x8000, WORD_LEN, 0},
{ 0x8C8A, 0x0008, WORD_LEN, 0},
{ 0x8C8C, 0xFF80, WORD_LEN, 0},
{ 0x8C8E, 0x0158, WORD_LEN, 0},
{ 0x8C90, 0xFF80, WORD_LEN, 0},
{ 0x8C92, 0x0290, WORD_LEN, 0},
{ 0x8C94, 0xFF00, WORD_LEN, 0},
{ 0x8C96, 0x0618, WORD_LEN, 0},
{ 0x8C98, 0x0000, WORD_LEN, 0},
{ 0x8C9A, 0xF1A4, WORD_LEN, 0},
{ 0x8C9C, 0xFF80, WORD_LEN, 0},
{ 0x8C9E, 0x10B4, WORD_LEN, 0},
{ 0x8CA0, 0x0000, WORD_LEN, 0},
{ 0x8CA2, 0xF1B4, WORD_LEN, 0},
{ 0x8CA4, 0x0000, WORD_LEN, 0},
{ 0x8CA6, 0xF1C4, WORD_LEN, 0},
{ 0x8CA8, 0xFF00, WORD_LEN, 0},
{ 0x8CAA, 0x33CC, WORD_LEN, 0},
{ 0x8CAC, 0xFF80, WORD_LEN, 0},
{ 0x8CAE, 0x0658, WORD_LEN, 0},
{ 0x8CB0, 0xFF80, WORD_LEN, 0},
{ 0x8CB2, 0x0250, WORD_LEN, 0},
{ 0x8CB4, 0x8000, WORD_LEN, 0},
{ 0x8CB6, 0x0168, WORD_LEN, 0},
{ 0x8CB8, 0xC0F1, WORD_LEN, 0},
{ 0x8CBA, 0x0D9A, WORD_LEN, 0},
{ 0x8CBC, 0x0684, WORD_LEN, 0},
{ 0x8CBE, 0x17A4, WORD_LEN, 0},
{ 0x8CC0, 0xF00E, WORD_LEN, 0},
{ 0x8CC2, 0x8E01, WORD_LEN, 0},
{ 0x8CC4, 0xB8A4, WORD_LEN, 0},
{ 0x8CC6, 0xAE01, WORD_LEN, 0},
{ 0x8CC8, 0x8E09, WORD_LEN, 0},
{ 0x8CCA, 0x2051, WORD_LEN, 0},
{ 0x8CCC, 0x8000, WORD_LEN, 0},
{ 0x8CCE, 0xF29C, WORD_LEN, 0},
{ 0x8CD0, 0x17E0, WORD_LEN, 0},
{ 0x8CD2, 0xF00D, WORD_LEN, 0},
{ 0x8CD4, 0x153A, WORD_LEN, 0},
{ 0x8CD6, 0x1080, WORD_LEN, 0},
{ 0x8CD8, 0x153B, WORD_LEN, 0},
{ 0x8CDA, 0x1081, WORD_LEN, 0},
{ 0x8CDC, 0xB808, WORD_LEN, 0},
{ 0x8CDE, 0x7825, WORD_LEN, 0},
{ 0x8CE0, 0x16B8, WORD_LEN, 0},
{ 0x8CE2, 0x1101, WORD_LEN, 0},
{ 0x8CE4, 0x092B, WORD_LEN, 0},
{ 0x8CE6, 0x0003, WORD_LEN, 0},
{ 0x8CE8, 0x16B0, WORD_LEN, 0},
{ 0x8CEA, 0x1082, WORD_LEN, 0},
{ 0x8CEC, 0x1E3C, WORD_LEN, 0},
{ 0x8CEE, 0x1082, WORD_LEN, 0},
{ 0x8CF0, 0x16B1, WORD_LEN, 0},
{ 0x8CF2, 0x1082, WORD_LEN, 0},
{ 0x8CF4, 0x1E3D, WORD_LEN, 0},
{ 0x8CF6, 0x1082, WORD_LEN, 0},
{ 0x8CF8, 0x16B4, WORD_LEN, 0},
{ 0x8CFA, 0x1082, WORD_LEN, 0},
{ 0x8CFC, 0x1E3E, WORD_LEN, 0},
{ 0x8CFE, 0x1082, WORD_LEN, 0},
{ 0x8D00, 0x16B5, WORD_LEN, 0},
{ 0x8D02, 0x1082, WORD_LEN, 0},
{ 0x8D04, 0x1E3F, WORD_LEN, 0},
{ 0x8D06, 0x1082, WORD_LEN, 0},
{ 0x8D08, 0x8E40, WORD_LEN, 0},
{ 0x8D0A, 0xBAA6, WORD_LEN, 0},
{ 0x8D0C, 0xAE40, WORD_LEN, 0},
{ 0x8D0E, 0x0991, WORD_LEN, 0},
{ 0x8D10, 0x0022, WORD_LEN, 0},
{ 0x8D12, 0x16BA, WORD_LEN, 0},
{ 0x8D14, 0x1102, WORD_LEN, 0},
{ 0x8D16, 0x0A89, WORD_LEN, 0},
{ 0x8D18, 0x0003, WORD_LEN, 0},
{ 0x8D1A, 0x16B2, WORD_LEN, 0},
{ 0x8D1C, 0x1084, WORD_LEN, 0},
{ 0x8D1E, 0x0ECA, WORD_LEN, 0},
{ 0x8D20, 0x0664, WORD_LEN, 0},
{ 0x8D22, 0x16B0, WORD_LEN, 0},
{ 0x8D24, 0x1083, WORD_LEN, 0},
{ 0x8D26, 0x1E3C, WORD_LEN, 0},
{ 0x8D28, 0x1002, WORD_LEN, 0},
{ 0x8D2A, 0x153A, WORD_LEN, 0},
{ 0x8D2C, 0x1080, WORD_LEN, 0},
{ 0x8D2E, 0x153B, WORD_LEN, 0},
{ 0x8D30, 0x1081, WORD_LEN, 0},
{ 0x8D32, 0x16B3, WORD_LEN, 0},
{ 0x8D34, 0x1084, WORD_LEN, 0},
{ 0x8D36, 0xB808, WORD_LEN, 0},
{ 0x8D38, 0x7825, WORD_LEN, 0},
{ 0x8D3A, 0x16B8, WORD_LEN, 0},
{ 0x8D3C, 0x1101, WORD_LEN, 0},
{ 0x8D3E, 0x16BA, WORD_LEN, 0},
{ 0x8D40, 0x1102, WORD_LEN, 0},
{ 0x8D42, 0x0EA6, WORD_LEN, 0},
{ 0x8D44, 0x0664, WORD_LEN, 0},
{ 0x8D46, 0x16B1, WORD_LEN, 0},
{ 0x8D48, 0x1083, WORD_LEN, 0},
{ 0x8D4A, 0x1E3D, WORD_LEN, 0},
{ 0x8D4C, 0x1002, WORD_LEN, 0},
{ 0x8D4E, 0x153A, WORD_LEN, 0},
{ 0x8D50, 0x1080, WORD_LEN, 0},
{ 0x8D52, 0x153B, WORD_LEN, 0},
{ 0x8D54, 0x1081, WORD_LEN, 0},
{ 0x8D56, 0x16B6, WORD_LEN, 0},
{ 0x8D58, 0x1084, WORD_LEN, 0},
{ 0x8D5A, 0xB808, WORD_LEN, 0},
{ 0x8D5C, 0x7825, WORD_LEN, 0},
{ 0x8D5E, 0x16B8, WORD_LEN, 0},
{ 0x8D60, 0x1101, WORD_LEN, 0},
{ 0x8D62, 0x16BA, WORD_LEN, 0},
{ 0x8D64, 0x1102, WORD_LEN, 0},
{ 0x8D66, 0x0E82, WORD_LEN, 0},
{ 0x8D68, 0x0664, WORD_LEN, 0},
{ 0x8D6A, 0x16B4, WORD_LEN, 0},
{ 0x8D6C, 0x1083, WORD_LEN, 0},
{ 0x8D6E, 0x1E3E, WORD_LEN, 0},
{ 0x8D70, 0x1002, WORD_LEN, 0},
{ 0x8D72, 0x153A, WORD_LEN, 0},
{ 0x8D74, 0x1080, WORD_LEN, 0},
{ 0x8D76, 0x153B, WORD_LEN, 0},
{ 0x8D78, 0x1081, WORD_LEN, 0},
{ 0x8D7A, 0x16B7, WORD_LEN, 0},
{ 0x8D7C, 0x1084, WORD_LEN, 0},
{ 0x8D7E, 0xB808, WORD_LEN, 0},
{ 0x8D80, 0x7825, WORD_LEN, 0},
{ 0x8D82, 0x16B8, WORD_LEN, 0},
{ 0x8D84, 0x1101, WORD_LEN, 0},
{ 0x8D86, 0x16BA, WORD_LEN, 0},
{ 0x8D88, 0x1102, WORD_LEN, 0},
{ 0x8D8A, 0x0E5E, WORD_LEN, 0},
{ 0x8D8C, 0x0664, WORD_LEN, 0},
{ 0x8D8E, 0x16B5, WORD_LEN, 0},
{ 0x8D90, 0x1083, WORD_LEN, 0},
{ 0x8D92, 0x1E3F, WORD_LEN, 0},
{ 0x8D94, 0x1002, WORD_LEN, 0},
{ 0x8D96, 0x8E00, WORD_LEN, 0},
{ 0x8D98, 0xB8A6, WORD_LEN, 0},
{ 0x8D9A, 0xAE00, WORD_LEN, 0},
{ 0x8D9C, 0x153A, WORD_LEN, 0},
{ 0x8D9E, 0x1081, WORD_LEN, 0},
{ 0x8DA0, 0x153B, WORD_LEN, 0},
{ 0x8DA2, 0x1080, WORD_LEN, 0},
{ 0x8DA4, 0xB908, WORD_LEN, 0},
{ 0x8DA6, 0x7905, WORD_LEN, 0},
{ 0x8DA8, 0x16BA, WORD_LEN, 0},
{ 0x8DAA, 0x1100, WORD_LEN, 0},
{ 0x8DAC, 0x0859, WORD_LEN, 0},
{ 0x8DAE, 0x0042, WORD_LEN, 0},
{ 0x8DB0, 0xD017, WORD_LEN, 0},
{ 0x8DB2, 0x9E31, WORD_LEN, 0},
{ 0x8DB4, 0x904D, WORD_LEN, 0},
{ 0x8DB6, 0x0A2D, WORD_LEN, 0},
{ 0x8DB8, 0x0063, WORD_LEN, 0},
{ 0x8DBA, 0x8E00, WORD_LEN, 0},
{ 0x8DBC, 0x16B0, WORD_LEN, 0},
{ 0x8DBE, 0x1081, WORD_LEN, 0},
{ 0x8DC0, 0x1E3C, WORD_LEN, 0},
{ 0x8DC2, 0x1042, WORD_LEN, 0},
{ 0x8DC4, 0x16B1, WORD_LEN, 0},
{ 0x8DC6, 0x1081, WORD_LEN, 0},
{ 0x8DC8, 0x1E3D, WORD_LEN, 0},
{ 0x8DCA, 0x1042, WORD_LEN, 0},
{ 0x8DCC, 0x16B4, WORD_LEN, 0},
{ 0x8DCE, 0x1081, WORD_LEN, 0},
{ 0x8DD0, 0x1E3E, WORD_LEN, 0},
{ 0x8DD2, 0x1042, WORD_LEN, 0},
{ 0x8DD4, 0x16B5, WORD_LEN, 0},
{ 0x8DD6, 0x1081, WORD_LEN, 0},
{ 0x8DD8, 0x1E3F, WORD_LEN, 0},
{ 0x8DDA, 0x1042, WORD_LEN, 0},
{ 0x8DDC, 0xB886, WORD_LEN, 0},
{ 0x8DDE, 0xF013, WORD_LEN, 0},
{ 0x8DE0, 0x16B2, WORD_LEN, 0},
{ 0x8DE2, 0x1081, WORD_LEN, 0},
{ 0x8DE4, 0xB8A6, WORD_LEN, 0},
{ 0x8DE6, 0x1E3C, WORD_LEN, 0},
{ 0x8DE8, 0x1042, WORD_LEN, 0},
{ 0x8DEA, 0x16B3, WORD_LEN, 0},
{ 0x8DEC, 0x1081, WORD_LEN, 0},
{ 0x8DEE, 0x1E3D, WORD_LEN, 0},
{ 0x8DF0, 0x1042, WORD_LEN, 0},
{ 0x8DF2, 0x16B6, WORD_LEN, 0},
{ 0x8DF4, 0x1081, WORD_LEN, 0},
{ 0x8DF6, 0x1E3E, WORD_LEN, 0},
{ 0x8DF8, 0x1042, WORD_LEN, 0},
{ 0x8DFA, 0x16B7, WORD_LEN, 0},
{ 0x8DFC, 0x1081, WORD_LEN, 0},
{ 0x8DFE, 0x1E3F, WORD_LEN, 0},
{ 0x8E00, 0x1042, WORD_LEN, 0},
{ 0x8E02, 0xAE00, WORD_LEN, 0},
{ 0x8E04, 0x0D2A, WORD_LEN, 0},
{ 0x8E06, 0x0184, WORD_LEN, 0},
{ 0x8E08, 0x04B5, WORD_LEN, 0},
{ 0x8E0A, 0x0684, WORD_LEN, 0},
{ 0x8E0C, 0xFF80, WORD_LEN, 0},
{ 0x8E0E, 0x050C, WORD_LEN, 0},
{ 0x8E10, 0xC0F1, WORD_LEN, 0},
{ 0x8E12, 0x0BAA, WORD_LEN, 0},
{ 0x8E14, 0x0224, WORD_LEN, 0},
{ 0x8E16, 0xC5E1, WORD_LEN, 0},
{ 0x8E18, 0xD067, WORD_LEN, 0},
{ 0x8E1A, 0x8000, WORD_LEN, 0},
{ 0x8E1C, 0x880A, WORD_LEN, 0},
{ 0x8E1E, 0x085B, WORD_LEN, 0},
{ 0x8E20, 0x019F, WORD_LEN, 0},
{ 0x8E22, 0xD166, WORD_LEN, 0},
{ 0x8E24, 0xD800, WORD_LEN, 0},
{ 0x8E26, 0xA90F, WORD_LEN, 0},
{ 0x8E28, 0xD165, WORD_LEN, 0},
{ 0x8E2A, 0x81A1, WORD_LEN, 0},
{ 0x8E2C, 0x8160, WORD_LEN, 0},
{ 0x8E2E, 0xD165, WORD_LEN, 0},
{ 0x8E30, 0x2D41, WORD_LEN, 0},
{ 0x8E32, 0x1602, WORD_LEN, 0},
{ 0x8E34, 0x2B41, WORD_LEN, 0},
{ 0x8E36, 0x060C, WORD_LEN, 0},
{ 0x8E38, 0x1934, WORD_LEN, 0},
{ 0x8E3A, 0x0082, WORD_LEN, 0},
{ 0x8E3C, 0x1930, WORD_LEN, 0},
{ 0x8E3E, 0x0302, WORD_LEN, 0},
{ 0x8E40, 0x2D41, WORD_LEN, 0},
{ 0x8E42, 0x1402, WORD_LEN, 0},
{ 0x8E44, 0x2B41, WORD_LEN, 0},
{ 0x8E46, 0x040C, WORD_LEN, 0},
{ 0x8E48, 0x1935, WORD_LEN, 0},
{ 0x8E4A, 0x0082, WORD_LEN, 0},
{ 0x8E4C, 0x1931, WORD_LEN, 0},
{ 0x8E4E, 0x0302, WORD_LEN, 0},
{ 0x8E50, 0x2D41, WORD_LEN, 0},
{ 0x8E52, 0x1202, WORD_LEN, 0},
{ 0x8E54, 0x2B41, WORD_LEN, 0},
{ 0x8E56, 0x020C, WORD_LEN, 0},
{ 0x8E58, 0x1936, WORD_LEN, 0},
{ 0x8E5A, 0x0082, WORD_LEN, 0},
{ 0x8E5C, 0x1932, WORD_LEN, 0},
{ 0x8E5E, 0x0302, WORD_LEN, 0},
{ 0x8E60, 0x1937, WORD_LEN, 0},
{ 0x8E62, 0x0342, WORD_LEN, 0},
{ 0x8E64, 0x1933, WORD_LEN, 0},
{ 0x8E66, 0x00C2, WORD_LEN, 0},
{ 0x8E68, 0xD157, WORD_LEN, 0},
{ 0x8E6A, 0x8120, WORD_LEN, 0},
{ 0x8E6C, 0x7208, WORD_LEN, 0},
{ 0x8E6E, 0x81A8, WORD_LEN, 0},
{ 0x8E70, 0x7108, WORD_LEN, 0},
{ 0x8E72, 0x7D60, WORD_LEN, 0},
{ 0x8E74, 0x7308, WORD_LEN, 0},
{ 0x8E76, 0x0451, WORD_LEN, 0},
{ 0x8E78, 0x0684, WORD_LEN, 0},
{ 0x8E7A, 0x78E0, WORD_LEN, 0},
{ 0x8E7C, 0xC0F1, WORD_LEN, 0},
{ 0x8E7E, 0x0AE2, WORD_LEN, 0},
{ 0x8E80, 0x0224, WORD_LEN, 0},
{ 0x8E82, 0xC5E1, WORD_LEN, 0},
{ 0x8E84, 0xD14D, WORD_LEN, 0},
{ 0x8E86, 0x894D, WORD_LEN, 0},
{ 0x8E88, 0x0A63, WORD_LEN, 0},
{ 0x8E8A, 0x0002, WORD_LEN, 0},
{ 0x8E8C, 0xD04A, WORD_LEN, 0},
{ 0x8E8E, 0x8040, WORD_LEN, 0},
{ 0x8E90, 0x8A0B, WORD_LEN, 0},
{ 0x8E92, 0xB8A6, WORD_LEN, 0},
{ 0x8E94, 0xAA0B, WORD_LEN, 0},
{ 0x8E96, 0xD800, WORD_LEN, 0},
{ 0x8E98, 0xA90F, WORD_LEN, 0},
{ 0x8E9A, 0xD149, WORD_LEN, 0},
{ 0x8E9C, 0x8161, WORD_LEN, 0},
{ 0x8E9E, 0x81A0, WORD_LEN, 0},
{ 0x8EA0, 0xD148, WORD_LEN, 0},
{ 0x8EA2, 0x2B41, WORD_LEN, 0},
{ 0x8EA4, 0x0602, WORD_LEN, 0},
{ 0x8EA6, 0x2D41, WORD_LEN, 0},
{ 0x8EA8, 0x160C, WORD_LEN, 0},
{ 0x8EAA, 0x1934, WORD_LEN, 0},
{ 0x8EAC, 0x0082, WORD_LEN, 0},
{ 0x8EAE, 0x1930, WORD_LEN, 0},
{ 0x8EB0, 0x0302, WORD_LEN, 0},
{ 0x8EB2, 0x2B41, WORD_LEN, 0},
{ 0x8EB4, 0x0402, WORD_LEN, 0},
{ 0x8EB6, 0x2D41, WORD_LEN, 0},
{ 0x8EB8, 0x140C, WORD_LEN, 0},
{ 0x8EBA, 0x1935, WORD_LEN, 0},
{ 0x8EBC, 0x0082, WORD_LEN, 0},
{ 0x8EBE, 0x1931, WORD_LEN, 0},
{ 0x8EC0, 0x0302, WORD_LEN, 0},
{ 0x8EC2, 0x2B41, WORD_LEN, 0},
{ 0x8EC4, 0x0202, WORD_LEN, 0},
{ 0x8EC6, 0x2D41, WORD_LEN, 0},
{ 0x8EC8, 0x120C, WORD_LEN, 0},
{ 0x8ECA, 0x1936, WORD_LEN, 0},
{ 0x8ECC, 0x0082, WORD_LEN, 0},
{ 0x8ECE, 0x1932, WORD_LEN, 0},
{ 0x8ED0, 0x0302, WORD_LEN, 0},
{ 0x8ED2, 0x1937, WORD_LEN, 0},
{ 0x8ED4, 0x00C2, WORD_LEN, 0},
{ 0x8ED6, 0x1933, WORD_LEN, 0},
{ 0x8ED8, 0x0342, WORD_LEN, 0},
{ 0x8EDA, 0xD13B, WORD_LEN, 0},
{ 0x8EDC, 0x8120, WORD_LEN, 0},
{ 0x8EDE, 0x7208, WORD_LEN, 0},
{ 0x8EE0, 0x81A8, WORD_LEN, 0},
{ 0x8EE2, 0x7108, WORD_LEN, 0},
{ 0x8EE4, 0x7D60, WORD_LEN, 0},
{ 0x8EE6, 0x7308, WORD_LEN, 0},
{ 0x8EE8, 0xF003, WORD_LEN, 0},
{ 0x8EEA, 0x0D62, WORD_LEN, 0},
{ 0x8EEC, 0x0204, WORD_LEN, 0},
{ 0x8EEE, 0x03D9, WORD_LEN, 0},
{ 0x8EF0, 0x0684, WORD_LEN, 0},
{ 0x8EF2, 0x78E0, WORD_LEN, 0},
{ 0x8EF4, 0xC0F1, WORD_LEN, 0},
{ 0x8EF6, 0x0B52, WORD_LEN, 0},
{ 0x8EF8, 0x0684, WORD_LEN, 0},
{ 0x8EFA, 0xD532, WORD_LEN, 0},
{ 0x8EFC, 0xD733, WORD_LEN, 0},
{ 0x8EFE, 0x153A, WORD_LEN, 0},
{ 0x8F00, 0x1080, WORD_LEN, 0},
{ 0x8F02, 0x153B, WORD_LEN, 0},
{ 0x8F04, 0x1081, WORD_LEN, 0},
{ 0x8F06, 0x1528, WORD_LEN, 0},
{ 0x8F08, 0x108E, WORD_LEN, 0},
{ 0x8F0A, 0xB808, WORD_LEN, 0},
{ 0x8F0C, 0x7825, WORD_LEN, 0},
{ 0x8F0E, 0x703A, WORD_LEN, 0},
{ 0x8F10, 0x152A, WORD_LEN, 0},
{ 0x8F12, 0x1080, WORD_LEN, 0},
{ 0x8F14, 0x152B, WORD_LEN, 0},
{ 0x8F16, 0x1081, WORD_LEN, 0},
{ 0x8F18, 0xBE08, WORD_LEN, 0},
{ 0x8F1A, 0xB808, WORD_LEN, 0},
{ 0x8F1C, 0x7825, WORD_LEN, 0},
{ 0x8F1E, 0x701A, WORD_LEN, 0},
{ 0x8F20, 0x1529, WORD_LEN, 0},
{ 0x8F22, 0x1080, WORD_LEN, 0},
{ 0x8F24, 0x7E05, WORD_LEN, 0},
{ 0x8F26, 0x8700, WORD_LEN, 0},
{ 0x8F28, 0x800C, WORD_LEN, 0},
{ 0x8F2A, 0x7840, WORD_LEN, 0},
{ 0x8F2C, 0xD028, WORD_LEN, 0},
{ 0x8F2E, 0x153B, WORD_LEN, 0},
{ 0x8F30, 0x1082, WORD_LEN, 0},
{ 0x8F32, 0x9039, WORD_LEN, 0},
{ 0x8F34, 0x153A, WORD_LEN, 0},
{ 0x8F36, 0x1080, WORD_LEN, 0},
{ 0x8F38, 0xB808, WORD_LEN, 0},
{ 0x8F3A, 0x7845, WORD_LEN, 0},
{ 0x8F3C, 0x7822, WORD_LEN, 0},
{ 0x8F3E, 0xD11E, WORD_LEN, 0},
{ 0x8F40, 0x8120, WORD_LEN, 0},
{ 0x8F42, 0x912D, WORD_LEN, 0},
{ 0x8F44, 0x082F, WORD_LEN, 0},
{ 0x8F46, 0x0043, WORD_LEN, 0},
{ 0x8F48, 0x2941, WORD_LEN, 0},
{ 0x8F4A, 0x2201, WORD_LEN, 0},
{ 0x8F4C, 0x2E41, WORD_LEN, 0},
{ 0x8F4E, 0x1200, WORD_LEN, 0},
{ 0x8F50, 0x1D3A, WORD_LEN, 0},
{ 0x8F52, 0x1042, WORD_LEN, 0},
{ 0x8F54, 0x1D28, WORD_LEN, 0},
{ 0x8F56, 0x1002, WORD_LEN, 0},
{ 0x8F58, 0x8700, WORD_LEN, 0},
{ 0x8F5A, 0x2841, WORD_LEN, 0},
{ 0x8F5C, 0x2201, WORD_LEN, 0},
{ 0x8F5E, 0x1D3B, WORD_LEN, 0},
{ 0x8F60, 0x1442, WORD_LEN, 0},
{ 0x8F62, 0x1D2A, WORD_LEN, 0},
{ 0x8F64, 0x1042, WORD_LEN, 0},
{ 0x8F66, 0x800D, WORD_LEN, 0},
{ 0x8F68, 0x1D2B, WORD_LEN, 0},
{ 0x8F6A, 0x1402, WORD_LEN, 0},
{ 0x8F6C, 0x7860, WORD_LEN, 0},
{ 0x8F6E, 0x1D29, WORD_LEN, 0},
{ 0x8F70, 0x1382, WORD_LEN, 0},
{ 0x8F72, 0x0335, WORD_LEN, 0},
{ 0x8F74, 0x0684, WORD_LEN, 0},
{ 0x8F76, 0x78E0, WORD_LEN, 0},
{ 0x8F78, 0xC0F1, WORD_LEN, 0},
{ 0x8F7A, 0x0B6A, WORD_LEN, 0},
{ 0x8F7C, 0x01C4, WORD_LEN, 0},
{ 0x8F7E, 0xD215, WORD_LEN, 0},
{ 0x8F80, 0xD112, WORD_LEN, 0},
{ 0x8F82, 0xA140, WORD_LEN, 0},
{ 0x8F84, 0xC0D1, WORD_LEN, 0},
{ 0x8F86, 0x7EE0, WORD_LEN, 0},
{ 0x8F88, 0xC0F1, WORD_LEN, 0},
{ 0x8F8A, 0x0ACA, WORD_LEN, 0},
{ 0x8F8C, 0x06A4, WORD_LEN, 0},
{ 0x8F8E, 0xDA44, WORD_LEN, 0},
{ 0x8F90, 0xD111, WORD_LEN, 0},
{ 0x8F92, 0xD512, WORD_LEN, 0},
{ 0x8F94, 0x76A9, WORD_LEN, 0},
{ 0x8F96, 0x085E, WORD_LEN, 0},
{ 0x8F98, 0x06A4, WORD_LEN, 0},
{ 0x8F9A, 0x70C9, WORD_LEN, 0},
{ 0x8F9C, 0xD010, WORD_LEN, 0},
{ 0x8F9E, 0xA50D, WORD_LEN, 0},
{ 0x8FA0, 0xD010, WORD_LEN, 0},
{ 0x8FA2, 0xA50C, WORD_LEN, 0},
{ 0x8FA4, 0xD010, WORD_LEN, 0},
{ 0x8FA6, 0xA510, WORD_LEN, 0},
{ 0x8FA8, 0xD010, WORD_LEN, 0},
{ 0x8FAA, 0xA500, WORD_LEN, 0},
{ 0x8FAC, 0xD007, WORD_LEN, 0},
{ 0x8FAE, 0x0311, WORD_LEN, 0},
{ 0x8FB0, 0x06A4, WORD_LEN, 0},
{ 0x8FB2, 0xA0C0, WORD_LEN, 0},
{ 0x8FB4, 0x8000, WORD_LEN, 0},
{ 0x8FB6, 0x000C, WORD_LEN, 0},
{ 0x8FB8, 0xFF80, WORD_LEN, 0},
{ 0x8FBA, 0x040C, WORD_LEN, 0},
{ 0x8FBC, 0x8000, WORD_LEN, 0},
{ 0x8FBE, 0x00A8, WORD_LEN, 0},
{ 0x8FC0, 0xFF80, WORD_LEN, 0},
{ 0x8FC2, 0x0250, WORD_LEN, 0},
{ 0x8FC4, 0x8000, WORD_LEN, 0},
{ 0x8FC6, 0x0038, WORD_LEN, 0},
{ 0x8FC8, 0x8000, WORD_LEN, 0},
{ 0x8FCA, 0x00A4, WORD_LEN, 0},
{ 0x8FCC, 0xFF80, WORD_LEN, 0},
{ 0x8FCE, 0x0740, WORD_LEN, 0},
{ 0x8FD0, 0xFF80, WORD_LEN, 0},
{ 0x8FD2, 0x10C4, WORD_LEN, 0},
{ 0x8FD4, 0x0000, WORD_LEN, 0},
{ 0x8FD6, 0xF4BC, WORD_LEN, 0},
{ 0x8FD8, 0xFF80, WORD_LEN, 0},
{ 0x8FDA, 0x10C4, WORD_LEN, 0},
{ 0x8FDC, 0xFF80, WORD_LEN, 0},
{ 0x8FDE, 0x0E7C, WORD_LEN, 0},
{ 0x8FE0, 0xFF80, WORD_LEN, 0},
{ 0x8FE2, 0x0E10, WORD_LEN, 0},
{ 0x8FE4, 0xFF80, WORD_LEN, 0},
{ 0x8FE6, 0x0EF4, WORD_LEN, 0},
{ 0x8FE8, 0xFF80, WORD_LEN, 0},
{ 0x8FEA, 0x0F78, WORD_LEN, 0},
{ 0x8FEC, 0xEA0A, WORD_LEN, 0},
{ 0x8FEE, 0x242F, WORD_LEN, 0},
{ 0x8FF0, 0x7089, WORD_LEN, 0},
{ 0x8FF2, 0x78E0, WORD_LEN, 0},
{ 0x8FF4, 0x20A8, WORD_LEN, 0},
{ 0x8FF6, 0x0180, WORD_LEN, 0},
{ 0x8FF8, 0x1002, WORD_LEN, 0},
{ 0x8FFA, 0x0D02, WORD_LEN, 0},
{ 0x8FFC, 0x1902, WORD_LEN, 0},
{ 0x8FFE, 0x0094, WORD_LEN, 0},
{ 0x9000, 0x7FE0, WORD_LEN, 0},
{ 0x9002, 0x7028, WORD_LEN, 0},
{ 0x9004, 0x7308, WORD_LEN, 0},
{ 0x9006, 0x1000, WORD_LEN, 0},
{ 0x9008, 0x0900, WORD_LEN, 0},
{ 0x900A, 0x7904, WORD_LEN, 0},
{ 0x900C, 0x7947, WORD_LEN, 0},
{ 0x900E, 0x1B00, WORD_LEN, 0},
{ 0x9010, 0x0064, WORD_LEN, 0},
{ 0x9012, 0x7EE0, WORD_LEN, 0},
{ 0x9014, 0xEA0A, WORD_LEN, 0},
{ 0x9016, 0x242F, WORD_LEN, 0},
{ 0x9018, 0x7089, WORD_LEN, 0},
{ 0x901A, 0x78E0, WORD_LEN, 0},
{ 0x901C, 0x20A8, WORD_LEN, 0},
{ 0x901E, 0x0180, WORD_LEN, 0},
{ 0x9020, 0x1102, WORD_LEN, 0},
{ 0x9022, 0x0502, WORD_LEN, 0},
{ 0x9024, 0x1802, WORD_LEN, 0},
{ 0x9026, 0x00B4, WORD_LEN, 0},
{ 0x9028, 0x7FE0, WORD_LEN, 0},
{ 0x902A, 0x7028, WORD_LEN, 0},
{ 0x902C, 0x0000, WORD_LEN, 0},
{ 0x902E, 0x0000, WORD_LEN, 0},
        
{ 0x098E, 0x0016, 	WORD_LEN, 0}, 	// LOGICAL_ADDRESS_ACCESS [MON_ADDRESS_LO]
{ 0x8016, 0x086C, 	WORD_LEN, 0}, 	// MON_ADDRESS_LO
{ 0x8002, 0x0001, 	WORD_LEN, 100}, // MON_CMD
//POLL_{0x800A,0x00,!=0x07,DELAY=10,TIMEOUT=100	//Wait for the core ready
//[Char_settings]
{ 0x30D4, 0x9080, 	WORD_LEN, 0},  // COLUMN_CORRECTION
{ 0x316E, 0xC400, 	WORD_LEN, 0},  // DAC_ECL
{ 0x305E, 0x10A0, 	WORD_LEN, 0},  // GLOBAL_GAIN
{ 0x3E00, 0x0010, 	WORD_LEN, 0},  // SAMP_CONTROL
{ 0x3E02, 0xED02, 	WORD_LEN, 0},  // SAMP_ADDR_EN
{ 0x3E04, 0xC88C, 	WORD_LEN, 0},  // SAMP_RD1_SIG
{ 0x3E06, 0xC88C, 	WORD_LEN, 0},  // SAMP_RD1_SIG_BOOST
{ 0x3E08, 0x700A, 	WORD_LEN, 0},  // SAMP_RD1_RST
{ 0x3E0A, 0x701E, 	WORD_LEN, 0},  // SAMP_RD1_RST_BOOST
{ 0x3E0C, 0x00FF, 	WORD_LEN, 0},  // SAMP_RST1_EN
{ 0x3E0E, 0x00FF, 	WORD_LEN, 0},  // SAMP_RST1_BOOST
{ 0x3E10, 0x00FF, 	WORD_LEN, 0},  // SAMP_RST1_CLOOP_SH
{ 0x3E12, 0x0000, 	WORD_LEN, 0},  // SAMP_RST_BOOST_SEQ
{ 0x3E14, 0xC78C, 	WORD_LEN, 0},  // SAMP_SAMP1_SIG
{ 0x3E16, 0x6E06, 	WORD_LEN, 0},  // SAMP_SAMP1_RST
{ 0x3E18, 0xA58C, 	WORD_LEN, 0},  // SAMP_TX_EN
{ 0x3E1A, 0xA58E, 	WORD_LEN, 0},  // SAMP_TX_BOOST
{ 0x3E1C, 0xA58E, 	WORD_LEN, 0},  // SAMP_TX_CLOOP_SH
{ 0x3E1E, 0xC0D0, 	WORD_LEN, 0},  // SAMP_TX_BOOST_SEQ
{ 0x3E20, 0xEB00, 	WORD_LEN, 0},  // SAMP_VLN_EN
{ 0x3E22, 0x00FF, 	WORD_LEN, 0},  // SAMP_VLN_HOLD
{ 0x3E24, 0xEB02, 	WORD_LEN, 0},  // SAMP_VCL_EN
{ 0x3E26, 0xEA02, 	WORD_LEN, 0},  // SAMP_COLCLAMP
{ 0x3E28, 0xEB0A, 	WORD_LEN, 0},  // SAMP_SH_VCL
{ 0x3E2A, 0xEC01, 	WORD_LEN, 0},  // SAMP_SH_VREF
{ 0x3E2C, 0xEB01, 	WORD_LEN, 0},  // SAMP_SH_VBST
{ 0x3E2E, 0x00FF, 	WORD_LEN, 0},  // SAMP_SPARE
{ 0x3E30, 0x00F3, 	WORD_LEN, 0},  // SAMP_READOUT
{ 0x3E32, 0x3DFA, 	WORD_LEN, 0},  // SAMP_RESET_DONE
{ 0x3E34, 0x00FF, 	WORD_LEN, 0},  // SAMP_VLN_CLAMP
{ 0x3E36, 0x00F3, 	WORD_LEN, 0},  // SAMP_ASC_INT
{ 0x3E38, 0x0000, 	WORD_LEN, 0},  // SAMP_RS_CLOOP_SH_R
{ 0x3E3A, 0xF802, 	WORD_LEN, 0},  // SAMP_RS_CLOOP_SH
{ 0x3E3C, 0x0FFF, 	WORD_LEN, 0},  // SAMP_RS_BOOST_SEQ
{ 0x3E3E, 0xEA10, 	WORD_LEN, 0},  // SAMP_TXLO_GND
{ 0x3E40, 0xEB05, 	WORD_LEN, 0},  // SAMP_VLN_PER_COL
{ 0x3E42, 0xE5C8, 	WORD_LEN, 0},  // SAMP_RD2_SIG
{ 0x3E44, 0xE5C8, 	WORD_LEN, 0},  // SAMP_RD2_SIG_BOOST
{ 0x3E46, 0x8C70, 	WORD_LEN, 0},  // SAMP_RD2_RST
{ 0x3E48, 0x8C71, 	WORD_LEN, 0},  // SAMP_RD2_RST_BOOST
{ 0x3E4A, 0x00FF, 	WORD_LEN, 0},  // SAMP_RST2_EN
{ 0x3E4C, 0x00FF, 	WORD_LEN, 0},  // SAMP_RST2_BOOST
{ 0x3E4E, 0x00FF, 	WORD_LEN, 0},  // SAMP_RST2_CLOOP_SH
{ 0x3E50, 0xE38D, 	WORD_LEN, 0},  // SAMP_SAMP2_SIG
{ 0x3E52, 0x8B0A, 	WORD_LEN, 0},  // SAMP_SAMP2_RST
{ 0x3E58, 0xEB0A, 	WORD_LEN, 0},  // SAMP_PIX_CLAMP_EN
{ 0x3E5C, 0x0A00, 	WORD_LEN, 0},  // SAMP_PIX_PULLUP_EN
{ 0x3E5E, 0x00FF, 	WORD_LEN, 0},  // SAMP_PIX_PULLDOWN_EN_R
{ 0x3E60, 0x00FF, 	WORD_LEN, 0},  // SAMP_PIX_PULLDOWN_EN_S
{ 0x3E90, 0x3C01, 	WORD_LEN, 0},  // RST_ADDR_EN
{ 0x3E92, 0x00FF, 	WORD_LEN, 0},  // RST_RST_EN
{ 0x3E94, 0x00FF, 	WORD_LEN, 0},  // RST_RST_BOOST
{ 0x3E96, 0x3C00, 	WORD_LEN, 0},  // RST_TX_EN
{ 0x3E98, 0x3C00, 	WORD_LEN, 0},  // RST_TX_BOOST
{ 0x3E9A, 0x3C00, 	WORD_LEN, 0},  // RST_TX_CLOOP_SH
{ 0x3E9C, 0xC0E0, 	WORD_LEN, 0},  // RST_TX_BOOST_SEQ
{ 0x3E9E, 0x00FF, 	WORD_LEN, 0},  // RST_RST_CLOOP_SH
{ 0x3EA0, 0x0000, 	WORD_LEN, 0},  // RST_RST_BOOST_SEQ
{ 0x3EA6, 0x3C00, 	WORD_LEN, 0},  // RST_PIX_PULLUP_EN
{ 0x3ED8, 0x3057, 	WORD_LEN, 0},  // DAC_LD_12_13
{ 0x316C, 0xB44F, 	WORD_LEN, 0},  // DAC_TXLO
{ 0x316E, 0xC6FF, 	WORD_LEN, 0},  // DAC_ECL
{ 0x3ED2, 0xEA0A, 	WORD_LEN, 0},  // DAC_LD_6_7
{ 0x3ED4, 0x00A3, 	WORD_LEN, 0},  // DAC_LD_8_9
{ 0x3EDC, 0x6020, 	WORD_LEN, 0},  // DAC_LD_16_17
{ 0x3EE6, 0xA541, 	WORD_LEN, 0},  // DAC_LD_26_27
{ 0x31E0, 0x0001, 	WORD_LEN, 0},  //0 	// PIX_DEF_ID  //AWB Haunting 관련 Workaround(06.01)
{ 0x3ED0, 0x2409, 	WORD_LEN, 0},  // DAC_LD_4_5
{ 0x3EDE, 0x0A49, 	WORD_LEN, 0}, /// DAC_LD_18_19
{ 0x3EE0, 0x4910, 	WORD_LEN, 0},    //4909 	// DAC_LD_20_21  
{ 0x3EE2, 0x09CF, 	WORD_LEN, 0},  // DAC_LD_22_23  //AWB Haunting 관련 Workaround(06.01)
{ 0x30B6, 0x0008, 	WORD_LEN, 0},  // AUTOLR_CONTROL
{ 0x337C, 0x0006, 	WORD_LEN, 0},  // YUV_YCBCR_CONTROL
{ 0x3E1A, 0xA582, 	WORD_LEN, 0},  // SAMP_TX_BOOST
{ 0x3E2E, 0xEC05, 	WORD_LEN, 0},  // SAMP_SPARE
{ 0x3EE6, 0xA5C0, 	WORD_LEN, 0},  // DAC_LD_26_27
{ 0x316C, 0xF43F,	WORD_LEN, 0},      //B43F 	// DAC_TXLO  //AWB Haunting 관련 Workaround(06.01)
{ 0x316E, 0xC6FF, 	WORD_LEN, 0},  // DAC_ECL

//[Load LSC]
//{0xE02A,0x0001  	WORD_LEN, 300},          // OTPM_Probe
//{0xD004,0x04  		BYTE_LEN, 0},           // PGA_SOLUTION
//{0xD006,0x0000, 	WORD_LEN, 0},          // PGA_ZONE_ADDR_0
//{0xD005,0x00,    BYTE_LEN, 0},        // PGA_CURRENT_ZONE
//{0xD002,0x8002, 	WORD_LEN, 0},          // PGA_ALGO
//{0x3120,0x49B8, 	WORD_LEN, 0},          // COLOR_PIPELINE_CONTROL

//probe the otpm with workaround developed by for race condition
{ 0xE002, 0x0000, 	WORD_LEN, 0}, // disable extended IO
{ 0xE02A, 0x0001, 	WORD_LEN, 0}, // set extended command, probe otpm
{ 0xE002, 0x0100, 	WORD_LEN, 0}, // reenable extended IO
//POLL_{0xE02A,0xFFFF,!=0x0000,DELAY=3,TIMEOUT=10 
{ 0x3812, 0x2124, 	WORD_LEN, 0}, //comparator=8 
//check the status if it is C1 then load OTPM else use default
//;POLL_{ 0xE023, 0xFF, !=0xC1, DELAY=10, TIMEOUT=10

//[OTP_ZONE_0_LOAD]
// load pga from otpm
{ 0xD004, 0x04,     BYTE_LEN, 0},			
{ 0xD005, 0x00,     BYTE_LEN, 0},
{ 0x8016, 0xAA20, 	WORD_LEN, 0},
{ 0x8018, 0x0000, 	WORD_LEN, 0},
{ 0x8002, 0x0001, 	WORD_LEN, 0},
// test for pga load complete
//POLL_{ 0x8002,0xFFFF,!=0x0000,DELAY=3,TIMEOUT=10 

//[AWB_CCM_APACHE]
{ 0xAC02, 0x00FF, 	WORD_LEN, 0}, 	// RESERVED_AWB_02
{ 0xAC01, 0xEF,     BYTE_LEN, 0}, 	// AWB_MODE

//;indoor_outdoor detect
{ 0xAC09, 0x01,     BYTE_LEN, 0}, 	// RESERVED_AWB_09
{ 0xAC22, 0x0000, 	WORD_LEN, 0}, 	// RESERVED_AWB_22

//;AWB_Gain_INDOOR
{ 0xACB0, 0x2F,     BYTE_LEN, 0}, 	// AWB_RG_MIN
{ 0xACB1, 0x6F,     BYTE_LEN, 0}, 	// AWB_RG_MAX//5f
{ 0xACB4, 0x1B,     BYTE_LEN, 0}, 	// AWB_BG_MIN
{ 0xACB5, 0x5B,     BYTE_LEN, 0}, 	// AWB_BG_MAX

//;AWB_Gain_OUTDOOR
//ef30
{ 0xACB2, 0x3D,     BYTE_LEN, 0},  //34 //42 	// AWB_RG_MIN_BRIGHT DAY (41/46)
{ 0xACB3, 0x46,     BYTE_LEN, 0},  //46		// AWB_RG_MAX_BRIGHT
{ 0xACB6, 0x3A,     BYTE_LEN, 0},  //40  //3C 	// AWB_BG_MIN_BRIGHT 3D/46
{ 0xACB7, 0x44,     BYTE_LEN, 0},  //44 	// AWB_BG_MAX_BRIGHT


//;integration time(indoor_outdoor detect)
{ 0xACB8, 0x100 , 	WORD_LEN, 0},	// AWB_START_NUM_INT_LINES
{ 0xACBA, 0x0B0 , 	WORD_LEN, 0},	// AWB_END_NUM_INT_LINES


//;apache CCM
//0525_1155
{ 0xAC46, 0x0284, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_0
{ 0xAC48, 0xFE57, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_1
{ 0xAC4A, 0x0027, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_2
{ 0xAC4C, 0xFF87, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_3
{ 0xAC4E, 0x0133, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_4
{ 0xAC50, 0x0047, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_5
{ 0xAC52, 0x0009, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_6
{ 0xAC54, 0xFDB3, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_7
{ 0xAC56, 0x0343, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_8
{ 0xAC58, 0x009D, 	WORD_LEN, 0}, 	// AWB_LEFT_CCM_R2BRATIO
{ 0xAC5C, 0x03C6, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_0
{ 0xAC5E, 0xFD97, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_1
{ 0xAC60, 0xFFA3, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_2
{ 0xAC62, 0xFFC6, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_3
{ 0xAC64, 0x0158, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_4
{ 0xAC66, 0xFFE4, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_5
{ 0xAC68, 0xFFF6, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_6
{ 0xAC6A, 0xFF2D, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_7
{ 0xAC6C, 0x01DE, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_8
{ 0xAC6E, 0x0063, 	WORD_LEN, 0}, 	// AWB_RIGHT_CCM_R2BRATIO

//;Pre_awb_ratio
{ 0xAC3C, 0x26,     BYTE_LEN, 0}, 	// AWB_MIN_ACCEPTED_PRE_AWB_R2G_RATIO
{ 0xAC3D, 0x6E,     BYTE_LEN, 0}, 	// AWB_MAX_ACCEPTED_PRE_AWB_R2G_RATIO
{ 0xAC3E, 0x14,     BYTE_LEN, 0}, 	// AWB_MIN_ACCEPTED_PRE_AWB_B2G_RATIO
{ 0xAC3F, 0x6F,     BYTE_LEN, 0}, 	// AWB_MAX_ACCEPTED_PRE_AWB_B2G_RATIO   

//;Low Light
{ 0xAC72, 0x0100, 	WORD_LEN, 0}, 	// AWB_LL_CCM_0
{ 0xAC74, 0x0000, 	WORD_LEN, 0}, 	// AWB_LL_CCM_1
{ 0xAC76, 0x0000, 	WORD_LEN, 0}, 	// AWB_LL_CCM_2
{ 0xAC78, 0x0000, 	WORD_LEN, 0}, 	// AWB_LL_CCM_3
{ 0xAC7A, 0x0100, 	WORD_LEN, 0}, 	// AWB_LL_CCM_4
{ 0xAC7C, 0x0000, 	WORD_LEN, 0}, 	// AWB_LL_CCM_5
{ 0xAC7E, 0x0000, 	WORD_LEN, 0}, 	// AWB_LL_CCM_6
{ 0xAC80, 0x0000, 	WORD_LEN, 0}, 	// AWB_LL_CCM_7
{ 0xAC82, 0x0100, 	WORD_LEN, 0}, 	// AWB_LL_CCM_8
{ 0xB83E, 0x00,     BYTE_LEN, 0}, 	// STAT_AWB_WINDOW_POS_X
{ 0xB83F, 0x00,     BYTE_LEN, 0}, 	// STAT_AWB_WINDOW_POS_Y
{ 0xB840, 0xFE,     BYTE_LEN, 0}, 	// STAT_AWB_WINDOW_SIZE_X
{ 0xB841, 0xEF,     BYTE_LEN, 0}, 	// STAT_AWB_WINDOW_SIZE_Y

//;manual_RGB_gain
//[apache]
{ 0xAC97, 0x90,     BYTE_LEN, 0},   //74 	// [LEFE_Red]            
{ 0xAC98, 0x7A,     BYTE_LEN, 0}, 	// [LEFE_Green]          
{ 0xAC99, 0x90,     BYTE_LEN, 0},   //90 	// [LEFE_Blue]  

{ 0xAC9A, 0x80,     BYTE_LEN, 0},  //72  //75 	// [RIGHT_Red]           
{ 0xAC9B, 0x80,     BYTE_LEN, 0},  //80 	// [RIGHT_Green]         
{ 0xAC9C, 0x80,     BYTE_LEN, 0},  //7E 	// [RIGHT_Blue]


//;AWB_Weigh (IR_Cutfilter 650nm)
{ 0xB842, 0x003C, 	WORD_LEN, 0},//38//32 	// STAT_AWB_GRAY_CHECKER_OFFSET_X 3E
{ 0xB844, 0x0034, 	WORD_LEN, 0},//2E 	// STAT_AWB_GRAY_CHECKER_OFFSET_Y
{ 0x3240, 0x0024, 	WORD_LEN, 0}, 	// AWB_XY_SCALE
{ 0x3242, 0x0000, 	WORD_LEN, 0}, 	// AWB_WEIGHT_R0
{ 0x3244, 0xAA80, 	WORD_LEN, 0}, 	// AWB_WEIGHT_R1
{ 0x3246, 0x5580, 	WORD_LEN, 0}, 	// AWB_WEIGHT_R2
{ 0x3248, 0x3700, 	WORD_LEN, 0}, 	// AWB_WEIGHT_R3
{ 0x324A, 0x39C0, 	WORD_LEN, 0}, 	// AWB_WEIGHT_R4
{ 0x324C, 0x03E0, 	WORD_LEN, 0}, 	// AWB_WEIGHT_R5
{ 0x324E, 0x00AB, 	WORD_LEN, 0}, 	// AWB_WEIGHT_R6
{ 0x3250, 0x002A, 	WORD_LEN, 0}, 	// AWB_WEIGHT_R7

//sys_set
{ 0x301A, 0x10F4, 	WORD_LEN, 0}, 	// RESET_REGISTER
{ 0x301E, 0x0083, 	WORD_LEN, 0}, 	// DATA_PEDESTAL
{ 0x301A, 0x10FC, 	WORD_LEN, 0}, 	// RESET_REGISTER
{ 0xDC33, 0x20,     BYTE_LEN, 0}, 	// SYS_FIRST_BLACK_LEVEL
{ 0xDC35, 0x04,     BYTE_LEN, 0}, 	// SYS_UV_COLOR_BOOST
{ 0x326E, 0x0006, 	WORD_LEN, 0}, 	// RESERVED_SOC1_326E
{ 0xDC37, 0x62,     BYTE_LEN, 0},    	// 62 SYS_BRIGHT_COLORKILL
{ 0x35A4, 0x0596, 	WORD_LEN, 0},     // BRIGHT_COLOR_KILL_CONTROLS
{ 0x35A2, 0x0094, 	WORD_LEN, 0}, 	// DARK_COLOR_KILL_CONTROLS
{ 0xDC36, 0x24,     BYTE_LEN, 0},	    //24 //1E 	//SYS_DARK_COLOR_KILL


//gamma
{ 0xBC18, 0x00,     BYTE_LEN, 0},   //00(너무과도) //00 	//00  //00 //LL_GAMMA_CONTRAST_CURVE_0
{ 0xBC19, 0x0A,     BYTE_LEN, 0},   //06  		   //0A 	//12  //06 //LL_GAMMA_CONTRAST_CURVE_1
{ 0xBC1A, 0x19,     BYTE_LEN, 0},   //11  		   //19 	//25  //14 //LL_GAMMA_CONTRAST_CURVE_2
{ 0xBC1B, 0x2E,     BYTE_LEN, 0},   //24  		   //2E 	//3C  //31 //LL_GAMMA_CONTRAST_CURVE_3
{ 0xBC1C, 0x4C,     BYTE_LEN, 0},   //40  		   //4C 	//5B  //53 //LL_GAMMA_CONTRAST_CURVE_4
{ 0xBC1D, 0x65,     BYTE_LEN, 0},   //58  		   //65 	//73  //6E //LL_GAMMA_CONTRAST_CURVE_5
{ 0xBC1E, 0x7B,     BYTE_LEN, 0},   //6F  		   //7B 	//88  //84 //LL_GAMMA_CONTRAST_CURVE_6
{ 0xBC1F, 0x90,     BYTE_LEN, 0},   //85  		   //90 	//9A  //98 //LL_GAMMA_CONTRAST_CURVE_7
{ 0xBC20, 0xA1,     BYTE_LEN, 0},   //98  		   //A1 	//A9  //A7 //LL_GAMMA_CONTRAST_CURVE_8
{ 0xBC21, 0xB0,     BYTE_LEN, 0},   //A8  		   //B0 	//B5  //B5 //LL_GAMMA_CONTRAST_CURVE_9
{ 0xBC22, 0xBC,     BYTE_LEN, 0},   //B7  		   //BC 	//C1  //C1 //LL_GAMMA_CONTRAST_CURVE_10
{ 0xBC23, 0xC8,     BYTE_LEN, 0},   //C3  		   //C8 	//CB  //CB //LL_GAMMA_CONTRAST_CURVE_11
{ 0xBC24, 0xD2,     BYTE_LEN, 0},   //CE  		   //D2 	//D4  //D5 //LL_GAMMA_CONTRAST_CURVE_12
{ 0xBC25, 0xDB,     BYTE_LEN, 0},   //D8  		   //DB 	//DD  //DD //LL_GAMMA_CONTRAST_CURVE_13
{ 0xBC26, 0xE3,     BYTE_LEN, 0},   //E1  		   //E3 	//E5  //E5 //LL_GAMMA_CONTRAST_CURVE_14
{ 0xBC27, 0xEB,     BYTE_LEN, 0},   //EA  		   //EB 	//EC  //EC //LL_GAMMA_CONTRAST_CURVE_15
{ 0xBC28, 0xF2,     BYTE_LEN, 0},   //F1  		   //F2 	//F3  //F3 //LL_GAMMA_CONTRAST_CURVE_16
{ 0xBC29, 0xF9,     BYTE_LEN, 0},   //F8  		   //F9 	//F9  //F9 //LL_GAMMA_CONTRAST_CURVE_17
{ 0xBC2A, 0xFF,     BYTE_LEN, 0},   //FF  		   //FF 	//FF  //FF //LL_GAMMA_CONTRAST_CURVE_18
              
{ 0xBC2B, 0x00,     BYTE_LEN, 0}, //00  //00 	//00 //00 //LL_GAMMA_NEUTRAL_CURVE_0
{ 0xBC2C, 0x0A,     BYTE_LEN, 0}, //06  //0A 	//12 //0A //LL_GAMMA_NEUTRAL_CURVE_1
{ 0xBC2D, 0x19,     BYTE_LEN, 0}, //11  //19 	//25 //1D //LL_GAMMA_NEUTRAL_CURVE_2
{ 0xBC2E, 0x2E,     BYTE_LEN, 0}, //24  //2E 	//3C //37 //LL_GAMMA_NEUTRAL_CURVE_3
{ 0xBC2F, 0x4C,     BYTE_LEN, 0}, //40  //4C 	//5B //58 //LL_GAMMA_NEUTRAL_CURVE_4
{ 0xBC30, 0x65,     BYTE_LEN, 0}, //58  //65 	//73 //71 //LL_GAMMA_NEUTRAL_CURVE_5
{ 0xBC31, 0x7B,     BYTE_LEN, 0}, //6F  //7B 	//88 //86 //LL_GAMMA_NEUTRAL_CURVE_6
{ 0xBC32, 0x90,     BYTE_LEN, 0}, //85  //90 	//9A //98 //LL_GAMMA_NEUTRAL_CURVE_7
{ 0xBC33, 0xA1,     BYTE_LEN, 0}, //98  //A1 	//A9 //A7 //LL_GAMMA_NEUTRAL_CURVE_8
{ 0xBC34, 0xB0,     BYTE_LEN, 0}, //A8  //B0 	//B5 //B5 //LL_GAMMA_NEUTRAL_CURVE_9
{ 0xBC35, 0xBC,     BYTE_LEN, 0}, //B7  //BC 	//C1 //C0 //LL_GAMMA_NEUTRAL_CURVE_10
{ 0xBC36, 0xC8,     BYTE_LEN, 0}, //C3  //C8 	//CB //CB //LL_GAMMA_NEUTRAL_CURVE_11
{ 0xBC37, 0xD2,     BYTE_LEN, 0}, //CE  //D2 	//D4 //D4 //LL_GAMMA_NEUTRAL_CURVE_12
{ 0xBC38, 0xDB,     BYTE_LEN, 0}, //D8  //DB 	//DD //DD //LL_GAMMA_NEUTRAL_CURVE_13
{ 0xBC39, 0xE3,     BYTE_LEN, 0}, //E1  //E3 	//E5 //E4 //LL_GAMMA_NEUTRAL_CURVE_14
{ 0xBC3A, 0xEB,     BYTE_LEN, 0}, //EA  //EB 	//EC //EC //LL_GAMMA_NEUTRAL_CURVE_15
{ 0xBC3B, 0xF2,     BYTE_LEN, 0}, //F1  //F2 	//F3 //F3 //LL_GAMMA_NEUTRAL_CURVE_16
{ 0xBC3C, 0xF9,     BYTE_LEN, 0}, //F8  //F9 	//F9 //F9 //LL_GAMMA_NEUTRAL_CURVE_17
{ 0xBC3D, 0xFF,     BYTE_LEN, 0}, //FF  //FF 	//FF //FF //LL_GAMMA_NEUTRAL_CURVE_18
              
{ 0xBC3E, 0x00,     BYTE_LEN, 0},  //00(4/06) //00 	//00(2차평가) //00 //LL_GAMMA_NR_CURVE_0
{ 0xBC3F, 0x05,     BYTE_LEN, 0},  //06       //0A 	//18          //13 //LL_GAMMA_NR_CURVE_1
{ 0xBC40, 0x0E,     BYTE_LEN, 0},  //12       //1B 	//31          //28 //LL_GAMMA_NR_CURVE_2
{ 0xBC41, 0x22,     BYTE_LEN, 0},  //26       //31 	//49          //3F //LL_GAMMA_NR_CURVE_3
{ 0xBC42, 0x3E,     BYTE_LEN, 0},  //42       //4E 	//69          //5D //LL_GAMMA_NR_CURVE_4
{ 0xBC43, 0x57,     BYTE_LEN, 0},  //5A       //66 	//80          //74 //LL_GAMMA_NR_CURVE_5
{ 0xBC44, 0x6E,     BYTE_LEN, 0},  //70       //7C 	//93          //87 //LL_GAMMA_NR_CURVE_6
{ 0xBC45, 0x84,     BYTE_LEN, 0},  //84       //8F 	//A2          //98 //LL_GAMMA_NR_CURVE_7
{ 0xBC46, 0x97,     BYTE_LEN, 0},  //97       //9F 	//AF          //A6 //LL_GAMMA_NR_CURVE_8
{ 0xBC47, 0xA8,     BYTE_LEN, 0},  //A6       //AD 	//BB          //B3 //LL_GAMMA_NR_CURVE_9
{ 0xBC48, 0xB6,     BYTE_LEN, 0},  //B4       //BA 	//C5          //BE //LL_GAMMA_NR_CURVE_10
{ 0xBC49, 0xC3,     BYTE_LEN, 0},  //C1       //C5 	//CE          //C8 //LL_GAMMA_NR_CURVE_11
{ 0xBC4A, 0xCE,     BYTE_LEN, 0},  //CC       //D0 	//D7          //D2 //LL_GAMMA_NR_CURVE_12
{ 0xBC4B, 0xD8,     BYTE_LEN, 0},  //D6       //D9 	//DF          //DB //LL_GAMMA_NR_CURVE_13
{ 0xBC4C, 0xE1,     BYTE_LEN, 0},  //E0       //E2 	//E6          //E3 //LL_GAMMA_NR_CURVE_14
{ 0xBC4D, 0xEA,     BYTE_LEN, 0},  //E8       //EA 	//ED          //EA //LL_GAMMA_NR_CURVE_15
{ 0xBC4E, 0xF1,     BYTE_LEN, 0},  //F0       //F1 	//F3          //F2 //LL_GAMMA_NR_CURVE_16
{ 0xBC4F, 0xF8,     BYTE_LEN, 0},  //F8       //F8 	//F9          //F9 //LL_GAMMA_NR_CURVE_17
{ 0xBC50, 0xFF,     BYTE_LEN, 0},  //FF       //FF 	//FF          //FF //LL_GAMMA_NR_CURVE_18
              
              
//bm_gm_start_stop //low
{ 0xB801, 0xE0,     BYTE_LEN, 0}, 	// STAT_MODE
{ 0xB862, 0x04,     BYTE_LEN, 0}, 	// STAT_BMTRACKING_SPEED
{ 0xB829, 0x02,     BYTE_LEN, 0}, 	// STAT_LL_BRIGHTNESS_METRIC_DIVISOR
{ 0xB863, 0x02,     BYTE_LEN, 0}, 	// STAT_BM_MUL
{ 0xB827, 0x0F,     BYTE_LEN, 0}, 	// STAT_AE_EV_SHIFT
{ 0xA805, 0x09,     BYTE_LEN, 0}, 	// RESERVED_AE_TRACK_05
{ 0xA818, 0x03,     BYTE_LEN, 0},	// AE_TRACK_TARGET_INT_TIME_ROWS
//min_7fps    ,     BYTE_LEN, 0},
{ 0xA81A, 0x0C00, 	WORD_LEN, 0},	//A00(8FPS) 	// AE_TRACK_MAX_INT_TIME_ROWS
{ 0xA401, 0x0C,     BYTE_LEN, 0}, 	// AE_RULE_MODE
{ 0xA402, 0x0004, 	WORD_LEN, 0}, 	// RESERVED_AE_RULE_02
{ 0xA409, 0x53,     BYTE_LEN, 0},   //4B   //46 	// AE_RULE_BASE_TARGET
{ 0xA805, 0x09,     BYTE_LEN, 0}, 	// RESERVED_AE_TRACK_05
{ 0xA801, 0x00,     BYTE_LEN, 0}, 	// AE_TRACK_MODE
{ 0xA802, 0x0007, 	WORD_LEN, 0}, 	// RESERVED_AE_TRACK_02   

{ 0xA81C, 0x0040, 	WORD_LEN, 0},     //0040 	// AE_TRACK_MIN_AGAIN
{ 0xA81E, 0x0100, 	WORD_LEN, 0},     //0100 	// AE_TRACK_TARGET_AGAIN
{ 0xA820, 0x0130, 	WORD_LEN, 0},     //01C0 <- 014C 	// AE_TRACK_MAX_AGAIN
{ 0xA824, 0x00A6, 	WORD_LEN, 0}, 	// AE_TRACK_MAX_DGAIN
{ 0xA822, 0x0080, 	WORD_LEN, 0}, 	// AE_TRACK_MIN_DGAIN

//[Sys_Settings]
{ 0xC8E6, 0x014C, 	WORD_LEN, 0}, 	// RESERVED_CAM_E6
{ 0xC8E8, 0x0040, 	WORD_LEN, 0}, 	// RESERVED_CAM_E8  
{ 0xBC52, 0x00C8, 	WORD_LEN, 0}, 	 // LL_START_BRIGHTNESS_METRIC
{ 0xBC54, 0x0A28, 	WORD_LEN, 0}, 	//1000 //A28// LL_END_BRIGHTNESS_METRIC

{ 0xBC58, 0x00F0, 	WORD_LEN, 0}, 	// LL_START_GAIN_METRIC
{ 0xBC5A, 0x0900, 	WORD_LEN, 0}, 	//C00 //500 //1000 // LL_END_GAIN_METRIC
{ 0xBC5E, 0x0154, 	WORD_LEN, 0}, 	// LL_START_APERTURE_GAIN_BM
{ 0xBC60, 0x0320, 	WORD_LEN, 0}, 	// LL_END_APERTURE_GAIN_BM  

{ 0xBC86, 0x00C8, 	WORD_LEN, 0}, 	// LL_START_FFNR_GM
{ 0xBC88, 0x0420, 	WORD_LEN, 0}, 	// 540 LL_END_FFNR_GM
{ 0xBCBC, 0x0040, 	WORD_LEN, 0}, 	// LL_SFFB_START_GAIN
{ 0xBCBE, 0x01FC, 	WORD_LEN, 0}, 	// LL_SFFB_END_GAIN
{ 0xBCCC, 0x00C8, 	WORD_LEN, 0}, 	// LL_SFFB_START_MAX_GM
{ 0xBCCE, 0x0640, 	WORD_LEN, 0}, 	// LL_SFFB_END_MAX_GM
{ 0xBC90, 0x00C8, 	WORD_LEN, 0}, 	// LL_START_GRB_GM
{ 0xBC92, 0x0640, 	WORD_LEN, 0}, 	// LL_END_GRB_GM 

{ 0xBC0E, 0x0032, 	WORD_LEN, 0}, 	// 01 LL_GAMMA_CURVE_ADJ_START_POS
{ 0xBC10, 0x0064, 	WORD_LEN, 0}, 	// 02 LL_GAMMA_CURVE_ADJ_MID_POS
{ 0xBC12, 0x0FA0, 	WORD_LEN, 0}, 	// 051 4LL_GAMMA_CURVE_ADJ_END_POS

{ 0xBCAA, 0x0368, 	WORD_LEN, 0}, 	// 03E8 044C LL_CDC_THR_ADJ_START_POS
{ 0xBCAC, 0x018c, 	WORD_LEN, 0}, 	// 012C 00AF LL_CDC_THR_ADJ_MID_POS
{ 0xBCAE, 0x0009, 	WORD_LEN, 0}, 	// 0009 0009 LL_CDC_THR_ADJ_END_POS

{ 0xBCD8, 0x00C8, 	WORD_LEN, 0}, 	// LL_PCR_START_BM
{ 0xBCDA, 0x0A28, 	WORD_LEN, 0}, 	// LL_PCR_END_BM


//kernel //low
{ 0x3380, 0x0504, 	WORD_LEN, 0}, 	// KERNEL_CONFIG
{ 0x3380, 0x0505, 	WORD_LEN, 0}, 	// KERNEL_CONFIG
{ 0x3380, 0x0584, 	WORD_LEN, 0}, 	// KERNEL_CONFIG
{ 0x3380, 0x0586, 	WORD_LEN, 0}, 	// KERNEL_CONFIG
{ 0x3380, 0x0587, 	WORD_LEN, 0}, 	// KERNEL_CONFIG  


{ 0xBC94, 0x06,     BYTE_LEN, 0}, 	// LL_GB_START_THRESHOLD_0
{ 0xBC95, 0x05,     BYTE_LEN, 0}, 	// LL_GB_START_THRESHOLD_1
{ 0xBC9C, 0x09,     BYTE_LEN, 0}, 	// RESERVED_LL_9C
{ 0xBC9D, 0x05,     BYTE_LEN, 0}, 	// RESERVED_LL_9D
{ 0x33B0, 0x2A16, 	WORD_LEN, 0}, 	// FFNR_ALPHA_BETA
{ 0xBC8A, 0x00,     BYTE_LEN, 0}, 	// LL_START_FF_MIX_THRESH_Y
{ 0xBC8B, 0x4C,     BYTE_LEN, 0}, 	// 24 LL_END_FF_MIX_THRESH_Y
{ 0xBC8C, 0x00,     BYTE_LEN, 0}, 	// LL_START_FF_MIX_THRESH_YGAIN
{ 0xBC8D, 0x24,     BYTE_LEN, 0}, 	// LL_END_FF_MIX_THRESH_YGAIN
{ 0xBC8E, 0xFF,     BYTE_LEN, 0}, 	// LL_START_FF_MIX_THRESH_GAIN
{ 0xBC8F, 0x00,     BYTE_LEN, 0}, 	// LL_END_FF_MIX_THRESH_GAIN

{ 0xBCB2, 0x20,     BYTE_LEN, 0}, 	// LL_CDC_DARK_CLUS_SLOPE
{ 0xBCB3, 0x3A,     BYTE_LEN, 0}, 	// LL_CDC_DARK_CLUS_SATUR  

{ 0xBCB4, 0x39,     BYTE_LEN, 0}, 	// RESERVED_LL_B4
{ 0xBCB7, 0x39,     BYTE_LEN, 0}, 	// RESERVED_LL_B7
{ 0xBCB5, 0x20,     BYTE_LEN, 0}, 	// RESERVED_LL_B5
{ 0xBCB8, 0x3A,     BYTE_LEN, 0}, 	// RESERVED_LL_B8
{ 0xBCB6, 0x80,     BYTE_LEN, 0}, 	// RESERVED_LL_B6
{ 0xBCB9, 0x24,     BYTE_LEN, 0}, 	// RESERVED_LL_B9  


//ap_cal
{ 0x33BA, 0x0075, 	WORD_LEN, 0}, 	// 84 APEDGE_CONTROL
{ 0x33BE, 0x0000, 	WORD_LEN, 0}, 	// UA_KNEE_L
{ 0x33C2, 0x5500, 	WORD_LEN, 0}, 	// UA_WEIGHTS
{ 0xBC5E, 0x0300, 	WORD_LEN, 0},  //154 	// LL_START_APERTURE_GAIN_BM
{ 0xBC60, 0x0320, 	WORD_LEN, 0}, 	// LL_END_APERTURE_GAIN_BM
{ 0xBC62, 0x05,     BYTE_LEN, 0}, 	// LL_START_APERTURE_KPGAIN
{ 0xBC63, 0x14,     BYTE_LEN, 0}, 	// LL_END_APERTURE_KPGAIN
{ 0xBC64, 0x05,     BYTE_LEN, 0}, 	// LL_START_APERTURE_KNGAIN
{ 0xBC65, 0x14,     BYTE_LEN, 0}, 	// LL_END_APERTURE_KNGAIN
{ 0xBCE2, 0x05,     BYTE_LEN, 0}, 	// LL_START_POS_KNEE
{ 0xBCE3, 0x20,     BYTE_LEN, 0}, 	// LL_END_POS_KNEE
{ 0xBCE4, 0x05,     BYTE_LEN, 0}, 	// LL_START_NEG_KNEE
{ 0xBCE5, 0x20,     BYTE_LEN, 0}, 	// LL_END_NEG_KNEE
{ 0xBCC0, 0x20,     BYTE_LEN, 0}, 	// LL_SFFB_RAMP_START
{ 0xBCC1, 0x03,     BYTE_LEN, 0}, 	// LL_SFFB_RAMP_STOP
{ 0xBCC2, 0x1E,     BYTE_LEN, 0}, 	// LL_SFFB_SLOPE_START
{ 0xBCC3, 0x10,     BYTE_LEN, 0}, 	// LL_SFFB_SLOPE_STOP
{ 0xBCC4, 0x07,     BYTE_LEN, 0}, 	// LL_SFFB_THSTART
{ 0xBCC5, 0x0B,     BYTE_LEN, 0}, 	// LL_SFFB_THSTOP
{ 0xBCBA, 0x0009, 	WORD_LEN, 0}, 	// LL_SFFB_CONFIG


//ftb
{ 0xBC14, 0xFFFF, 	WORD_LEN, 0}, 	// FFFE LL_GAMMA_FADE_TO_BLACK_START_POS
{ 0xBC16, 0xFFFF, 	WORD_LEN, 0}, 	// LL_GAMMA_FADE_TO_BLACK_END_POS

//ap
{ 0xBC66, 0x0154, 	WORD_LEN, 0}, 	// LL_START_APERTURE_GM
{ 0xBC68, 0x07D0, 	WORD_LEN, 0}, 	// LL_END_APERTURE_GM
{ 0xBC6A, 0x05,     BYTE_LEN, 0},  //03 	// 06 EDGE LL_START_APERTURE_INTEGER_GAIN 
{ 0xBC6B, 0x00,     BYTE_LEN, 0}, 	// LL_END_APERTURE_INTEGER_GAIN
{ 0xBC6C, 0x00,     BYTE_LEN, 0}, 	// LL_START_APERTURE_EXP_GAIN
{ 0xBC6D, 0x00,     BYTE_LEN, 0}, 	// LL_END_APERTURE_EXP_GAIN    


//saturation
{ 0xBC56, 0x50,     BYTE_LEN, 0},   //64   //74 	//60 LL_START_CCM_SATURATION
{ 0xBC57, 0x01,     BYTE_LEN, 0},   //0B 	//0F //06 LL_END_CCM_SATURATION
{ 0xBCDE, 0x03,     BYTE_LEN, 0}, 	//03 LL_START_SYS_THRESHOLD
{ 0xBCDF, 0x50,     BYTE_LEN, 0}, 	//80 //50 LL_STOP_SYS_THRESHOLD
{ 0xBCE0, 0x06,     BYTE_LEN, 0}, 	//08 04 08 // LL_START_SYS_GAIN
{ 0xBCE1, 0x03,     BYTE_LEN, 0}, 	//1F //03 LL_STOP_SYS_GAIN


//sobel
{ 0xBCD0, 0x000A, 	WORD_LEN, 0}, 	// LL_SFFB_SOBEL_FLAT_START
{ 0xBCD2, 0x00FE, 	WORD_LEN, 0}, 	// LL_SFFB_SOBEL_FLAT_STOP
{ 0xBCD4, 0x001E, 	WORD_LEN, 0}, 	// LL_SFFB_SOBEL_SHARP_START
{ 0xBCD6, 0x00FF, 	WORD_LEN, 0}, 	// LL_SFFB_SOBEL_SHARP_STOP
{ 0xBCC6, 0x00,     BYTE_LEN, 0}, 	// LL_SFFB_SHARPENING_START
{ 0xBCC7, 0x00,     BYTE_LEN, 0}, 	// LL_SFFB_SHARPENING_STOP
{ 0xBCC8, 0x20,     BYTE_LEN, 0},   //70 	// LL_SFFB_FLATNESS_START
{ 0xBCC9, 0x50,     BYTE_LEN, 0}, 	//10 // LL_SFFB_FLATNESS_STOP
{ 0xBCCA, 0x04,     BYTE_LEN, 0}, 	// LL_SFFB_TRANSITION_START
{ 0xBCCB, 0x00,     BYTE_LEN, 0}, 	// LL_SFFB_TRANSITION_STOP
{ 0xBCE6, 0x03,     BYTE_LEN, 0},  //03 	// LL_SFFB_ZERO_ENABLE
{ 0x8417, 0x02,     BYTE_LEN, 0},  //01 	// SEQ_STATE_CFG_1_FD
{ 0xBCE2, 0x08,     BYTE_LEN, 0}, 	// LL_START_POS_KNEE
{ 0xBCE3, 0x3A,     BYTE_LEN, 0}, 	// LL_END_POS_KNEE
{ 0xBCE4, 0x08,     BYTE_LEN, 0}, 	// LL_START_NEG_KNEE
{ 0xBCE5, 0x3A,     BYTE_LEN, 0}, 	// LL_END_NEG_KNEE

{ 0xBC62, 0x04,     BYTE_LEN, 0}, 	// LL_START_APERTURE_KPGAIN
{ 0xBC63, 0x1F,     BYTE_LEN, 0}, 	// LL_END_APERTURE_KPGAIN
{ 0xBC64, 0x04,     BYTE_LEN, 0}, 	// LL_START_APERTURE_KNGAIN
{ 0xBC65, 0x1F,     BYTE_LEN, 0}, 	// LL_END_APERTURE_KNGAIN
{ 0xC8ED, 0x00,     BYTE_LEN, 0},	//3 	// CAM_TX_ENABLE_MODE
{ 0xC8BC, 0x04,     BYTE_LEN, 0}, 	// CAM_OUTPUT_0_JPEG_QSCALE_0
{ 0xC8BD, 0x0A,     BYTE_LEN, 0}, 	// CAM_OUTPUT_0_JPEG_QSCALE_1
{ 0xC8D2, 0x04,     BYTE_LEN, 0}, 	// CAM_OUTPUT_1_JPEG_QSCALE_0
{ 0xC8D3, 0x0A,     BYTE_LEN, 0}, 	// CAM_OUTPUT_1_JPEG_QSCALE_1
{ 0xDC3A, 0x23,     BYTE_LEN, 0}, 	// SYS_SEPIA_CR
{ 0xDC3B, 0xB2,     BYTE_LEN, 0}, 	// SYS_SEPIA_CB


//[AF settings]

{ 0xC400, 0x88,     BYTE_LEN, 0}, 	// AFM_ALGO
{ 0x8419, 0x05,     BYTE_LEN, 0}, 	// SEQ_STATE_CFG_1_AF
{ 0xB004, 0x0002, 	WORD_LEN, 0}, 	// AF_ALGO
{ 0xB002, 0x0301, 	WORD_LEN, 0}, 	// AF_MODE


//[Set PosMin/Max]
{ 0xC40A, 0x0028, 	WORD_LEN, 0}, 	// AFM_POS_MIN
{ 0xC40C, 0x00BE, 	WORD_LEN, 0}, 	// AFM_POS_MAX

//[AF Position Settings]

{ 0xB018, 0x00,     BYTE_LEN, 0}, 	// AF_FS_POS_0
{ 0xB019, 0x1E,     BYTE_LEN, 0}, 	// AF_FS_POS_1
{ 0xB01A, 0x2D,     BYTE_LEN, 0}, 	// AF_FS_POS_2
{ 0xB01B, 0x3C,     BYTE_LEN, 0}, 	// AF_FS_POS_3
{ 0xB01C, 0x4B,     BYTE_LEN, 0}, 	// AF_FS_POS_4
{ 0xB01D, 0x5A,     BYTE_LEN, 0}, 	// AF_FS_POS_5
{ 0xB01E, 0x69,     BYTE_LEN, 0}, 	// AF_FS_POS_6
{ 0xB01F, 0x78,     BYTE_LEN, 0}, 	// AF_FS_POS_7
{ 0xB020, 0x87,     BYTE_LEN, 0}, 	// AF_FS_POS_8
{ 0xB021, 0x96,     BYTE_LEN, 0}, 	// AF_FS_POS_9
{ 0xB022, 0xA5,     BYTE_LEN, 0}, 	// AF_FS_POS_10
{ 0xB023, 0xB4,     BYTE_LEN, 0}, 	// AF_FS_POS_11
{ 0xB024, 0xC3,     BYTE_LEN, 0}, 	// AF_FS_POS_12
{ 0xB012, 0x0D,     BYTE_LEN, 0}, 	// AF_FS_NUM_STEPS
{ 0xB014, 0x0F,     BYTE_LEN, 0}, 	// AF_FS_STEP_SIZE
{ 0xB013, 0x77,     BYTE_LEN, 0}, 	// AF_FS_NUM_STEPS2
{ 0xB014, 0x05,     BYTE_LEN, 0}, 	// AF_FS_STEP_SIZE
{ 0xB045, 0x0015, 	WORD_LEN, 0}, //
{ 0x8404, 0x06,     BYTE_LEN, 0}, 	// SEQ_CMD
//POLL_{0x8404,0x00,!=0x00,DELAY=10,TIMEOUT=100	//Wait for the core ready





};

#else
//crazyboys 2014 0621 init change
struct mt9p111_i2c_reg_conf mt9p111_reg_init_tab[] = {
//[*WithOut OTP*]

//XMCLK=24000000
 //[Step1-Reset]
// Reset the sensor..hardware specific for demo2 board...toggles the reset pin
//STATE=Sensor Reset, 1
//STATE=Sensor Reset, 0
 //for devware
//STATE = Num Capture Frames, 2
 //[Step2-PLL_Timing]
//for 24MHz input, VCO=MAX PCLK=76.8MHz
{ 0x0010, 0x0340  ,WORD_LEN,0},
{ 0x0012, 0x0090  ,WORD_LEN,0},
{ 0x0014, 0x2025  ,WORD_LEN,0},
{ 0x001E, 0x0565 	,WORD_LEN,0}, // PAD_SLEW_PAD_CONFIG
{ 0x0022, 0x0030  ,WORD_LEN,0}, //0x01E0 	,WORD_LEN,0}, // VDD_DIS_COUNTER
{ 0x002A, 0x7F7E   ,WORD_LEN,0}, //0x7F7F 	,WORD_LEN,0}, // PLL_P4_P5_P6_DIVIDERS By Hwang 20101104
{ 0x002C, 0x0000 	,WORD_LEN,0}, // PLL_P7_DIVIDER
{ 0x002E, 0x0000 	,WORD_LEN,0}, // SENSOR_CLOCK_DIVIDER
{ 0x0018, 0x4008 	,WORD_LEN,100}, // STANDBY_CONTROL_AND_STATUS
//DELAY=100
//timing_settings
{ 0x0010, 0x0340 	,WORD_LEN,0}, // PLL_DIVIDERS
{ 0x098E, 0x483A 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS [CAM_CORE_A_Y_ADDR_START]
{ 0xC83A, 0x000C 	,WORD_LEN,0}, // CAM_CORE_A_Y_ADDR_START
{ 0xC83C, 0x0018 	,WORD_LEN,0}, // CAM_CORE_A_X_ADDR_START
{ 0xC83E, 0x07B1 	,WORD_LEN,0}, // CAM_CORE_A_Y_ADDR_END
{ 0xC840, 0x0A45 	,WORD_LEN,0}, // CAM_CORE_A_X_ADDR_END
{ 0xC842, 0x0001 	,WORD_LEN,0}, // CAM_CORE_A_ROW_SPEED
{ 0xC844, 0x0103 	,WORD_LEN,0}, // CAM_CORE_A_SKIP_X_CORE
{ 0xC846, 0x0103 	,WORD_LEN,0}, // CAM_CORE_A_SKIP_Y_CORE
{ 0xC848, 0x0103 	,WORD_LEN,0}, // CAM_CORE_A_SKIP_X_PIPE
{ 0xC84A, 0x0103 	,WORD_LEN,0}, // CAM_CORE_A_SKIP_Y_PIPE
{ 0xC84C, 0x00F6 	,WORD_LEN,0}, // CAM_CORE_A_POWER_MODE
{ 0xC84E, 0x0001 	,WORD_LEN,0}, // CAM_CORE_A_BIN_MODE
{ 0xC850, 0x00 	,BYTE_LEN,0}, // CAM_CORE_A_ORIENTATION
{ 0xC851, 0x00 	,BYTE_LEN,0}, // CAM_CORE_A_PIXEL_ORDER
{ 0xC852, 0x019C 	,WORD_LEN,0}, // CAM_CORE_A_FINE_CORRECTION
{ 0xC854, 0x0732 	,WORD_LEN,0}, // CAM_CORE_A_FINE_ITMIN
{ 0xC858, 0x0000 	,WORD_LEN,0}, // CAM_CORE_A_COARSE_ITMIN
{ 0xC85A, 0x0001 	,WORD_LEN,0}, // CAM_CORE_A_COARSE_ITMAX_MARGIN
{ 0xC85C, 0x0423 	,WORD_LEN,0}, // CAM_CORE_A_MIN_FRAME_LENGTH_LINES
{ 0xC85E, 0xFFFF 	,WORD_LEN,0}, // CAM_CORE_A_MAX_FRAME_LENGTH_LINES
{ 0xC860, 0x0423 	,WORD_LEN,0}, // CAM_CORE_A_BASE_FRAME_LENGTH_LINES
{ 0xC862, 0x1194 	,WORD_LEN,0}, // CAM_CORE_A_MIN_LINE_LENGTH_PCLK
{ 0xC864, 0xFFFE 	,WORD_LEN,0}, // CAM_CORE_A_MAX_LINE_LENGTH_PCLK
{ 0xC866, 0x7F7F 	,WORD_LEN,0}, // CAM_CORE_A_P4_5_6_DIVIDER
{ 0xC868, 0x0423 	,WORD_LEN,0}, // CAM_CORE_A_FRAME_LENGTH_LINES
{ 0xC86A, 0x1194 	,WORD_LEN,0}, // CAM_CORE_A_LINE_LENGTH_PCK
{ 0xC86C, 0x0518 	,WORD_LEN,0}, // CAM_CORE_A_OUTPUT_SIZE_WIDTH
{ 0xC86E, 0x03D4 	,WORD_LEN,0}, // CAM_CORE_A_OUTPUT_SIZE_HEIGHT
{ 0xC870, 0x0014 	,WORD_LEN,0}, // CAM_CORE_A_RX_FIFO_TRIGGER_MARK
{ 0xC858, 0x0003 	,WORD_LEN,0}, // CAM_CORE_A_COARSE_ITMIN
{ 0xC8B8, 0x0004 	,WORD_LEN,0}, // CAM_OUTPUT_0_JPEG_CONTROL
{ 0xC8AE, 0x0001 	,WORD_LEN,0}, // CAM_OUTPUT_0_OUTPUT_FORMAT
//{ 0xC8AA, 0x0500 	,WORD_LEN,0}, // CAM_OUTPUT_0_IMAGE_WIDTH
//{ 0xC8AC, 0x03C0 	,WORD_LEN,0}, // CAM_OUTPUT_0_IMAGE_HEIGHT

{0xC8AA, 0x0280, WORD_LEN, 0},	//500 	// CAM_OUTPUT_0_IMAGE_WIDTH
{0xC8AC, 0x01E0, WORD_LEN, 0},	//3C0 	// CAM_OUTPUT_0_IMAGE_HEIGHT
{0xC8B0,0x0000,WORD_LEN,0}, // CAM_OUTPUT_0_JPEG_CONTROL   // crazyboys 20140618

 {0x098E, 0x4872, WORD_LEN, 0}, 	// LOGICAL_ADDRESS_ACCESS //crazyboys 20140618
{ 0xC872, 0x0010 	,WORD_LEN,0}, // CAM_CORE_B_Y_ADDR_START
{ 0xC874, 0x001C 	,WORD_LEN,0}, // CAM_CORE_B_X_ADDR_START
{ 0xC876, 0x07AF 	,WORD_LEN,0}, // CAM_CORE_B_Y_ADDR_END
{ 0xC878, 0x0A43 	,WORD_LEN,0}, // CAM_CORE_B_X_ADDR_END
{ 0xC87A, 0x0001 	,WORD_LEN,0}, // CAM_CORE_B_ROW_SPEED
{ 0xC87C, 0x0101 	,WORD_LEN,0}, // CAM_CORE_B_SKIP_X_CORE
{ 0xC87E, 0x0101 	,WORD_LEN,0}, // CAM_CORE_B_SKIP_Y_CORE
{ 0xC880, 0x0101 	,WORD_LEN,0}, // CAM_CORE_B_SKIP_X_PIPE
{ 0xC882, 0x0101 	,WORD_LEN,0}, // CAM_CORE_B_SKIP_Y_PIPE
{ 0xC884, 0x00F2 	,WORD_LEN,0}, // CAM_CORE_B_POWER_MODE
{ 0xC886, 0x0000 	,WORD_LEN,0}, // CAM_CORE_B_BIN_MODE
{ 0xC888, 0x00 	,BYTE_LEN,0}, // CAM_CORE_B_ORIENTATION
{ 0xC889, 0x00 	,BYTE_LEN,0}, // CAM_CORE_B_PIXEL_ORDER
{ 0xC88A, 0x009C 	,WORD_LEN,0}, // CAM_CORE_B_FINE_CORRECTION
{ 0xC88C, 0x034A 	,WORD_LEN,0}, // CAM_CORE_B_FINE_ITMIN
{ 0xC890, 0x0000 	,WORD_LEN,0}, // CAM_CORE_B_COARSE_ITMIN
{ 0xC892, 0x0001 	,WORD_LEN,0}, // CAM_CORE_B_COARSE_ITMAX_MARGIN
{ 0xC894, 0x07EF 	,WORD_LEN,0}, // CAM_CORE_B_MIN_FRAME_LENGTH_LINES
{ 0xC896, 0xFFFF 	,WORD_LEN,0}, // CAM_CORE_B_MAX_FRAME_LENGTH_LINES
{ 0xC898, 0x082F 	,WORD_LEN,0}, // CAM_CORE_B_BASE_FRAME_LENGTH_LINES
{ 0xC89A, 0x1964 	,WORD_LEN,0}, // CAM_CORE_B_MIN_LINE_LENGTH_PCLK
{ 0xC89C, 0xFFFE 	,WORD_LEN,0}, // CAM_CORE_B_MAX_LINE_LENGTH_PCLK
{ 0xC89E, 0x7F7F 	,WORD_LEN,0}, // CAM_CORE_B_P4_5_6_DIVIDER
{ 0xC8A0, 0x07EF 	,WORD_LEN,0}, // CAM_CORE_B_FRAME_LENGTH_LINES
{ 0xC8A2, 0x1964 	,WORD_LEN,0}, // CAM_CORE_B_LINE_LENGTH_PCK
{ 0xC8A4, 0x0A28 	,WORD_LEN,0}, // CAM_CORE_B_OUTPUT_SIZE_WIDTH
{ 0xC8A6, 0x07A0 	,WORD_LEN,0}, // CAM_CORE_B_OUTPUT_SIZE_HEIGHT
{ 0xC8A8, 0x0124 	,WORD_LEN,0}, // CAM_CORE_B_RX_FIFO_TRIGGER_MARK
{ 0xC890, 0x0003 	,WORD_LEN,0}, // CAM_CORE_B_COARSE_ITMIN
{ 0xC8C0, 0x0A20 	,WORD_LEN,0}, // CAM_OUTPUT_1_IMAGE_WIDTH
{ 0xC8C2, 0x0798 	,WORD_LEN,0}, // CAM_OUTPUT_1_IMAGE_HEIGHT
{ 0xC89A, 0x1964 	,WORD_LEN,0}, // CAM_CORE_B_MIN_LINE_LENGTH_PCLK
{ 0xC8A2, 0x1964 	,WORD_LEN,0}, // CAM_CORE_B_LINE_LENGTH_PCK
{ 0xC8C4, 0x0001 	,WORD_LEN,0}, // CAM_OUTPUT_1_OUTPUT_FORMAT
{ 0xC8C6, 0x0000 	,WORD_LEN,0}, // CAM_OUTPUT_1_OUTPUT_FORMAT_ORDER
{ 0xC8CE, 0x0014 	,WORD_LEN,0}, // CAM_OUTPUT_1_JPEG_CONTROL
{ 0xD822, 0x4610 	,WORD_LEN,0}, // JPEG_JPSS_CTRL_VAR
{ 0x3330, 0x0000 	,WORD_LEN,0}, // OUTPUT_FORMAT_TEST
{ 0x098E, 0xA00E 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS
{ 0xA00E, 0x32 	,BYTE_LEN,0}, // FD_MAX_NUM_AUTOCOR_FUNC_VALUES_TO_CHECK
{ 0xA010, 0x00CC 	,WORD_LEN,0}, // FD_MIN_EXPECTED50HZ_FLICKER_PERIOD
{ 0xA012, 0x00E0 	,WORD_LEN,0}, // FD_MAX_EXPECTED50HZ_FLICKER_PERIOD
{ 0xA014, 0x00A8 	,WORD_LEN,0}, // FD_MIN_EXPECTED60HZ_FLICKER_PERIOD
{ 0xA016, 0x00BC 	,WORD_LEN,0}, // FD_MAX_EXPECTED60HZ_FLICKER_PERIOD
{ 0xA018, 0x00D6 	,WORD_LEN,0}, // FD_EXPECTED50HZ_FLICKER_PERIOD_IN_CONTEXT_A
{ 0xA01A, 0x0075 	,WORD_LEN,0}, // FD_EXPECTED50HZ_FLICKER_PERIOD_IN_CONTEXT_B
{ 0xA01C, 0x00B2 	,WORD_LEN,0}, // FD_EXPECTED60HZ_FLICKER_PERIOD_IN_CONTEXT_A
{ 0xA01E, 0x0062 	,WORD_LEN,0}, // FD_EXPECTED60HZ_FLICKER_PERIOD_IN_CONTEXT_B
{ 0xA000, 0x10 	,BYTE_LEN,0}, // FD_STATUS
{ 0x8417, 0x02 	,BYTE_LEN,0}, // SEQ_STATE_CFG_1_FD
{ 0x8404, 0x06 	,BYTE_LEN,300}, // SEQ_CMD
//;DELAY=300

 //[Step3-Recommended]
//[k28a_rev3_FW_patch7]
 //  k28a_rev03_patch07_CR30221_MCNEX_AWB_AFNOISE_YOFFSET_APGA_REV1
{ 0x0982, 0x0000 	,WORD_LEN,0}, // ACCESS_CTL_STAT
{ 0x098A, 0x0000 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x886C, 0xC0F1,WORD_LEN,0},
{ 0x886E, 0xC5E1,WORD_LEN,0},
{ 0x8870, 0x246A,WORD_LEN,0},
{ 0x8872, 0x1280,WORD_LEN,0},
{ 0x8874, 0xC4E1,WORD_LEN,0},
{ 0x8876, 0xD20F,WORD_LEN,0},
{ 0x8878, 0x2069,WORD_LEN,0},
{ 0x887A, 0x0000,WORD_LEN,0},
{ 0x887C, 0x6A62,WORD_LEN,0},
{ 0x887E, 0x1303,WORD_LEN,0},
{ 0x8880, 0x0084,WORD_LEN,0},
{ 0x8882, 0x1734,WORD_LEN,0},
{ 0x8884, 0x7005,WORD_LEN,0},
{ 0x8886, 0xD801,WORD_LEN,0},
{ 0x8888, 0x8A41,WORD_LEN,0},
{ 0x888A, 0xD900,WORD_LEN,0},
{ 0x888C, 0x0D5A,WORD_LEN,0},
{ 0x888E, 0x0664,WORD_LEN,0},
{ 0x8890, 0x8B61,WORD_LEN,0},
{ 0x8892, 0xE80B,WORD_LEN,0},
{ 0x8894, 0x000D,WORD_LEN,0},
{ 0x8896, 0x0020,WORD_LEN,0},
{ 0x8898, 0xD508,WORD_LEN,0},
{ 0x889A, 0x1504,WORD_LEN,0},
{ 0x889C, 0x1400,WORD_LEN,0},
{ 0x889E, 0x7840,WORD_LEN,0},
{ 0x88A0, 0xD007,WORD_LEN,0},
{ 0x88A2, 0x0DFB,WORD_LEN,0},
{ 0x88A4, 0x9004,WORD_LEN,0},
{ 0x88A6, 0xC4C1,WORD_LEN,0},
{ 0x88A8, 0x2029,WORD_LEN,0},
{ 0x88AA, 0x0300,WORD_LEN,0},
{ 0x88AC, 0x0219,WORD_LEN,0},
{ 0x88AE, 0x06C4,WORD_LEN,0},
{ 0x88B0, 0xFF80,WORD_LEN,0},
{ 0x88B2, 0x08C8,WORD_LEN,0},
{ 0x88B4, 0xFF80,WORD_LEN,0},
{ 0x88B6, 0x086C,WORD_LEN,0},
{ 0x88B8, 0xFF80,WORD_LEN,0},
{ 0x88BA, 0x08C0,WORD_LEN,0},
{ 0x88BC, 0xFF80,WORD_LEN,0},
{ 0x88BE, 0x08C8,WORD_LEN,0},
{ 0x88C0, 0xFF80,WORD_LEN,0},
{ 0x88C2, 0x08D0,WORD_LEN,0},
{ 0x88C4, 0xFF80,WORD_LEN,0},
{ 0x88C6, 0x0978,WORD_LEN,0},
{ 0x88C8, 0x0007,WORD_LEN,0},
{ 0x88CA, 0x0001,WORD_LEN,0},
{ 0x88CC, 0x0000,WORD_LEN,0},
{ 0x88CE, 0x0000,WORD_LEN,0},
{ 0x88D0, 0xC0F1,WORD_LEN,0},
{ 0x88D2, 0x097E,WORD_LEN,0},
{ 0x88D4, 0x06E4,WORD_LEN,0},
{ 0x88D6, 0xDA14,WORD_LEN,0},
{ 0x88D8, 0xD0C8,WORD_LEN,0},
{ 0x88DA, 0xDE00,WORD_LEN,0},
{ 0x88DC, 0xD1C8,WORD_LEN,0},
{ 0x88DE, 0x2E41,WORD_LEN,0},
{ 0x88E0, 0x120C,WORD_LEN,0},
{ 0x88E2, 0xA895,WORD_LEN,0},
{ 0x88E4, 0xD5C7,WORD_LEN,0},
{ 0x88E6, 0xA8D4,WORD_LEN,0},
{ 0x88E8, 0xA8D6,WORD_LEN,0},
{ 0x88EA, 0x0F0A,WORD_LEN,0},
{ 0x88EC, 0x06A4,WORD_LEN,0},
{ 0x88EE, 0x2555,WORD_LEN,0},
{ 0x88F0, 0x1440,WORD_LEN,0},
{ 0x88F2, 0xD0C5,WORD_LEN,0},
{ 0x88F4, 0x2555,WORD_LEN,0},
{ 0x88F6, 0x1441,WORD_LEN,0},
{ 0x88F8, 0x77A9,WORD_LEN,0},
{ 0x88FA, 0xA515,WORD_LEN,0},
{ 0x88FC, 0xD0C3,WORD_LEN,0},
{ 0x88FE, 0xA020,WORD_LEN,0},
{ 0x8900, 0xD1C3,WORD_LEN,0},
{ 0x8902, 0x70E9,WORD_LEN,0},
{ 0x8904, 0x0EEE,WORD_LEN,0},
{ 0x8906, 0x06A4,WORD_LEN,0},
{ 0x8908, 0xDA44,WORD_LEN,0},
{ 0x890A, 0xD0C2,WORD_LEN,0},
{ 0x890C, 0xD1C2,WORD_LEN,0},
{ 0x890E, 0xA502,WORD_LEN,0},
{ 0x8910, 0xD0C2,WORD_LEN,0},
{ 0x8912, 0xA0E0,WORD_LEN,0},
{ 0x8914, 0xD0C2,WORD_LEN,0},
{ 0x8916, 0xB0CB,WORD_LEN,0},
{ 0x8918, 0x8900,WORD_LEN,0},
{ 0x891A, 0xDB08,WORD_LEN,0},
{ 0x891C, 0xDAF0,WORD_LEN,0},
{ 0x891E, 0x19B0,WORD_LEN,0},
{ 0x8920, 0x00C2,WORD_LEN,0},
{ 0x8922, 0xB8A6,WORD_LEN,0},
{ 0x8924, 0xA900,WORD_LEN,0},
{ 0x8926, 0xD851,WORD_LEN,0},
{ 0x8928, 0x19B2,WORD_LEN,0},
{ 0x892A, 0x0002,WORD_LEN,0},
{ 0x892C, 0xD852,WORD_LEN,0},
{ 0x892E, 0x19B3,WORD_LEN,0},
{ 0x8930, 0x0002,WORD_LEN,0},
{ 0x8932, 0xD855,WORD_LEN,0},
{ 0x8934, 0x19B6,WORD_LEN,0},
{ 0x8936, 0x0002,WORD_LEN,0},
{ 0x8938, 0xD856,WORD_LEN,0},
{ 0x893A, 0x19B7,WORD_LEN,0},
{ 0x893C, 0x0002,WORD_LEN,0},
{ 0x893E, 0xD896,WORD_LEN,0},
{ 0x8940, 0x19B8,WORD_LEN,0},
{ 0x8942, 0x0004,WORD_LEN,0},
{ 0x8944, 0xD814,WORD_LEN,0},
{ 0x8946, 0x19BA,WORD_LEN,0},
{ 0x8948, 0x0004,WORD_LEN,0},
{ 0x894A, 0xD805,WORD_LEN,0},
{ 0x894C, 0xB111,WORD_LEN,0},
{ 0x894E, 0x19B1,WORD_LEN,0},
{ 0x8950, 0x0082,WORD_LEN,0},
{ 0x8952, 0x19B4,WORD_LEN,0},
{ 0x8954, 0x00C2,WORD_LEN,0},
{ 0x8956, 0x19B5,WORD_LEN,0},
{ 0x8958, 0x0082,WORD_LEN,0},
{ 0x895A, 0xD1B2,WORD_LEN,0},
{ 0x895C, 0x2556,WORD_LEN,0},
{ 0x895E, 0x12C0,WORD_LEN,0},
{ 0x8960, 0x0E92,WORD_LEN,0},
{ 0x8962, 0x06A4,WORD_LEN,0},
{ 0x8964, 0xDA2C,WORD_LEN,0},
{ 0x8966, 0xD0B0,WORD_LEN,0},
{ 0x8968, 0x2556,WORD_LEN,0},
{ 0x896A, 0x12C1,WORD_LEN,0},
{ 0x896C, 0xA519,WORD_LEN,0},
{ 0x896E, 0xD0AF,WORD_LEN,0},
{ 0x8970, 0x0145,WORD_LEN,0},
{ 0x8972, 0x06E4,WORD_LEN,0},
{ 0x8974, 0xA020,WORD_LEN,0},
{ 0x8976, 0x78E0,WORD_LEN,0},
{ 0x8978, 0xC0F1,WORD_LEN,0},
{ 0x897A, 0xD0AD,WORD_LEN,0},
{ 0x897C, 0xD1AD,WORD_LEN,0},
{ 0x897E, 0xD2AE,WORD_LEN,0},
{ 0x8980, 0xA020,WORD_LEN,0},
{ 0x8982, 0x8A09,WORD_LEN,0},
{ 0x8984, 0x8A6A,WORD_LEN,0},
{ 0x8986, 0xB808,WORD_LEN,0},
{ 0x8988, 0x7865,WORD_LEN,0},
{ 0x898A, 0xB880,WORD_LEN,0},
{ 0x898C, 0x2841,WORD_LEN,0},
{ 0x898E, 0x020C,WORD_LEN,0},
{ 0x8990, 0xAA89,WORD_LEN,0},
{ 0x8992, 0xAA0A,WORD_LEN,0},
{ 0x8994, 0xD2A9,WORD_LEN,0},
{ 0x8996, 0x8A00,WORD_LEN,0},
{ 0x8998, 0x0809,WORD_LEN,0},
{ 0x899A, 0x01DE,WORD_LEN,0},
{ 0x899C, 0xB8A7,WORD_LEN,0},
{ 0x899E, 0xAA00,WORD_LEN,0},
{ 0x89A0, 0xDBFF,WORD_LEN,0},
{ 0x89A2, 0x2B41,WORD_LEN,0},
{ 0x89A4, 0x0200,WORD_LEN,0},
{ 0x89A6, 0xAA0C,WORD_LEN,0},
{ 0x89A8, 0x1228,WORD_LEN,0},
{ 0x89AA, 0x0080,WORD_LEN,0},
{ 0x89AC, 0xAA6D,WORD_LEN,0},
{ 0x89AE, 0x0815,WORD_LEN,0},
{ 0x89B0, 0x01DE,WORD_LEN,0},
{ 0x89B2, 0xB8A7,WORD_LEN,0},
{ 0x89B4, 0x1A28,WORD_LEN,0},
{ 0x89B6, 0x0002,WORD_LEN,0},
{ 0x89B8, 0x8123,WORD_LEN,0},
{ 0x89BA, 0x7960,WORD_LEN,0},
{ 0x89BC, 0x1228,WORD_LEN,0},
{ 0x89BE, 0x0080,WORD_LEN,0},
{ 0x89C0, 0xC0D1,WORD_LEN,0},
{ 0x89C2, 0x7EE0,WORD_LEN,0},
{ 0x89C4, 0xC0F1,WORD_LEN,0},
{ 0x89C6, 0x088E,WORD_LEN,0},
{ 0x89C8, 0x06E4,WORD_LEN,0},
{ 0x89CA, 0xDB03,WORD_LEN,0},
{ 0x89CC, 0xD29B,WORD_LEN,0},
{ 0x89CE, 0x8A2E,WORD_LEN,0},
{ 0x89D0, 0x8ACF,WORD_LEN,0},
{ 0x89D2, 0xB908,WORD_LEN,0},
{ 0x89D4, 0x79C5,WORD_LEN,0},
{ 0x89D6, 0xDD65,WORD_LEN,0},
{ 0x89D8, 0x094F,WORD_LEN,0},
{ 0x89DA, 0x00D1,WORD_LEN,0},
{ 0x89DC, 0xD90A,WORD_LEN,0},
{ 0x89DE, 0x1A24,WORD_LEN,0},
{ 0x89E0, 0x0042,WORD_LEN,0},
{ 0x89E2, 0x8A24,WORD_LEN,0},
{ 0x89E4, 0xE1E5,WORD_LEN,0},
{ 0x89E6, 0xF6C9,WORD_LEN,0},
{ 0x89E8, 0xD902,WORD_LEN,0},
{ 0x89EA, 0x2941,WORD_LEN,0},
{ 0x89EC, 0x0200,WORD_LEN,0},
{ 0x89EE, 0xAA0E,WORD_LEN,0},
{ 0x89F0, 0xAA2F,WORD_LEN,0},
{ 0x89F2, 0x70A9,WORD_LEN,0},
{ 0x89F4, 0xF014,WORD_LEN,0},
{ 0x89F6, 0xE1C8,WORD_LEN,0},
{ 0x89F8, 0x0036,WORD_LEN,0},
{ 0x89FA, 0x000B,WORD_LEN,0},
{ 0x89FC, 0xE0C8,WORD_LEN,0},
{ 0x89FE, 0x003A,WORD_LEN,0},
{ 0x8A00, 0x000A,WORD_LEN,0},
{ 0x8A02, 0xD901,WORD_LEN,0},
{ 0x8A04, 0x2941,WORD_LEN,0},
{ 0x8A06, 0x0200,WORD_LEN,0},
{ 0x8A08, 0xAA0E,WORD_LEN,0},
{ 0x8A0A, 0xAA2F,WORD_LEN,0},
{ 0x8A0C, 0xD848,WORD_LEN,0},
{ 0x8A0E, 0xF008,WORD_LEN,0},
{ 0x8A10, 0xD900,WORD_LEN,0},
{ 0x8A12, 0x2941,WORD_LEN,0},
{ 0x8A14, 0x0200,WORD_LEN,0},
{ 0x8A16, 0xAA0E,WORD_LEN,0},
{ 0x8A18, 0xAA2F,WORD_LEN,0},
{ 0x8A1A, 0xD820,WORD_LEN,0},
{ 0x8A1C, 0xD288,WORD_LEN,0},
{ 0x8A1E, 0x8A26,WORD_LEN,0},
{ 0x8A20, 0xB961,WORD_LEN,0},
{ 0x8A22, 0xAA26,WORD_LEN,0},
{ 0x8A24, 0xF00D,WORD_LEN,0},
{ 0x8A26, 0x091F,WORD_LEN,0},
{ 0x8A28, 0x0091,WORD_LEN,0},
{ 0x8A2A, 0x8A24,WORD_LEN,0},
{ 0x8A2C, 0xF1E5,WORD_LEN,0},
{ 0x8A2E, 0x0913,WORD_LEN,0},
{ 0x8A30, 0x0812,WORD_LEN,0},
{ 0x8A32, 0x08E1,WORD_LEN,0},
{ 0x8A34, 0x8812,WORD_LEN,0},
{ 0x8A36, 0x2B41,WORD_LEN,0},
{ 0x8A38, 0x0201,WORD_LEN,0},
{ 0x8A3A, 0xAA2E,WORD_LEN,0},
{ 0x8A3C, 0xAA6F,WORD_LEN,0},
{ 0x8A3E, 0x0081,WORD_LEN,0},
{ 0x8A40, 0x06C4,WORD_LEN,0},
{ 0x8A42, 0x09F7,WORD_LEN,0},
{ 0x8A44, 0x8051,WORD_LEN,0},
{ 0x8A46, 0x8A24,WORD_LEN,0},
{ 0x8A48, 0xF1F3,WORD_LEN,0},
{ 0x8A4A, 0x78E0,WORD_LEN,0},
{ 0x8A4C, 0xC0F1,WORD_LEN,0},
{ 0x8A4E, 0x0FFA,WORD_LEN,0},
{ 0x8A50, 0x0684,WORD_LEN,0},
{ 0x8A52, 0xD67A,WORD_LEN,0},
{ 0x8A54, 0x7508,WORD_LEN,0},
{ 0x8A56, 0x8E01,WORD_LEN,0},
{ 0x8A58, 0xD179,WORD_LEN,0},
{ 0x8A5A, 0x2046,WORD_LEN,0},
{ 0x8A5C, 0x00C0,WORD_LEN,0},
{ 0x8A5E, 0xAE01,WORD_LEN,0},
{ 0x8A60, 0x1145,WORD_LEN,0},
{ 0x8A62, 0x0080,WORD_LEN,0},
{ 0x8A64, 0x1146,WORD_LEN,0},
{ 0x8A66, 0x0082,WORD_LEN,0},
{ 0x8A68, 0xB808,WORD_LEN,0},
{ 0x8A6A, 0x7845,WORD_LEN,0},
{ 0x8A6C, 0x0817,WORD_LEN,0},
{ 0x8A6E, 0x001E,WORD_LEN,0},
{ 0x8A70, 0x8900,WORD_LEN,0},
{ 0x8A72, 0x8941,WORD_LEN,0},
{ 0x8A74, 0xB808,WORD_LEN,0},
{ 0x8A76, 0x7845,WORD_LEN,0},
{ 0x8A78, 0x080B,WORD_LEN,0},
{ 0x8A7A, 0x00DE,WORD_LEN,0},
{ 0x8A7C, 0x70A9,WORD_LEN,0},
{ 0x8A7E, 0xFFD2,WORD_LEN,0},
{ 0x8A80, 0x7508,WORD_LEN,0},
{ 0x8A82, 0x1604,WORD_LEN,0},
{ 0x8A84, 0x1090,WORD_LEN,0},
{ 0x8A86, 0x0D93,WORD_LEN,0},
{ 0x8A88, 0x1400,WORD_LEN,0},
{ 0x8A8A, 0x8EEA,WORD_LEN,0},
{ 0x8A8C, 0x8E0B,WORD_LEN,0},
{ 0x8A8E, 0x214A,WORD_LEN,0},
{ 0x8A90, 0x2040,WORD_LEN,0},
{ 0x8A92, 0x8E2D,WORD_LEN,0},
{ 0x8A94, 0xBF08,WORD_LEN,0},
{ 0x8A96, 0x7F05,WORD_LEN,0},
{ 0x8A98, 0x8E0C,WORD_LEN,0},
{ 0x8A9A, 0xB808,WORD_LEN,0},
{ 0x8A9C, 0x7825,WORD_LEN,0},
{ 0x8A9E, 0x7710,WORD_LEN,0},
{ 0x8AA0, 0x21C2,WORD_LEN,0},
{ 0x8AA2, 0x244C,WORD_LEN,0},
{ 0x8AA4, 0x081D,WORD_LEN,0},
{ 0x8AA6, 0x03E3,WORD_LEN,0},
{ 0x8AA8, 0xD9FF,WORD_LEN,0},
{ 0x8AAA, 0x2702,WORD_LEN,0},
{ 0x8AAC, 0x1002,WORD_LEN,0},
{ 0x8AAE, 0x2A05,WORD_LEN,0},
{ 0x8AB0, 0x037E,WORD_LEN,0},
{ 0x8AB2, 0x0876,WORD_LEN,0},
{ 0x8AB4, 0x06E4,WORD_LEN,0},
{ 0x8AB6, 0x702F,WORD_LEN,0},
{ 0x8AB8, 0x7810,WORD_LEN,0},
{ 0x8ABA, 0x7F02,WORD_LEN,0},
{ 0x8ABC, 0x7FF0,WORD_LEN,0},
{ 0x8ABE, 0xF00B,WORD_LEN,0},
{ 0x8AC0, 0x78E2,WORD_LEN,0},
{ 0x8AC2, 0x2805,WORD_LEN,0},
{ 0x8AC4, 0x037E,WORD_LEN,0},
{ 0x8AC6, 0x0862,WORD_LEN,0},
{ 0x8AC8, 0x06E4,WORD_LEN,0},
{ 0x8ACA, 0x702F,WORD_LEN,0},
{ 0x8ACC, 0x7810,WORD_LEN,0},
{ 0x8ACE, 0x671F,WORD_LEN,0},
{ 0x8AD0, 0x7FF0,WORD_LEN,0},
{ 0x8AD2, 0x7FEF,WORD_LEN,0},
{ 0x8AD4, 0x8E08,WORD_LEN,0},
{ 0x8AD6, 0xBF06,WORD_LEN,0},
{ 0x8AD8, 0xD15A,WORD_LEN,0},
{ 0x8ADA, 0xB8C3,WORD_LEN,0},
{ 0x8ADC, 0x78E5,WORD_LEN,0},
{ 0x8ADE, 0xB88F,WORD_LEN,0},
{ 0x8AE0, 0x1908,WORD_LEN,0},
{ 0x8AE2, 0x0024,WORD_LEN,0},
{ 0x8AE4, 0x2841,WORD_LEN,0},
{ 0x8AE6, 0x0201,WORD_LEN,0},
{ 0x8AE8, 0x1E26,WORD_LEN,0},
{ 0x8AEA, 0x1042,WORD_LEN,0},
{ 0x8AEC, 0x0D15,WORD_LEN,0},
{ 0x8AEE, 0x1423,WORD_LEN,0},
{ 0x8AF0, 0x1E27,WORD_LEN,0},
{ 0x8AF2, 0x1002,WORD_LEN,0},
{ 0x8AF4, 0x214C,WORD_LEN,0},
{ 0x8AF6, 0xA000,WORD_LEN,0},
{ 0x8AF8, 0x214A,WORD_LEN,0},
{ 0x8AFA, 0x2040,WORD_LEN,0},
{ 0x8AFC, 0x21C2,WORD_LEN,0},
{ 0x8AFE, 0x2442,WORD_LEN,0},
{ 0x8B00, 0x8E21,WORD_LEN,0},
{ 0x8B02, 0x214F,WORD_LEN,0},
{ 0x8B04, 0x0040,WORD_LEN,0},
{ 0x8B06, 0x090F,WORD_LEN,0},
{ 0x8B08, 0x2010,WORD_LEN,0},
{ 0x8B0A, 0x2145,WORD_LEN,0},
{ 0x8B0C, 0x0181,WORD_LEN,0},
{ 0x8B0E, 0xAE21,WORD_LEN,0},
{ 0x8B10, 0xF003,WORD_LEN,0},
{ 0x8B12, 0xB8A2,WORD_LEN,0},
{ 0x8B14, 0xAE01,WORD_LEN,0},
{ 0x8B16, 0x0BFA,WORD_LEN,0},
{ 0x8B18, 0xFFE3,WORD_LEN,0},
{ 0x8B1A, 0x70A9,WORD_LEN,0},
{ 0x8B1C, 0x0789,WORD_LEN,0},
{ 0x8B1E, 0x0684,WORD_LEN,0},
{ 0x8B20, 0xD149,WORD_LEN,0},
{ 0x8B22, 0xD24A,WORD_LEN,0},
{ 0x8B24, 0x11B2,WORD_LEN,0},
{ 0x8B26, 0x8903,WORD_LEN,0},
{ 0x8B28, 0x1252,WORD_LEN,0},
{ 0x8B2A, 0x0100,WORD_LEN,0},
{ 0x8B2C, 0x7B6F,WORD_LEN,0},
{ 0x8B2E, 0xB808,WORD_LEN,0},
{ 0x8B30, 0x2004,WORD_LEN,0},
{ 0x8B32, 0x0F80,WORD_LEN,0},
{ 0x8B34, 0x0000,WORD_LEN,0},
{ 0x8B36, 0xFF00,WORD_LEN,0},
{ 0x8B38, 0x7865,WORD_LEN,0},
{ 0x8B3A, 0x19B2,WORD_LEN,0},
{ 0x8B3C, 0x8024,WORD_LEN,0},
{ 0x8B3E, 0xD044,WORD_LEN,0},
{ 0x8B40, 0x8801,WORD_LEN,0},
{ 0x8B42, 0xB8E1,WORD_LEN,0},
{ 0x8B44, 0xD800,WORD_LEN,0},
{ 0x8B46, 0xF404,WORD_LEN,0},
{ 0x8B48, 0x1234,WORD_LEN,0},
{ 0x8B4A, 0x0080,WORD_LEN,0},
{ 0x8B4C, 0x1955,WORD_LEN,0},
{ 0x8B4E, 0x803C,WORD_LEN,0},
{ 0x8B50, 0x1233,WORD_LEN,0},
{ 0x8B52, 0x0080,WORD_LEN,0},
{ 0x8B54, 0xB802,WORD_LEN,0},
{ 0x8B56, 0x1957,WORD_LEN,0},
{ 0x8B58, 0x803C,WORD_LEN,0},
{ 0x8B5A, 0x1958,WORD_LEN,0},
{ 0x8B5C, 0x803C,WORD_LEN,0},
{ 0x8B5E, 0x1959,WORD_LEN,0},
{ 0x8B60, 0x803C,WORD_LEN,0},
{ 0x8B62, 0x195A,WORD_LEN,0},
{ 0x8B64, 0x803C,WORD_LEN,0},
{ 0x8B66, 0x7EE0,WORD_LEN,0},
{ 0x8B68, 0xC0F1,WORD_LEN,0},
{ 0x8B6A, 0x0EE6,WORD_LEN,0},
{ 0x8B6C, 0x0684,WORD_LEN,0},
{ 0x8B6E, 0xD523,WORD_LEN,0},
{ 0x8B70, 0x8D2C,WORD_LEN,0},
{ 0x8B72, 0x0983,WORD_LEN,0},
{ 0x8B74, 0x0010,WORD_LEN,0},
{ 0x8B76, 0xD236,WORD_LEN,0},
{ 0x8B78, 0x123A,WORD_LEN,0},
{ 0x8B7A, 0x0083,WORD_LEN,0},
{ 0x8B7C, 0x123B,WORD_LEN,0},
{ 0x8B7E, 0x008F,WORD_LEN,0},
{ 0x8B80, 0x8D55,WORD_LEN,0},
{ 0x8B82, 0xBB08,WORD_LEN,0},
{ 0x8B84, 0x7BE5,WORD_LEN,0},
{ 0x8B86, 0x8DF6,WORD_LEN,0},
{ 0x8B88, 0xBA08,WORD_LEN,0},
{ 0x8B8A, 0x7AE5,WORD_LEN,0},
{ 0x8B8C, 0x0B0D,WORD_LEN,0},
{ 0x8B8E, 0x00A3,WORD_LEN,0},
{ 0x8B90, 0x8DC5,WORD_LEN,0},
{ 0x8B92, 0x8D54,WORD_LEN,0},
{ 0x8B94, 0xAD45,WORD_LEN,0},
{ 0x8B96, 0xF026,WORD_LEN,0},
{ 0x8B98, 0x65DB,WORD_LEN,0},
{ 0x8B9A, 0x8B6D,WORD_LEN,0},
{ 0x8B9C, 0x0815,WORD_LEN,0},
{ 0x8B9E, 0x00E2,WORD_LEN,0},
{ 0x8BA0, 0x65DA,WORD_LEN,0},
{ 0x8BA2, 0x8A51,WORD_LEN,0},
{ 0x8BA4, 0x0A0D,WORD_LEN,0},
{ 0x8BA6, 0x0002,WORD_LEN,0},
{ 0x8BA8, 0xE683,WORD_LEN,0},
{ 0x8BAA, 0x22CA,WORD_LEN,0},
{ 0x8BAC, 0x038B,WORD_LEN,0},
{ 0x8BAE, 0xF69A,WORD_LEN,0},
{ 0x8BB0, 0xDA00,WORD_LEN,0},
{ 0x8BB2, 0xAD45,WORD_LEN,0},
{ 0x8BB4, 0x2540,WORD_LEN,0},
{ 0x8BB6, 0x1343,WORD_LEN,0},
{ 0x8BB8, 0xE180,WORD_LEN,0},
{ 0x8BBA, 0x2540,WORD_LEN,0},
{ 0x8BBC, 0x144F,WORD_LEN,0},
{ 0x8BBE, 0xF6D2,WORD_LEN,0},
{ 0x8BC0, 0x719F,WORD_LEN,0},
{ 0x8BC2, 0x78E0,WORD_LEN,0},
{ 0x8BC4, 0x20A8,WORD_LEN,0},
{ 0x8BC6, 0x0280,WORD_LEN,0},
{ 0x8BC8, 0x8B20,WORD_LEN,0},
{ 0x8BCA, 0x0813,WORD_LEN,0},
{ 0x8BCC, 0x0043,WORD_LEN,0},
{ 0x8BCE, 0xE201,WORD_LEN,0},
{ 0x8BD0, 0x7A4F,WORD_LEN,0},
{ 0x8BD2, 0xAD45,WORD_LEN,0},
{ 0x8BD4, 0xE301,WORD_LEN,0},
{ 0x8BD6, 0xE701,WORD_LEN,0},
{ 0x8BD8, 0xF004,WORD_LEN,0},
{ 0x8BDA, 0x8F20,WORD_LEN,0},
{ 0x8BDC, 0x09F3,WORD_LEN,0},
{ 0x8BDE, 0x8002,WORD_LEN,0},
{ 0x8BE0, 0xD01C,WORD_LEN,0},
{ 0x8BE2, 0x8800,WORD_LEN,0},
{ 0x8BE4, 0xE803,WORD_LEN,0},
{ 0x8BE6, 0x0E0F,WORD_LEN,0},
{ 0x8BE8, 0x1080,WORD_LEN,0},
{ 0x8BEA, 0xD008,WORD_LEN,0},
{ 0x8BEC, 0x8000,WORD_LEN,0},
{ 0x8BEE, 0x8002,WORD_LEN,0},
{ 0x8BF0, 0x7840,WORD_LEN,0},
{ 0x8BF2, 0x06C5,WORD_LEN,0},
{ 0x8BF4, 0x0684,WORD_LEN,0},
{ 0x8BF6, 0x78E0,WORD_LEN,0},
{ 0x8BF8, 0xFF80,WORD_LEN,0},
{ 0x8BFA, 0x0644,WORD_LEN,0},
{ 0x8BFC, 0x0000,WORD_LEN,0},
{ 0x8BFE, 0xF978,WORD_LEN,0},
{ 0x8C00, 0xFF80,WORD_LEN,0},
{ 0x8C02, 0x0E00,WORD_LEN,0},
{ 0x8C04, 0xFF80,WORD_LEN,0},
{ 0x8C06, 0x0B68,WORD_LEN,0},
{ 0x8C08, 0x8000,WORD_LEN,0},
{ 0x8C0A, 0x0164,WORD_LEN,0},
{ 0x8C0C, 0x0000,WORD_LEN,0},
{ 0x8C0E, 0xF9AC,WORD_LEN,0},
{ 0x8C10, 0xFF80,WORD_LEN,0},
{ 0x8C12, 0x0B20,WORD_LEN,0},
{ 0x8C14, 0xFF80,WORD_LEN,0},
{ 0x8C16, 0x0314,WORD_LEN,0},
{ 0x8C18, 0x8000,WORD_LEN,0},
{ 0x8C1A, 0x016C,WORD_LEN,0},
{ 0x8C1C, 0xFF80,WORD_LEN,0},
{ 0x8C1E, 0x0694,WORD_LEN,0},
{ 0x8C20, 0x0000,WORD_LEN,0},
{ 0x8C22, 0xF444,WORD_LEN,0},
{ 0x8C24, 0xFF80,WORD_LEN,0},
{ 0x8C26, 0x0C54,WORD_LEN,0},
{ 0x8C28, 0x8000,WORD_LEN,0},
{ 0x8C2A, 0x009C,WORD_LEN,0},
{ 0x8C2C, 0x8000,WORD_LEN,0},
{ 0x8C2E, 0x0008,WORD_LEN,0},
{ 0x8C30, 0xFF80,WORD_LEN,0},
{ 0x8C32, 0x0DF0,WORD_LEN,0},
{ 0x8C34, 0xFF80,WORD_LEN,0},
{ 0x8C36, 0x02CC,WORD_LEN,0},
{ 0x8C38, 0xFF80,WORD_LEN,0},
{ 0x8C3A, 0x0158,WORD_LEN,0},
{ 0x8C3C, 0xFF80,WORD_LEN,0},
{ 0x8C3E, 0x0290,WORD_LEN,0},
{ 0x8C40, 0xFF00,WORD_LEN,0},
{ 0x8C42, 0x0618,WORD_LEN,0},
{ 0x8C44, 0xFF00,WORD_LEN,0},
{ 0x8C46, 0x33CC,WORD_LEN,0},
{ 0x8C48, 0xFF80,WORD_LEN,0},
{ 0x8C4A, 0x0658,WORD_LEN,0},
{ 0x8C4C, 0xFF80,WORD_LEN,0},
{ 0x8C4E, 0x0250,WORD_LEN,0},
{ 0x8C50, 0x8000,WORD_LEN,0},
{ 0x8C52, 0x0168,WORD_LEN,0},
{ 0x8C54, 0xC0F1,WORD_LEN,0},
{ 0x8C56, 0x0DFE,WORD_LEN,0},
{ 0x8C58, 0x0684,WORD_LEN,0},
{ 0x8C5A, 0x17BC,WORD_LEN,0},
{ 0x8C5C, 0xF00E,WORD_LEN,0},
{ 0x8C5E, 0x8E01,WORD_LEN,0},
{ 0x8C60, 0xB8A4,WORD_LEN,0},
{ 0x8C62, 0xAE01,WORD_LEN,0},
{ 0x8C64, 0x8E09,WORD_LEN,0},
{ 0x8C66, 0xB8E0,WORD_LEN,0},
{ 0x8C68, 0xF29B,WORD_LEN,0},
{ 0x8C6A, 0x17E4,WORD_LEN,0},
{ 0x8C6C, 0xF00D,WORD_LEN,0},
{ 0x8C6E, 0x153A,WORD_LEN,0},
{ 0x8C70, 0x1080,WORD_LEN,0},
{ 0x8C72, 0x153B,WORD_LEN,0},
{ 0x8C74, 0x1081,WORD_LEN,0},
{ 0x8C76, 0xB808,WORD_LEN,0},
{ 0x8C78, 0x7825,WORD_LEN,0},
{ 0x8C7A, 0x16B8,WORD_LEN,0},
{ 0x8C7C, 0x1101,WORD_LEN,0},
{ 0x8C7E, 0x092D,WORD_LEN,0},
{ 0x8C80, 0x0003,WORD_LEN,0},
{ 0x8C82, 0x16B0,WORD_LEN,0},
{ 0x8C84, 0x1082,WORD_LEN,0},
{ 0x8C86, 0x1E3C,WORD_LEN,0},
{ 0x8C88, 0x1082,WORD_LEN,0},
{ 0x8C8A, 0x16B1,WORD_LEN,0},
{ 0x8C8C, 0x1082,WORD_LEN,0},
{ 0x8C8E, 0x1E3D,WORD_LEN,0},
{ 0x8C90, 0x1082,WORD_LEN,0},
{ 0x8C92, 0x16B4,WORD_LEN,0},
{ 0x8C94, 0x1082,WORD_LEN,0},
{ 0x8C96, 0x1E3E,WORD_LEN,0},
{ 0x8C98, 0x1082,WORD_LEN,0},
{ 0x8C9A, 0x16B5,WORD_LEN,0},
{ 0x8C9C, 0x1082,WORD_LEN,0},
{ 0x8C9E, 0x1E3F,WORD_LEN,0},
{ 0x8CA0, 0x1082,WORD_LEN,0},
{ 0x8CA2, 0x8E40,WORD_LEN,0},
{ 0x8CA4, 0xBAA6,WORD_LEN,0},
{ 0x8CA6, 0xAE40,WORD_LEN,0},
{ 0x8CA8, 0x098F,WORD_LEN,0},
{ 0x8CAA, 0x0022,WORD_LEN,0},
{ 0x8CAC, 0x16BA,WORD_LEN,0},
{ 0x8CAE, 0x1102,WORD_LEN,0},
{ 0x8CB0, 0x0A87,WORD_LEN,0},
{ 0x8CB2, 0x0003,WORD_LEN,0},
{ 0x8CB4, 0x16B2,WORD_LEN,0},
{ 0x8CB6, 0x1084,WORD_LEN,0},
{ 0x8CB8, 0x0F2E,WORD_LEN,0},
{ 0x8CBA, 0x0664,WORD_LEN,0},
{ 0x8CBC, 0x16B0,WORD_LEN,0},
{ 0x8CBE, 0x1083,WORD_LEN,0},
{ 0x8CC0, 0x1E3C,WORD_LEN,0},
{ 0x8CC2, 0x1002,WORD_LEN,0},
{ 0x8CC4, 0x153A,WORD_LEN,0},
{ 0x8CC6, 0x1080,WORD_LEN,0},
{ 0x8CC8, 0x153B,WORD_LEN,0},
{ 0x8CCA, 0x1081,WORD_LEN,0},
{ 0x8CCC, 0x16B3,WORD_LEN,0},
{ 0x8CCE, 0x1084,WORD_LEN,0},
{ 0x8CD0, 0xB808,WORD_LEN,0},
{ 0x8CD2, 0x7825,WORD_LEN,0},
{ 0x8CD4, 0x16B8,WORD_LEN,0},
{ 0x8CD6, 0x1101,WORD_LEN,0},
{ 0x8CD8, 0x16BA,WORD_LEN,0},
{ 0x8CDA, 0x1102,WORD_LEN,0},
{ 0x8CDC, 0x0F0A,WORD_LEN,0},
{ 0x8CDE, 0x0664,WORD_LEN,0},
{ 0x8CE0, 0x16B1,WORD_LEN,0},
{ 0x8CE2, 0x1083,WORD_LEN,0},
{ 0x8CE4, 0x1E3D,WORD_LEN,0},
{ 0x8CE6, 0x1002,WORD_LEN,0},
{ 0x8CE8, 0x153A,WORD_LEN,0},
{ 0x8CEA, 0x1080,WORD_LEN,0},
{ 0x8CEC, 0x153B,WORD_LEN,0},
{ 0x8CEE, 0x1081,WORD_LEN,0},
{ 0x8CF0, 0x16B6,WORD_LEN,0},
{ 0x8CF2, 0x1084,WORD_LEN,0},
{ 0x8CF4, 0xB808,WORD_LEN,0},
{ 0x8CF6, 0x7825,WORD_LEN,0},
{ 0x8CF8, 0x16B8,WORD_LEN,0},
{ 0x8CFA, 0x1101,WORD_LEN,0},
{ 0x8CFC, 0x16BA,WORD_LEN,0},
{ 0x8CFE, 0x1102,WORD_LEN,0},
{ 0x8D00, 0x0EE6,WORD_LEN,0},
{ 0x8D02, 0x0664,WORD_LEN,0},
{ 0x8D04, 0x16B4,WORD_LEN,0},
{ 0x8D06, 0x1083,WORD_LEN,0},
{ 0x8D08, 0x1E3E,WORD_LEN,0},
{ 0x8D0A, 0x1002,WORD_LEN,0},
{ 0x8D0C, 0x153A,WORD_LEN,0},
{ 0x8D0E, 0x1080,WORD_LEN,0},
{ 0x8D10, 0x153B,WORD_LEN,0},
{ 0x8D12, 0x1081,WORD_LEN,0},
{ 0x8D14, 0x16B7,WORD_LEN,0},
{ 0x8D16, 0x1084,WORD_LEN,0},
{ 0x8D18, 0xB808,WORD_LEN,0},
{ 0x8D1A, 0x7825,WORD_LEN,0},
{ 0x8D1C, 0x16B8,WORD_LEN,0},
{ 0x8D1E, 0x1101,WORD_LEN,0},
{ 0x8D20, 0x16BA,WORD_LEN,0},
{ 0x8D22, 0x1102,WORD_LEN,0},
{ 0x8D24, 0x0EC2,WORD_LEN,0},
{ 0x8D26, 0x0664,WORD_LEN,0},
{ 0x8D28, 0x16B5,WORD_LEN,0},
{ 0x8D2A, 0x1083,WORD_LEN,0},
{ 0x8D2C, 0x1E3F,WORD_LEN,0},
{ 0x8D2E, 0x1002,WORD_LEN,0},
{ 0x8D30, 0x8E00,WORD_LEN,0},
{ 0x8D32, 0xB8A6,WORD_LEN,0},
{ 0x8D34, 0xAE00,WORD_LEN,0},
{ 0x8D36, 0x153A,WORD_LEN,0},
{ 0x8D38, 0x1081,WORD_LEN,0},
{ 0x8D3A, 0x153B,WORD_LEN,0},
{ 0x8D3C, 0x1080,WORD_LEN,0},
{ 0x8D3E, 0xB908,WORD_LEN,0},
{ 0x8D40, 0x7905,WORD_LEN,0},
{ 0x8D42, 0x16BA,WORD_LEN,0},
{ 0x8D44, 0x1100,WORD_LEN,0},
{ 0x8D46, 0x085B,WORD_LEN,0},
{ 0x8D48, 0x0042,WORD_LEN,0},
{ 0x8D4A, 0xD018,WORD_LEN,0},
{ 0x8D4C, 0x9E31,WORD_LEN,0},
{ 0x8D4E, 0x904D,WORD_LEN,0},
{ 0x8D50, 0x0A2B,WORD_LEN,0},
{ 0x8D52, 0x0063,WORD_LEN,0},
{ 0x8D54, 0x8E00,WORD_LEN,0},
{ 0x8D56, 0x16B0,WORD_LEN,0},
{ 0x8D58, 0x1081,WORD_LEN,0},
{ 0x8D5A, 0x1E3C,WORD_LEN,0},
{ 0x8D5C, 0x1042,WORD_LEN,0},
{ 0x8D5E, 0x16B1,WORD_LEN,0},
{ 0x8D60, 0x1081,WORD_LEN,0},
{ 0x8D62, 0x1E3D,WORD_LEN,0},
{ 0x8D64, 0x1042,WORD_LEN,0},
{ 0x8D66, 0x16B4,WORD_LEN,0},
{ 0x8D68, 0x1081,WORD_LEN,0},
{ 0x8D6A, 0x1E3E,WORD_LEN,0},
{ 0x8D6C, 0x1042,WORD_LEN,0},
{ 0x8D6E, 0x16B5,WORD_LEN,0},
{ 0x8D70, 0x1081,WORD_LEN,0},
{ 0x8D72, 0x1E3F,WORD_LEN,0},
{ 0x8D74, 0x1042,WORD_LEN,0},
{ 0x8D76, 0xB886,WORD_LEN,0},
{ 0x8D78, 0xF012,WORD_LEN,0},
{ 0x8D7A, 0x16B2,WORD_LEN,0},
{ 0x8D7C, 0x1081,WORD_LEN,0},
{ 0x8D7E, 0xB8A6,WORD_LEN,0},
{ 0x8D80, 0x1E3C,WORD_LEN,0},
{ 0x8D82, 0x1042,WORD_LEN,0},
{ 0x8D84, 0x16B3,WORD_LEN,0},
{ 0x8D86, 0x1081,WORD_LEN,0},
{ 0x8D88, 0x1E3D,WORD_LEN,0},
{ 0x8D8A, 0x1042,WORD_LEN,0},
{ 0x8D8C, 0x16B6,WORD_LEN,0},
{ 0x8D8E, 0x1081,WORD_LEN,0},
{ 0x8D90, 0x1E3E,WORD_LEN,0},
{ 0x8D92, 0x1042,WORD_LEN,0},
{ 0x8D94, 0x16B7,WORD_LEN,0},
{ 0x8D96, 0x1081,WORD_LEN,0},
{ 0x8D98, 0x1E3F,WORD_LEN,0},
{ 0x8D9A, 0x1042,WORD_LEN,0},
{ 0x8D9C, 0xAE00,WORD_LEN,0},
{ 0x8D9E, 0x0D92,WORD_LEN,0},
{ 0x8DA0, 0x0184,WORD_LEN,0},
{ 0x8DA2, 0x051D,WORD_LEN,0},
{ 0x8DA4, 0x0684,WORD_LEN,0},
{ 0x8DA6, 0x78E0,WORD_LEN,0},
{ 0x8DA8, 0xFF80,WORD_LEN,0},
{ 0x8DAA, 0x050C,WORD_LEN,0},
{ 0x8DAC, 0xE280,WORD_LEN,0},
{ 0x8DAE, 0x24CA,WORD_LEN,0},
{ 0x8DB0, 0x7082,WORD_LEN,0},
{ 0x8DB2, 0x78E0,WORD_LEN,0},
{ 0x8DB4, 0x20E8,WORD_LEN,0},
{ 0x8DB6, 0x01A2,WORD_LEN,0},
{ 0x8DB8, 0x1002,WORD_LEN,0},
{ 0x8DBA, 0x0D02,WORD_LEN,0},
{ 0x8DBC, 0x1902,WORD_LEN,0},
{ 0x8DBE, 0x0094,WORD_LEN,0},
{ 0x8DC0, 0x7FE0,WORD_LEN,0},
{ 0x8DC2, 0x7028,WORD_LEN,0},
{ 0x8DC4, 0x7308,WORD_LEN,0},
{ 0x8DC6, 0x1000,WORD_LEN,0},
{ 0x8DC8, 0x0900,WORD_LEN,0},
{ 0x8DCA, 0x7904,WORD_LEN,0},
{ 0x8DCC, 0x7947,WORD_LEN,0},
{ 0x8DCE, 0x1B00,WORD_LEN,0},
{ 0x8DD0, 0x0064,WORD_LEN,0},
{ 0x8DD2, 0x7EE0,WORD_LEN,0},
{ 0x8DD4, 0xE280,WORD_LEN,0},
{ 0x8DD6, 0x24CA,WORD_LEN,0},
{ 0x8DD8, 0x7082,WORD_LEN,0},
{ 0x8DDA, 0x78E0,WORD_LEN,0},
{ 0x8DDC, 0x20E8,WORD_LEN,0},
{ 0x8DDE, 0x01A2,WORD_LEN,0},
{ 0x8DE0, 0x1102,WORD_LEN,0},
{ 0x8DE2, 0x0502,WORD_LEN,0},
{ 0x8DE4, 0x1802,WORD_LEN,0},
{ 0x8DE6, 0x00B4,WORD_LEN,0},
{ 0x8DE8, 0x7FE0,WORD_LEN,0},
{ 0x8DEA, 0x7028,WORD_LEN,0},
{ 0x8DEC, 0x0000,WORD_LEN,0},
{ 0x8DEE, 0x0000,WORD_LEN,0},
{ 0x8DF0, 0xFF80,WORD_LEN,0},
{ 0x8DF2, 0x0978,WORD_LEN,0},
{ 0x8DF4, 0xFF80,WORD_LEN,0},
{ 0x8DF6, 0x0A4C,WORD_LEN,0},
{ 0x8DF8, 0x0000,WORD_LEN,0},
{ 0x8DFA, 0x08DC,WORD_LEN,0},
{ 0x8DFC, 0x0000,WORD_LEN,0},
{ 0x8DFE, 0x0998,WORD_LEN,0},
{ 0x098E, 0x0016 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS
{ 0x8016, 0x086C 	,WORD_LEN,0}, // MON_ADDRESS_LO
{ 0x8002, 0x0001 	,WORD_LEN,300}, // MON_CMD
 //POLL_{0x800A,0x00,!=0x07,DELAY=10,TIMEOUT=100	,WORD_LEN,0}, //Wait for the core ready

//DELAY=300
//,WORD_LEN,0}, //char_settings
{ 0x30D4, 0x9080 	,WORD_LEN,0}, // COLUMN_CORRECTION
{ 0x316E, 0xC400 	,WORD_LEN,0}, // DAC_ECL
{ 0x305E, 0x10A0 	,WORD_LEN,0}, // GLOBAL_GAIN
{ 0x3E00, 0x0010 	,WORD_LEN,0}, // SAMP_CONTROL
{ 0x3E02, 0xED02 	,WORD_LEN,0}, // SAMP_ADDR_EN
{ 0x3E04, 0xC88C 	,WORD_LEN,0}, // SAMP_RD1_SIG
{ 0x3E06, 0xC88C 	,WORD_LEN,0}, // SAMP_RD1_SIG_BOOST
{ 0x3E08, 0x700A 	,WORD_LEN,0}, // SAMP_RD1_RST
{ 0x3E0A, 0x701E 	,WORD_LEN,0}, // SAMP_RD1_RST_BOOST
{ 0x3E0C, 0x00FF 	,WORD_LEN,0}, // SAMP_RST1_EN
{ 0x3E0E, 0x00FF 	,WORD_LEN,0}, // SAMP_RST1_BOOST
{ 0x3E10, 0x00FF 	,WORD_LEN,0}, // SAMP_RST1_CLOOP_SH
{ 0x3E12, 0x0000 	,WORD_LEN,0}, // SAMP_RST_BOOST_SEQ
{ 0x3E14, 0xC78C 	,WORD_LEN,0}, // SAMP_SAMP1_SIG
{ 0x3E16, 0x6E06 	,WORD_LEN,0}, // SAMP_SAMP1_RST
{ 0x3E18, 0xA58C 	,WORD_LEN,0}, // SAMP_TX_EN
{ 0x3E1A, 0xA58E 	,WORD_LEN,0}, // SAMP_TX_BOOST
{ 0x3E1C, 0xA58E 	,WORD_LEN,0}, // SAMP_TX_CLOOP_SH
{ 0x3E1E, 0xC0D0 	,WORD_LEN,0}, // SAMP_TX_BOOST_SEQ
{ 0x3E20, 0xEB00 	,WORD_LEN,0}, // SAMP_VLN_EN
{ 0x3E22, 0x00FF 	,WORD_LEN,0}, // SAMP_VLN_HOLD
{ 0x3E24, 0xEB02 	,WORD_LEN,0}, // SAMP_VCL_EN
{ 0x3E26, 0xEA02 	,WORD_LEN,0}, // SAMP_COLCLAMP
{ 0x3E28, 0xEB0A 	,WORD_LEN,0}, // SAMP_SH_VCL
{ 0x3E2A, 0xEC01 	,WORD_LEN,0}, // SAMP_SH_VREF
{ 0x3E2C, 0xEB01 	,WORD_LEN,0}, // SAMP_SH_VBST
{ 0x3E2E, 0x00FF 	,WORD_LEN,0}, // SAMP_SPARE
{ 0x3E30, 0x00F3 	,WORD_LEN,0}, // SAMP_READOUT
{ 0x3E32, 0x3DFA 	,WORD_LEN,0}, // SAMP_RESET_DONE
{ 0x3E34, 0x00FF 	,WORD_LEN,0}, // SAMP_VLN_CLAMP
{ 0x3E36, 0x00F3 	,WORD_LEN,0}, // SAMP_ASC_INT
{ 0x3E38, 0x0000 	,WORD_LEN,0}, // SAMP_RS_CLOOP_SH_R
{ 0x3E3A, 0xF802 	,WORD_LEN,0}, // SAMP_RS_CLOOP_SH
{ 0x3E3C, 0x0FFF 	,WORD_LEN,0}, // SAMP_RS_BOOST_SEQ
{ 0x3E3E, 0xEA10 	,WORD_LEN,0}, // SAMP_TXLO_GND
{ 0x3E40, 0xEB05 	,WORD_LEN,0}, // SAMP_VLN_PER_COL
{ 0x3E42, 0xE5C8 	,WORD_LEN,0}, // SAMP_RD2_SIG
{ 0x3E44, 0xE5C8 	,WORD_LEN,0}, // SAMP_RD2_SIG_BOOST
{ 0x3E46, 0x8C70 	,WORD_LEN,0}, // SAMP_RD2_RST
{ 0x3E48, 0x8C71 	,WORD_LEN,0}, // SAMP_RD2_RST_BOOST
{ 0x3E4A, 0x00FF 	,WORD_LEN,0}, // SAMP_RST2_EN
{ 0x3E4C, 0x00FF 	,WORD_LEN,0}, // SAMP_RST2_BOOST
{ 0x3E4E, 0x00FF 	,WORD_LEN,0}, // SAMP_RST2_CLOOP_SH
{ 0x3E50, 0xE38D 	,WORD_LEN,0}, // SAMP_SAMP2_SIG
{ 0x3E52, 0x8B0A 	,WORD_LEN,0}, // SAMP_SAMP2_RST
{ 0x3E58, 0xEB0A 	,WORD_LEN,0}, // SAMP_PIX_CLAMP_EN
{ 0x3E5C, 0x0A00 	,WORD_LEN,0}, // SAMP_PIX_PULLUP_EN
{ 0x3E5E, 0x00FF 	,WORD_LEN,0}, // SAMP_PIX_PULLDOWN_EN_R
{ 0x3E60, 0x00FF 	,WORD_LEN,0}, // SAMP_PIX_PULLDOWN_EN_S
{ 0x3E90, 0x3C01 	,WORD_LEN,0}, // RST_ADDR_EN
{ 0x3E92, 0x00FF 	,WORD_LEN,0}, // RST_RST_EN
{ 0x3E94, 0x00FF 	,WORD_LEN,0}, // RST_RST_BOOST
{ 0x3E96, 0x3C00 	,WORD_LEN,0}, // RST_TX_EN
{ 0x3E98, 0x3C00 	,WORD_LEN,0}, // RST_TX_BOOST
{ 0x3E9A, 0x3C00 	,WORD_LEN,0}, // RST_TX_CLOOP_SH
{ 0x3E9C, 0xC0E0 	,WORD_LEN,0}, // RST_TX_BOOST_SEQ
{ 0x3E9E, 0x00FF 	,WORD_LEN,0}, // RST_RST_CLOOP_SH
{ 0x3EA0, 0x0000 	,WORD_LEN,0}, // RST_RST_BOOST_SEQ
{ 0x3EA6, 0x3C00 	,WORD_LEN,0}, // RST_PIX_PULLUP_EN
{ 0x3ED8, 0x3057 	,WORD_LEN,0}, // DAC_LD_12_13
{ 0x316C, 0xB44F 	,WORD_LEN,0}, // DAC_TXLO
{ 0x316E, 0xC6FF 	,WORD_LEN,0}, // DAC_ECL
{ 0x3ED2, 0xEA0A 	,WORD_LEN,0}, // DAC_LD_6_7
{ 0x3ED4, 0x00A3 	,WORD_LEN,0}, // DAC_LD_8_9
{ 0x3EDC, 0x6020 	,WORD_LEN,0}, // DAC_LD_16_17
{ 0x3EE6, 0xA541 	,WORD_LEN,0}, // DAC_LD_26_27
{ 0x31E0, 0x0001 	,WORD_LEN,0}, // PIX_DEF_ID
{ 0x3ED0, 0x2409 	,WORD_LEN,0}, // DAC_LD_4_5
//,WORD_LEN,0}, //{ 0x3EDA, 0x6000 	,WORD_LEN,0}, // DAC_LD_14_15  ,WORD_LEN,0}, // 
{ 0x3EDE, 0x0A49 	,WORD_LEN,0}, // DAC_LD_18_19
{ 0x3EE0, 0x4910 	,WORD_LEN,0}, // DAC_LD_20_21
{ 0x3EE2, 0x09D2 	,WORD_LEN,0}, // DAC_LD_22_23
{ 0x30B6, 0x0008 	,WORD_LEN,0}, // AUTOLR_CONTROL
{ 0x337C, 0x0006 	,WORD_LEN,0}, // YUV_YCBCR_CONTROL
{ 0x3E1A, 0xA582 	,WORD_LEN,0}, // SAMP_TX_BOOST
{ 0x3E2E, 0xEC05 	,WORD_LEN,0}, // SAMP_SPARE
{ 0x3EE6, 0xA5C0 	,WORD_LEN,0}, // DAC_LD_26_27
{ 0x316C, 0xF43F   ,WORD_LEN,0}, //0xB43F 	,WORD_LEN,0}, // DAC_TXLO
{ 0x316E, 0xC6FF 	,WORD_LEN,0}, // DAC_ECL


//,WORD_LEN,0}, //[Lens Correction 90% 04/29/10 12:58:28]
{ 0x3210, 0x49B0 	,WORD_LEN,0}, // COLOR_PIPELINE_CONTROL
{ 0x3640, 0x0170 	,WORD_LEN,0}, // P_G1_P0Q0
{ 0x3642, 0x5A0D 	,WORD_LEN,0}, // P_G1_P0Q1
{ 0x3644, 0x12D1 	,WORD_LEN,0}, // P_G1_P0Q2
{ 0x3646, 0xB509 	,WORD_LEN,0}, // P_G1_P0Q3
{ 0x3648, 0x9BAE 	,WORD_LEN,0}, // P_G1_P0Q4
{ 0x364A, 0x0230 	,WORD_LEN,0}, // P_R_P0Q0
{ 0x364C, 0xC98D 	,WORD_LEN,0}, // P_R_P0Q1
{ 0x364E, 0x0C71 	,WORD_LEN,0}, // P_R_P0Q2
{ 0x3650, 0x322E 	,WORD_LEN,0}, // P_R_P0Q3
{ 0x3652, 0xB2AF 	,WORD_LEN,0}, // P_R_P0Q4
{ 0x3654, 0x0230 	,WORD_LEN,0}, // P_B_P0Q0
{ 0x3656, 0x4FAD 	,WORD_LEN,0}, // P_B_P0Q1
{ 0x3658, 0x3350 	,WORD_LEN,0}, // P_B_P0Q2
{ 0x365A, 0xCC6D 	,WORD_LEN,0}, // P_B_P0Q3
{ 0x365C, 0xCE4A 	,WORD_LEN,0}, // P_B_P0Q4
{ 0x365E, 0x0290 	,WORD_LEN,0}, // P_G2_P0Q0
{ 0x3660, 0xE10D 	,WORD_LEN,0}, // P_G2_P0Q1
{ 0x3662, 0x1F71 	,WORD_LEN,0}, // P_G2_P0Q2
{ 0x3664, 0x670D 	,WORD_LEN,0}, // P_G2_P0Q3
{ 0x3666, 0x9FEE 	,WORD_LEN,0}, // P_G2_P0Q4
{ 0x3680, 0x6F8B 	,WORD_LEN,0}, // P_G1_P1Q0
{ 0x3682, 0xC06D 	,WORD_LEN,0}, // P_G1_P1Q1
{ 0x3684, 0x974C 	,WORD_LEN,0}, // P_G1_P1Q2
{ 0x3686, 0x66AE 	,WORD_LEN,0}, // P_G1_P1Q3
{ 0x3688, 0x93AE 	,WORD_LEN,0}, // P_G1_P1Q4
{ 0x368A, 0x356D 	,WORD_LEN,0}, // P_R_P1Q0
{ 0x368C, 0x2C8D 	,WORD_LEN,0}, // P_R_P1Q1
{ 0x368E, 0x548D 	,WORD_LEN,0}, // P_R_P1Q2
{ 0x3690, 0xB66C 	,WORD_LEN,0}, // P_R_P1Q3
{ 0x3692, 0xCA2F 	,WORD_LEN,0}, // P_R_P1Q4
{ 0x3694, 0x832D 	,WORD_LEN,0}, // P_B_P1Q0
{ 0x3696, 0x084D 	,WORD_LEN,0}, // P_B_P1Q1
{ 0x3698, 0x5D4E 	,WORD_LEN,0}, // P_B_P1Q2
{ 0x369A, 0xBA8E 	,WORD_LEN,0}, // P_B_P1Q3
{ 0x369C, 0xF6EE 	,WORD_LEN,0}, // P_B_P1Q4
{ 0x369E, 0x9D8A 	,WORD_LEN,0}, // P_G2_P1Q0
{ 0x36A0, 0x88CE 	,WORD_LEN,0}, // P_G2_P1Q1
{ 0x36A2, 0x44CE 	,WORD_LEN,0}, // P_G2_P1Q2
{ 0x36A4, 0x4FCD 	,WORD_LEN,0}, // P_G2_P1Q3
{ 0x36A6, 0xF04E 	,WORD_LEN,0}, // P_G2_P1Q4
{ 0x36C0, 0x2571 	,WORD_LEN,0}, // P_G1_P2Q0
{ 0x36C2, 0x3F4F 	,WORD_LEN,0}, // P_G1_P2Q1
{ 0x36C4, 0x5810 	,WORD_LEN,0}, // P_G1_P2Q2
{ 0x36C6, 0xDEEF 	,WORD_LEN,0}, // P_G1_P2Q3
{ 0x36C8, 0xCD91 	,WORD_LEN,0}, // P_G1_P2Q4
{ 0x36CA, 0x1EF1 	,WORD_LEN,0}, // P_R_P2Q0
{ 0x36CC, 0x832E 	,WORD_LEN,0}, // P_R_P2Q1
{ 0x36CE, 0x2D30 	,WORD_LEN,0}, // P_R_P2Q2
{ 0x36D0, 0x9F0F 	,WORD_LEN,0}, // P_R_P2Q3
{ 0x36D2, 0xBD51 	,WORD_LEN,0}, // P_R_P2Q4
{ 0x36D4, 0x0AB1 	,WORD_LEN,0}, // P_B_P2Q0
{ 0x36D6, 0x16AF 	,WORD_LEN,0}, // P_B_P2Q1
{ 0x36D8, 0x556E 	,WORD_LEN,0}, // P_B_P2Q2
{ 0x36DA, 0xBA8D 	,WORD_LEN,0}, // P_B_P2Q3
{ 0x36DC, 0x6A90 	,WORD_LEN,0}, // P_B_P2Q4
{ 0x36DE, 0x2931 	,WORD_LEN,0}, // P_G2_P2Q0
{ 0x36E0, 0x864D 	,WORD_LEN,0}, // P_G2_P2Q1
{ 0x36E2, 0x75B0 	,WORD_LEN,0}, // P_G2_P2Q2
{ 0x36E4, 0x980F 	,WORD_LEN,0}, // P_G2_P2Q3
{ 0x36E6, 0x8F92 	,WORD_LEN,0}, // P_G2_P2Q4
{ 0x3700, 0x814B 	,WORD_LEN,0}, // P_G1_P3Q0
{ 0x3702, 0x03CD 	,WORD_LEN,0}, // P_G1_P3Q1
{ 0x3704, 0x9F50 	,WORD_LEN,0}, // P_G1_P3Q2
{ 0x3706, 0xD28F 	,WORD_LEN,0}, // P_G1_P3Q3
{ 0x3708, 0x4B90 	,WORD_LEN,0}, // P_G1_P3Q4
{ 0x370A, 0x31AC 	,WORD_LEN,0}, // P_R_P3Q0
{ 0x370C, 0x7FED 	,WORD_LEN,0}, // P_R_P3Q1
{ 0x370E, 0x9371 	,WORD_LEN,0}, // P_R_P3Q2
{ 0x3710, 0xC82F 	,WORD_LEN,0}, // P_R_P3Q3
{ 0x3712, 0x4751 	,WORD_LEN,0}, // P_R_P3Q4
{ 0x3714, 0x9D2F 	,WORD_LEN,0}, // P_B_P3Q0
{ 0x3716, 0xD3AE 	,WORD_LEN,0}, // P_B_P3Q1
{ 0x3718, 0x424D 	,WORD_LEN,0}, // P_B_P3Q2
{ 0x371A, 0x2010 	,WORD_LEN,0}, // P_B_P3Q3
{ 0x371C, 0xF40F 	,WORD_LEN,0}, // P_B_P3Q4
{ 0x371E, 0xB1AE 	,WORD_LEN,0}, // P_G2_P3Q0
{ 0x3720, 0xC8CD 	,WORD_LEN,0}, // P_G2_P3Q1
{ 0x3722, 0xB2CE 	,WORD_LEN,0}, // P_G2_P3Q2
{ 0x3724, 0x4FEF 	,WORD_LEN,0}, // P_G2_P3Q3
{ 0x3726, 0xAF70 	,WORD_LEN,0}, // P_G2_P3Q4
{ 0x3740, 0x812F 	,WORD_LEN,0}, // P_G1_P4Q0
{ 0x3742, 0xA290 	,WORD_LEN,0}, // P_G1_P4Q1
{ 0x3744, 0x0F92 	,WORD_LEN,0}, // P_G1_P4Q2
{ 0x3746, 0x3731 	,WORD_LEN,0}, // P_G1_P4Q3
{ 0x3748, 0xC7F5 	,WORD_LEN,0}, // P_G1_P4Q4
{ 0x374A, 0xBCEF 	,WORD_LEN,0}, // P_R_P4Q0
{ 0x374C, 0x93EC 	,WORD_LEN,0}, // P_R_P4Q1
{ 0x374E, 0x4FD1 	,WORD_LEN,0}, // P_R_P4Q2
{ 0x3750, 0x7751 	,WORD_LEN,0}, // P_R_P4Q3
{ 0x3752, 0x90F5 	,WORD_LEN,0}, // P_R_P4Q4
{ 0x3754, 0xBBB0 	,WORD_LEN,0}, // P_B_P4Q0
{ 0x3756, 0x9AD0 	,WORD_LEN,0}, // P_B_P4Q1
{ 0x3758, 0x20B3 	,WORD_LEN,0}, // P_B_P4Q2
{ 0x375A, 0x5850 	,WORD_LEN,0}, // P_B_P4Q3
{ 0x375C, 0xC795 	,WORD_LEN,0}, // P_B_P4Q4
{ 0x375E, 0xCCCE 	,WORD_LEN,0}, // P_G2_P4Q0
{ 0x3760, 0x8CEF 	,WORD_LEN,0}, // P_G2_P4Q1
{ 0x3762, 0x0BD2 	,WORD_LEN,0}, // P_G2_P4Q2
{ 0x3764, 0x5012 	,WORD_LEN,0}, // P_G2_P4Q3
{ 0x3766, 0xC6B5 	,WORD_LEN,0}, // P_G2_P4Q4
{ 0x3782, 0x03DC 	,WORD_LEN,0}, // CENTER_ROW
{ 0x3784, 0x04B8 	,WORD_LEN,0}, // CENTER_COLUMN
{ 0x3210, 0x49B8 	,WORD_LEN,0}, // COLOR_PIPELINE_CONTROL

//,WORD_LEN,0}, //[APGA Control]
{ 0xD00A, 0x1580 	,WORD_LEN,0}, // PGA_ZONE_ADDR_2
{ 0x0982, 0x0000 	,WORD_LEN,0}, // ACCESS_CTL_STAT
{ 0x098A, 0x1580 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x0170,WORD_LEN,0}, //
{ 0x0992, 0x4F0D,WORD_LEN,0}, //
{ 0x0994, 0x1711,WORD_LEN,0}, //
{ 0x0996, 0x950C,WORD_LEN,0}, //
{ 0x0998, 0xD4AB,WORD_LEN,0}, //
{ 0x099A, 0x0230,WORD_LEN,0}, //
{ 0x099C, 0xB6ED,WORD_LEN,0}, //
{ 0x099E, 0x7AD0,WORD_LEN,0}, //
{ 0x098A, 0x1590 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x152E,WORD_LEN,0}, //
{ 0x0992, 0xCD6F,WORD_LEN,0}, //
{ 0x0994, 0x0190,WORD_LEN,0}, //
{ 0x0996, 0x054D,WORD_LEN,0}, //
{ 0x0998, 0x2970,WORD_LEN,0}, //
{ 0x099A, 0xA6AB,WORD_LEN,0}, //
{ 0x099C, 0x16AD,WORD_LEN,0}, //
{ 0x099E, 0x0250,WORD_LEN,0}, //
{ 0x098A, 0x15A0 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0xA14D,WORD_LEN,0}, //
{ 0x0992, 0x2111,WORD_LEN,0}, //
{ 0x0994, 0xA92D,WORD_LEN,0}, //
{ 0x0996, 0xCAEE,WORD_LEN,0}, //
{ 0x0998, 0x2F8C,WORD_LEN,0}, //
{ 0x099A, 0xFDCD,WORD_LEN,0}, //
{ 0x099C, 0x8FEE,WORD_LEN,0}, //
{ 0x099E, 0x008D,WORD_LEN,0}, //
{ 0x098A, 0x15B0 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x77CB,WORD_LEN,0}, //
{ 0x0992, 0x06AE,WORD_LEN,0}, //
{ 0x0994, 0x20ED,WORD_LEN,0}, //
{ 0x0996, 0x3727,WORD_LEN,0}, //
{ 0x0998, 0xD7CE,WORD_LEN,0}, //
{ 0x099A, 0xBEEE,WORD_LEN,0}, //
{ 0x099C, 0x956C,WORD_LEN,0}, //
{ 0x099E, 0x0CEE,WORD_LEN,0}, //
{ 0x098A, 0x15C0 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x1E0E,WORD_LEN,0}, //
{ 0x0992, 0xDAEE,WORD_LEN,0}, //
{ 0x0994, 0xCFEE,WORD_LEN,0}, //
{ 0x0996, 0x79E8,WORD_LEN,0}, //
{ 0x0998, 0xFC4D,WORD_LEN,0}, //
{ 0x099A, 0x61CD,WORD_LEN,0}, //
{ 0x099C, 0x7D4D,WORD_LEN,0}, //
{ 0x099E, 0x5D07,WORD_LEN,0}, //
{ 0x098A, 0x15D0 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x2691,WORD_LEN,0}, //
{ 0x0992, 0x604E,WORD_LEN,0}, //
{ 0x0994, 0x23F2,WORD_LEN,0}, //
{ 0x0996, 0x84F0,WORD_LEN,0}, //
{ 0x0998, 0x90F3,WORD_LEN,0}, //
{ 0x099A, 0x12D1,WORD_LEN,0}, //
{ 0x099C, 0x87AE,WORD_LEN,0}, //
{ 0x099E, 0x7151,WORD_LEN,0}, //
{ 0x098A, 0x15E0 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x86F0,WORD_LEN,0}, //
{ 0x0992, 0xB8F2,WORD_LEN,0}, //
{ 0x0994, 0x6D90,WORD_LEN,0}, //
{ 0x0996, 0x0F0F,WORD_LEN,0}, //
{ 0x0998, 0x0472,WORD_LEN,0}, //
{ 0x099A, 0xD10F,WORD_LEN,0}, //
{ 0x099C, 0xC112,WORD_LEN,0}, //
{ 0x099E, 0x26F1,WORD_LEN,0}, //
{ 0x098A, 0x15F0 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0xA84F,WORD_LEN,0}, //
{ 0x0992, 0x15D2,WORD_LEN,0}, //
{ 0x0994, 0xA06E,WORD_LEN,0}, //
{ 0x0996, 0x8733,WORD_LEN,0}, //
{ 0x0998, 0x6E8D,WORD_LEN,0}, //
{ 0x099A, 0x8A2C,WORD_LEN,0}, //
{ 0x099C, 0xB9F0,WORD_LEN,0}, //
{ 0x099E, 0x5D0F,WORD_LEN,0}, //
{ 0x098A, 0x1600 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x914D,WORD_LEN,0}, //
{ 0x0992, 0x6F2E,WORD_LEN,0}, //
{ 0x0994, 0xF809,WORD_LEN,0}, //
{ 0x0996, 0xB750,WORD_LEN,0}, //
{ 0x0998, 0x400F,WORD_LEN,0}, //
{ 0x099A, 0xBCCC,WORD_LEN,0}, //
{ 0x099C, 0xE5CE,WORD_LEN,0}, //
{ 0x099E, 0xC98D,WORD_LEN,0}, //
{ 0x098A, 0x1610 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x24CF,WORD_LEN,0}, //
{ 0x0992, 0x0C2F,WORD_LEN,0}, //
{ 0x0994, 0xD130,WORD_LEN,0}, //
{ 0x0996, 0x3A4A,WORD_LEN,0}, //
{ 0x0998, 0x048D,WORD_LEN,0}, //
{ 0x099A, 0x66AE,WORD_LEN,0}, //
{ 0x099C, 0x30EF,WORD_LEN,0}, //
{ 0x099E, 0x9A12,WORD_LEN,0}, //
{ 0x098A, 0x1620 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x366E,WORD_LEN,0}, //
{ 0x0992, 0x9130,WORD_LEN,0}, //
{ 0x0994, 0x9C53,WORD_LEN,0}, //
{ 0x0996, 0x74AF,WORD_LEN,0}, //
{ 0x0998, 0xA374,WORD_LEN,0}, //
{ 0x099A, 0x676D,WORD_LEN,0}, //
{ 0x099C, 0xD5EF,WORD_LEN,0}, //
{ 0x099E, 0xECD2,WORD_LEN,0}, //
{ 0x098A, 0x1630 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x15F2,WORD_LEN,0}, //
{ 0x0992, 0xD973,WORD_LEN,0}, //
{ 0x0994, 0x1BAF,WORD_LEN,0}, //
{ 0x0996, 0x8070,WORD_LEN,0}, //
{ 0x0998, 0xCD92,WORD_LEN,0}, //
{ 0x099A, 0x478F,WORD_LEN,0}, //
{ 0x099C, 0xC8B3,WORD_LEN,0}, //
{ 0x099E, 0x342E,WORD_LEN,0}, //
{ 0x098A, 0x1640 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0xAF8C,WORD_LEN,0}, //
{ 0x0992, 0x8393,WORD_LEN,0}, //
{ 0x0994, 0x7271,WORD_LEN,0}, //
{ 0x0996, 0xAF14,WORD_LEN,0}, //
{ 0x0998, 0x03C8,WORD_LEN,0}, //
{ 0x099A, 0x0544,WORD_LEN,0}, //
{ 0x098E, 0x5006 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS [PGA_ZONE_ADDR_0]
{ 0xD006, 0x164C 	,WORD_LEN,0}, // PGA_ZONE_ADDR_0
{ 0x0982, 0x0000 	,WORD_LEN,0}, // ACCESS_CTL_STAT
{ 0x098A, 0x164C 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x0170,WORD_LEN,0}, //
{ 0x0992, 0x5D0C,WORD_LEN,0}, //
{ 0x0994, 0x1151,WORD_LEN,0}, //
{ 0x0996, 0xF56B,WORD_LEN,0}, //
{ 0x0998, 0xDFEC,WORD_LEN,0}, //
{ 0x099A, 0x0250,WORD_LEN,0}, //
{ 0x099C, 0xFF8D,WORD_LEN,0}, //
{ 0x099E, 0x30B1,WORD_LEN,0}, //
{ 0x098A, 0x165C 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x482D,WORD_LEN,0}, //
{ 0x0992, 0xE62F,WORD_LEN,0}, //
{ 0x0994, 0x0250,WORD_LEN,0}, //
{ 0x0996, 0x0C2C,WORD_LEN,0}, //
{ 0x0998, 0x624F,WORD_LEN,0}, //
{ 0x099A, 0xA36C,WORD_LEN,0}, //
{ 0x099C, 0x18AE,WORD_LEN,0}, //
{ 0x099E, 0x0310,WORD_LEN,0}, //
{ 0x098A, 0x166C 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0xEF4D,WORD_LEN,0}, //
{ 0x0992, 0x2F51,WORD_LEN,0}, //
{ 0x0994, 0xADCD,WORD_LEN,0}, //
{ 0x0996, 0xD1CE,WORD_LEN,0}, //
{ 0x0998, 0x218D,WORD_LEN,0}, //
{ 0x099A, 0xB5ED,WORD_LEN,0}, //
{ 0x099C, 0xFE4D,WORD_LEN,0}, //
{ 0x099E, 0x6ACC,WORD_LEN,0}, //
{ 0x098A, 0x167C 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x94CC,WORD_LEN,0}, //
{ 0x0992, 0x108E,WORD_LEN,0}, //
{ 0x0994, 0x322D,WORD_LEN,0}, //
{ 0x0996, 0x274E,WORD_LEN,0}, //
{ 0x0998, 0x9DAE,WORD_LEN,0}, //
{ 0x099A, 0x92F0,WORD_LEN,0}, //
{ 0x099C, 0xBD0D,WORD_LEN,0}, //
{ 0x099E, 0x406D,WORD_LEN,0}, //
{ 0x098A, 0x168C 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x50AE,WORD_LEN,0}, //
{ 0x0992, 0xBB2E,WORD_LEN,0}, //
{ 0x0994, 0xC2AE,WORD_LEN,0}, //
{ 0x0996, 0xF568,WORD_LEN,0}, //
{ 0x0998, 0xE58D,WORD_LEN,0}, //
{ 0x099A, 0x76CD,WORD_LEN,0}, //
{ 0x099C, 0x488D,WORD_LEN,0}, //
{ 0x099E, 0xCB8D,WORD_LEN,0}, //
{ 0x098A, 0x169C 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x33B1,WORD_LEN,0}, //
{ 0x0992, 0x10AE,WORD_LEN,0}, //
{ 0x0994, 0x11D2,WORD_LEN,0}, //
{ 0x0996, 0x81EF,WORD_LEN,0}, //
{ 0x0998, 0xF9D2,WORD_LEN,0}, //
{ 0x099A, 0x3B91,WORD_LEN,0}, //
{ 0x099C, 0xABEF,WORD_LEN,0}, //
{ 0x099E, 0x4672,WORD_LEN,0}, //
{ 0x098A, 0x16AC 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x41EB,WORD_LEN,0}, //
{ 0x0992, 0xD0F3,WORD_LEN,0}, //
{ 0x0994, 0x4430,WORD_LEN,0}, //
{ 0x0996, 0x704D,WORD_LEN,0}, //
{ 0x0998, 0x7AD1,WORD_LEN,0}, //
{ 0x099A, 0x858D,WORD_LEN,0}, //
{ 0x099C, 0xB552,WORD_LEN,0}, //
{ 0x099E, 0x25F1,WORD_LEN,0}, //
{ 0x098A, 0x16BC 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0xBA4F,WORD_LEN,0}, //
{ 0x0992, 0x1872,WORD_LEN,0}, //
{ 0x0994, 0x1B6E,WORD_LEN,0}, //
{ 0x0996, 0x9633,WORD_LEN,0}, //
{ 0x0998, 0x42CC,WORD_LEN,0}, //
{ 0x099A, 0xD48C,WORD_LEN,0}, //
{ 0x099C, 0xDA70,WORD_LEN,0}, //
{ 0x099E, 0x3AAF,WORD_LEN,0}, //
{ 0x098A, 0x16CC 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x9350,WORD_LEN,0}, //
{ 0x0992, 0x7DCE,WORD_LEN,0}, //
{ 0x0994, 0x2D2D,WORD_LEN,0}, //
{ 0x0996, 0xCA91,WORD_LEN,0}, //
{ 0x0998, 0x0B0E,WORD_LEN,0}, //
{ 0x099A, 0x21AE,WORD_LEN,0}, //
{ 0x099C, 0xBC2E,WORD_LEN,0}, //
{ 0x099E, 0x938E,WORD_LEN,0}, //
{ 0x098A, 0x16DC 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x15CF,WORD_LEN,0}, //
{ 0x0992, 0x78AF,WORD_LEN,0}, //
{ 0x0994, 0xF9F0,WORD_LEN,0}, //
{ 0x0996, 0xBA4A,WORD_LEN,0}, //
{ 0x0998, 0x49AC,WORD_LEN,0}, //
{ 0x099A, 0x1BAB,WORD_LEN,0}, //
{ 0x099C, 0x1A90,WORD_LEN,0}, //
{ 0x099E, 0xB452,WORD_LEN,0}, //
{ 0x098A, 0x16EC 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x388E,WORD_LEN,0}, //
{ 0x0992, 0xD66F,WORD_LEN,0}, //
{ 0x0994, 0x83D3,WORD_LEN,0}, //
{ 0x0996, 0x37B1,WORD_LEN,0}, //
{ 0x0998, 0xD034,WORD_LEN,0}, //
{ 0x099A, 0x05D0,WORD_LEN,0}, //
{ 0x099C, 0xDDAE,WORD_LEN,0}, //
{ 0x099E, 0x8194,WORD_LEN,0}, //
{ 0x098A, 0x16FC 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x2772,WORD_LEN,0}, //
{ 0x0992, 0x88B3,WORD_LEN,0}, //
{ 0x0994, 0x11CF,WORD_LEN,0}, //
{ 0x0996, 0x994F,WORD_LEN,0}, //
{ 0x0998, 0xE532,WORD_LEN,0}, //
{ 0x099A, 0x2AF1,WORD_LEN,0}, //
{ 0x099C, 0x8AF1,WORD_LEN,0}, //
{ 0x099E, 0x732E,WORD_LEN,0}, //
{ 0x098A, 0x170C 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x100B,WORD_LEN,0}, //
{ 0x0992, 0x8413,WORD_LEN,0}, //
{ 0x0994, 0x3D72,WORD_LEN,0}, //
{ 0x0996, 0xC354,WORD_LEN,0}, //
{ 0x0998, 0x03DC,WORD_LEN,0}, //
{ 0x099A, 0x051C,WORD_LEN,0}, //
{ 0x098E, 0x5008 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS [PGA_ZONE_ADDR_1]
{ 0xD008, 0x1718 	,WORD_LEN,0}, // PGA_ZONE_ADDR_1
{ 0x0982, 0x0000 	,WORD_LEN,0}, // ACCESS_CTL_STAT
{ 0x098A, 0x1718 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x00F0,WORD_LEN,0}, //
{ 0x0992, 0x680C,WORD_LEN,0}, //
{ 0x0994, 0x1571,WORD_LEN,0}, //
{ 0x0996, 0xD90A,WORD_LEN,0}, //
{ 0x0998, 0xBB4C,WORD_LEN,0}, //
{ 0x099A, 0x02F0,WORD_LEN,0}, //
{ 0x099C, 0xE4CD,WORD_LEN,0}, //
{ 0x099E, 0x4C30,WORD_LEN,0}, //
{ 0x098A, 0x1728 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x2F6E,WORD_LEN,0}, //
{ 0x0992, 0xE8CE,WORD_LEN,0}, //
{ 0x0994, 0x0250,WORD_LEN,0}, //
{ 0x0996, 0x21AC,WORD_LEN,0}, //
{ 0x0998, 0x626F,WORD_LEN,0}, //
{ 0x099A, 0xD92B,WORD_LEN,0}, //
{ 0x099C, 0x496E,WORD_LEN,0}, //
{ 0x099E, 0x02B0,WORD_LEN,0}, //
{ 0x098A, 0x1738 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0xF94D,WORD_LEN,0}, //
{ 0x0992, 0x2151,WORD_LEN,0}, //
{ 0x0994, 0xF82C,WORD_LEN,0}, //
{ 0x0996, 0xA44E,WORD_LEN,0}, //
{ 0x0998, 0x1F2C,WORD_LEN,0}, //
{ 0x099A, 0xCD8D,WORD_LEN,0}, //
{ 0x099C, 0xC7CE,WORD_LEN,0}, //
{ 0x099E, 0x184C,WORD_LEN,0}, //
{ 0x098A, 0x1748 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x05AD,WORD_LEN,0}, //
{ 0x0992, 0x7DCD,WORD_LEN,0}, //
{ 0x0994, 0x248D,WORD_LEN,0}, //
{ 0x0996, 0x0349,WORD_LEN,0}, //
{ 0x0998, 0xB36E,WORD_LEN,0}, //
{ 0x099A, 0xF5AE,WORD_LEN,0}, //
{ 0x099C, 0xBAED,WORD_LEN,0}, //
{ 0x099E, 0x660D,WORD_LEN,0}, //
{ 0x098A, 0x1758 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x53AE,WORD_LEN,0}, //
{ 0x0992, 0xCB6E,WORD_LEN,0}, //
{ 0x0994, 0xC74E,WORD_LEN,0}, //
{ 0x0996, 0xAF49,WORD_LEN,0}, //
{ 0x0998, 0xE92D,WORD_LEN,0}, //
{ 0x099A, 0x5CEC,WORD_LEN,0}, //
{ 0x099C, 0x620D,WORD_LEN,0}, //
{ 0x099E, 0x648C,WORD_LEN,0}, //
{ 0x098A, 0x1768 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x2811,WORD_LEN,0}, //
{ 0x0992, 0x236E,WORD_LEN,0}, //
{ 0x0994, 0x14B2,WORD_LEN,0}, //
{ 0x0996, 0xA54F,WORD_LEN,0}, //
{ 0x0998, 0xFB32,WORD_LEN,0}, //
{ 0x099A, 0x75B0,WORD_LEN,0}, //
{ 0x099C, 0xAA2E,WORD_LEN,0}, //
{ 0x099E, 0x11B2,WORD_LEN,0}, //
{ 0x098A, 0x1778 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0xBA2F,WORD_LEN,0}, //
{ 0x0992, 0xDDF2,WORD_LEN,0}, //
{ 0x0994, 0x4090,WORD_LEN,0}, //
{ 0x0996, 0x3C4E,WORD_LEN,0}, //
{ 0x0998, 0x1232,WORD_LEN,0}, //
{ 0x099A, 0xB7CE,WORD_LEN,0}, //
{ 0x099C, 0xD172,WORD_LEN,0}, //
{ 0x099E, 0x2671,WORD_LEN,0}, //
{ 0x098A, 0x1788 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0xBA4F,WORD_LEN,0}, //
{ 0x0992, 0x0C72,WORD_LEN,0}, //
{ 0x0994, 0x45CD,WORD_LEN,0}, //
{ 0x0996, 0xFFF2,WORD_LEN,0}, //
{ 0x0998, 0x058D,WORD_LEN,0}, //
{ 0x099A, 0xF1CB,WORD_LEN,0}, //
{ 0x099C, 0x9DB0,WORD_LEN,0}, //
{ 0x099E, 0x4EAF,WORD_LEN,0}, //
{ 0x098A, 0x1798 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0xCD2E,WORD_LEN,0}, //
{ 0x0992, 0x5D2E,WORD_LEN,0}, //
{ 0x0994, 0x01EA,WORD_LEN,0}, //
{ 0x0996, 0xD1F0,WORD_LEN,0}, //
{ 0x0998, 0x130F,WORD_LEN,0}, //
{ 0x099A, 0x1850,WORD_LEN,0}, //
{ 0x099C, 0xBBAE,WORD_LEN,0}, //
{ 0x099E, 0xA2CE,WORD_LEN,0}, //
{ 0x098A, 0x17A8 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x284F,WORD_LEN,0}, //
{ 0x0992, 0x432F,WORD_LEN,0}, //
{ 0x0994, 0xFC90,WORD_LEN,0}, //
{ 0x0996, 0x8AAB,WORD_LEN,0}, //
{ 0x0998, 0x1F2C,WORD_LEN,0}, //
{ 0x099A, 0x436F,WORD_LEN,0}, //
{ 0x099C, 0x67CF,WORD_LEN,0}, //
{ 0x099E, 0xBA32,WORD_LEN,0}, //
{ 0x098A, 0x17B8 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x55EE,WORD_LEN,0}, //
{ 0x0992, 0x8AD0,WORD_LEN,0}, //
{ 0x0994, 0x8B13,WORD_LEN,0}, //
{ 0x0996, 0x6D71,WORD_LEN,0}, //
{ 0x0998, 0xBC74,WORD_LEN,0}, //
{ 0x099A, 0x71CE,WORD_LEN,0}, //
{ 0x099C, 0xB32F,WORD_LEN,0}, //
{ 0x099E, 0x8FB3,WORD_LEN,0}, //
{ 0x098A, 0x17C8 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x21F2,WORD_LEN,0}, //
{ 0x0992, 0xCA92,WORD_LEN,0}, //
{ 0x0994, 0x2A0F,WORD_LEN,0}, //
{ 0x0996, 0xD62F,WORD_LEN,0}, //
{ 0x0998, 0xFB72,WORD_LEN,0}, //
{ 0x099A, 0x4791,WORD_LEN,0}, //
{ 0x099C, 0xC1F1,WORD_LEN,0}, //
{ 0x099E, 0x39EE,WORD_LEN,0}, //
{ 0x098A, 0x17D8 	,WORD_LEN,0}, // PHYSICAL_ADDRESS_ACCESS
{ 0x0990, 0x9CA8,WORD_LEN,0}, //
{ 0x0992, 0xE8F2,WORD_LEN,0}, //
{ 0x0994, 0x3972,WORD_LEN,0}, //
{ 0x0996, 0xC9F4,WORD_LEN,0}, //
{ 0x0998, 0x03C8,WORD_LEN,0}, //
{ 0x099A, 0x051C,WORD_LEN,0}, //
{ 0x098E, 0xD004 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS [PGA_SOLUTION]
{ 0xD004, 0x02 	,BYTE_LEN,0}, // PGA_SOLUTION
{ 0xD00C, 0x03 	,BYTE_LEN,0}, // PGA_NO_OF_ZONES
{ 0xD00D, 0x00 	,BYTE_LEN,0}, // PGA_ZONE_LOW_0
{ 0xD00E, 0x10	,BYTE_LEN,0}, //20	,WORD_LEN,0}, //35 	,WORD_LEN,0}, // PGA_ZONE_LOW_1
{ 0xD00F, 0x65 	,BYTE_LEN,0}, // PGA_ZONE_LOW_2
{ 0xD011, 0x15	,BYTE_LEN,0}, //25	,WORD_LEN,0}, //3A 	,WORD_LEN,0}, // PGA_ZONE_HIGH_0
{ 0xD012, 0x70 	,BYTE_LEN,0}, // PGA_ZONE_HIGH_1
{ 0xD013, 0xFF 	,BYTE_LEN,0}, // PGA_ZONE_HIGH_2
{ 0x098E, 0xD014 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS
{ 0x098E, 0x5015 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS
{ 0xD002, 0x0004 	,WORD_LEN,0}, // PGA_ALGO
{ 0x3210, 0x49B8 	,WORD_LEN,0}, // COLOR_PIPELINE_CONTROL
//,WORD_LEN,0}, //[Step5-AWB_CCM]
//,WORD_LEN,0}, //awb_setup
{ 0xAC02, 0x00FF 	,WORD_LEN,0}, // AWB_ALGO
{ 0xAC01, 0x7F 	,BYTE_LEN,0}, // AWB_MODE
//,WORD_LEN,0}, //preawb_params
{ 0xAC3C, 0x39	,BYTE_LEN,0}, //42 	,WORD_LEN,0}, // AWB_MIN_ACCEPTED_PRE_AWB_R2G_RATIO
{ 0xAC3D, 0x6E	,BYTE_LEN,0}, //50 	,WORD_LEN,0}, // AWB_MAX_ACCEPTED_PRE_AWB_R2G_RATIO
{ 0xAC3E, 0x28	,BYTE_LEN,0}, //13 	,WORD_LEN,0}, // AWB_MIN_ACCEPTED_PRE_AWB_B2G_RATIO
{ 0xAC3F, 0x6B	,BYTE_LEN,0}, //5B 	,WORD_LEN,0}, // AWB_MAX_ACCEPTED_PRE_AWB_B2G_RATIO
{ 0xAC40, 0x64	,BYTE_LEN,0}, //52 	,WORD_LEN,0}, // AWB_MIN_ACCEPTED_POST_AWB_R2G_RATIO
{ 0xAC41, 0x66	,BYTE_LEN,0}, //56 	,WORD_LEN,0}, // AWB_MAX_ACCEPTED_POST_AWB_R2G_RATIO
{ 0xAC42, 0x64 	,BYTE_LEN,0}, // AWB_MIN_ACCEPTED_POST_AWB_B2G_RATIO
{ 0xAC43, 0x66 	,BYTE_LEN,0}, // AWB_MAX_ACCEPTED_POST_AWB_B2G_RATIO
//,WORD_LEN,0}, //awb_patch
{ 0xACB0, 0x31 	,BYTE_LEN,0}, // AWB_RG_MIN
{ 0xACB1, 0x5B	,BYTE_LEN,0}, //50 	,WORD_LEN,0}, // AWB_RG_MAX
{ 0xACB4, 0x2A	,BYTE_LEN,0}, //13 	,WORD_LEN,0}, // AWB_BG_MIN
{ 0xACB5, 0x5B 	,BYTE_LEN,0}, // AWB_BG_MAX
{ 0xACB2, 0x42	 	,BYTE_LEN,0}, // AWB_RG_MIN_BRIGHT
{ 0xACB3, 0x4D   ,BYTE_LEN,0}, // 0x4B	 	,WORD_LEN,0}, // AWB_RG_MAX_BRIGHT
{ 0xACB6, 0x36	 	,BYTE_LEN,0}, // AWB_BG_MIN_BRIGHT
{ 0xACB7, 0x4A   ,BYTE_LEN,0}, //0x42	 	,WORD_LEN,0}, // AWB_BG_MAX_BRIGHT
{ 0xACB8, 0x00D0		,WORD_LEN,0}, // 0x0100 	,WORD_LEN,0}, // AWB_START_NUM_INT_LINES
{ 0xACBA, 0x0090		,WORD_LEN,0}, // B0 	,WORD_LEN,0}, // AWB_END_NUM_INT_LINES
//,WORD_LEN,0}, //bright_DNP_patch
{ 0x098E, 0xAC09 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS
{ 0xAC09, 0x01 	,BYTE_LEN,0}, // AWB_MODE_EX
{ 0xAC22, 0x0000 	,WORD_LEN,0}, // AWB_SHARPNESS_TH
//,WORD_LEN,0}, //soc5140_ccm_settings
{ 0x098E, 0x2C46 	,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS [AWB_LEFT_CCM_0]
{ 0xAC46, 0x010F   ,WORD_LEN,0}, //0x015F 	,WORD_LEN,0}, // AWB_LEFT_CCM_0
{ 0xAC48, 0xFFAE   ,WORD_LEN,0}, //0xFFC2 	,WORD_LEN,0}, // AWB_LEFT_CCM_1
{ 0xAC4A, 0x0043   ,WORD_LEN,0}, //0xFFDF 	,WORD_LEN,0}, // AWB_LEFT_CCM_2
{ 0xAC4C, 0xFF7E   ,WORD_LEN,0}, //0xFF7F 	,WORD_LEN,0}, // AWB_LEFT_CCM_3
{ 0xAC4E, 0x01BD   ,WORD_LEN,0}, //0x01BB 	,WORD_LEN,0}, // AWB_LEFT_CCM_4
{ 0xAC50, 0xFFC5   ,WORD_LEN,0}, //0xFFC6 	,WORD_LEN,0}, // AWB_LEFT_CCM_5
{ 0xAC52, 0xFFBE   ,WORD_LEN,0}, //0xFFC7 	,WORD_LEN,0}, // AWB_LEFT_CCM_6
{ 0xAC54, 0xFF3E   ,WORD_LEN,0}, //0xFEFA 	,WORD_LEN,0}, // AWB_LEFT_CCM_7
{ 0xAC56, 0x0204   ,WORD_LEN,0}, //0x023F 	,WORD_LEN,0}, // AWB_LEFT_CCM_8
{ 0xAC58, 0x00A8 	,WORD_LEN,0}, // AWB_LEFT_CCM_R2BRATIO
{ 0xAC5C, 0x0233 	,WORD_LEN,0}, // AWB_RIGHT_CCM_0
{ 0xAC5E, 0xFF23 	,WORD_LEN,0}, // AWB_RIGHT_CCM_1
{ 0xAC60, 0xFFAA 	,WORD_LEN,0}, // AWB_RIGHT_CCM_2
{ 0xAC62, 0xFF91 	,WORD_LEN,0}, // AWB_RIGHT_CCM_3
{ 0xAC64, 0x01B0 	,WORD_LEN,0}, // AWB_RIGHT_CCM_4
{ 0xAC66, 0xFFBF 	,WORD_LEN,0}, // AWB_RIGHT_CCM_5
{ 0xAC68, 0xFFE7 	,WORD_LEN,0}, // AWB_RIGHT_CCM_6
{ 0xAC6A, 0xFF4C 	,WORD_LEN,0}, // AWB_RIGHT_CCM_7
{ 0xAC6C, 0x01CD 	,WORD_LEN,0}, // AWB_RIGHT_CCM_8
{ 0xAC6E, 0x005A 	,WORD_LEN,0}, // AWB_RIGHT_CCM_R2BRATIO
{ 0xAC72, 0x004D 	,WORD_LEN,0}, // AWB_LL_CCM_0
{ 0xAC74, 0x0096 	,WORD_LEN,0}, // AWB_LL_CCM_1
{ 0xAC76, 0x001D 	,WORD_LEN,0}, // AWB_LL_CCM_2
{ 0xAC78, 0x004D 	,WORD_LEN,0}, // AWB_LL_CCM_3
{ 0xAC7A, 0x0096 	,WORD_LEN,0}, // AWB_LL_CCM_4
{ 0xAC7C, 0x001D 	,WORD_LEN,0}, // AWB_LL_CCM_5
{ 0xAC7E, 0x004D 	,WORD_LEN,0}, // AWB_LL_CCM_6
{ 0xAC80, 0x0096 	,WORD_LEN,0}, // AWB_LL_CCM_7
{ 0xAC82, 0x001D 	,WORD_LEN,0}, // AWB_LL_CCM_8
{ 0xAC97, 0x80 	,BYTE_LEN,0}, // AWB_LEFT_TINT_COEF_FOR_CCM_ROW_0 
{ 0xAC98, 0x80 	,BYTE_LEN,0}, // AWB_LEFT_TINT_COEF_FOR_CCM_ROW_1 
{ 0xAC99, 0x74   ,BYTE_LEN,0}, //0x64 	,WORD_LEN,0}, // AWB_LEFT_TINT_COEF_FOR_CCM_ROW_2 
{ 0xAC9A, 0x7D   ,BYTE_LEN,0}, //0x76 	,WORD_LEN,0}, // AWB_RIGHT_TINT_COEF_FOR_CCM_ROW_0
{ 0xAC9B, 0x80 	,BYTE_LEN,0}, // AWB_RIGHT_TINT_COEF_FOR_CCM_ROW_1
{ 0xAC9C, 0x7D   ,BYTE_LEN,0}, //0x78 	,WORD_LEN,0}, // AWB_RIGHT_TINT_COEF_FOR_CCM_ROW_2

{ 0xB83E, 0x10 	,BYTE_LEN,0}, // STAT_AWB_WINDOW_POS_X
{ 0xB83F, 0x10 	,BYTE_LEN,0}, // STAT_AWB_WINDOW_POS_Y
{ 0xB840, 0xDF 	,BYTE_LEN,0}, // STAT_AWB_WINDOW_SIZE_X
{ 0xB841, 0xCF 	,BYTE_LEN,0}, // STAT_AWB_WINDOW_SIZE_Y

//,WORD_LEN,0}, //soc5140_weighted2D_awb_settings
{ 0xB842, 0x0034   ,WORD_LEN,0}, //0x0032 	,WORD_LEN,0}, // STAT_AWB_GRAY_CHECKER_OFFSET_X
{ 0xB844, 0x003C   ,WORD_LEN,0}, //0x0038 	,WORD_LEN,0}, // STAT_AWB_GRAY_CHECKER_OFFSET_Y
{ 0x3240, 0x0024 	,WORD_LEN,0}, // AWB_XY_SCALE
{ 0x3242, 0x0000 	,WORD_LEN,0}, // AWB_WEIGHT_R0
{ 0x3244, 0x0000 	,WORD_LEN,0}, // AWB_WEIGHT_R1
{ 0x3246, 0x0000 	,WORD_LEN,0}, // AWB_WEIGHT_R2
{ 0x3248, 0x7070 	,WORD_LEN,0}, // AWB_WEIGHT_R3
{ 0x324A, 0x38E0 	,WORD_LEN,0}, // AWB_WEIGHT_R4
{ 0x324C, 0x70E0 	,WORD_LEN,0}, // AWB_WEIGHT_R5
{ 0x324E, 0x01B8 	,WORD_LEN,0}, // AWB_WEIGHT_R6
{ 0x3250, 0x00AB 	,WORD_LEN,0}, // AWB_WEIGHT_R7
{ 0xD80F, 0x04 	,BYTE_LEN,0}, // JPEG_QSCALE_0
{ 0xD810, 0x08 	,BYTE_LEN,0}, // JPEG_QSCALE_1
{ 0xC8D2, 0x04 	,BYTE_LEN,0}, // CAM_OUTPUT_1_JPEG_QSCALE_0
{ 0xC8D3, 0x08 	,BYTE_LEN,0}, // CAM_OUTPUT_1_JPEG_QSCALE_1
{ 0xC8BC, 0x04 	,BYTE_LEN,0}, // CAM_OUTPUT_0_JPEG_QSCALE_0
{ 0xC8BD, 0x08 	,BYTE_LEN,0}, // CAM_OUTPUT_0_JPEG_QSCALE_1
//,WORD_LEN,0}, //sys_settings
{ 0x301A, 0x10F4 	,WORD_LEN,0}, // RESET_REGISTER
{ 0x301E, 0x0083 	,WORD_LEN,0}, // DATA_PEDESTAL
{ 0x301A, 0x10FC 	,WORD_LEN,0}, // RESET_REGISTER
{ 0xDC33, 0x20 	,BYTE_LEN,0}, // SYS_FIRST_BLACK_LEVEL
{ 0xDC35, 0x04 	,BYTE_LEN,0}, // SYS_UV_COLOR_BOOST
{ 0x326E, 0x0006 	,WORD_LEN,0}, // LOW_PASS_YUV_FILTER
{ 0xDC37, 0x62 	,BYTE_LEN,0}, // SYS_BRIGHT_COLORKILL
{ 0x35A4, 0x0596 	,WORD_LEN,0}, // BRIGHT_COLOR_KILL_CONTROLS
{ 0x35A2, 0x009C 	,WORD_LEN,0}, // DARK_COLOR_KILL_CONTROLS
{ 0x098E, 0x5C02		,WORD_LEN,0}, // MCU_ADDR
{ 0xDC02, 0x003E 	,WORD_LEN,0}, // SYS_ALGO
{ 0xDC36, 0x34 	,BYTE_LEN,0}, // SYS_DARK_COLOR_KILL
//	,WORD_LEN,0}, // Refresh Mode - skip
{ 0xBC18, 0x00 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_0
{ 0xBC19, 0x11 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_1
{ 0xBC1A, 0x23 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_2
{ 0xBC1B, 0x3F 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_3
{ 0xBC1C, 0x67 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_4
{ 0xBC1D, 0x85 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_5
{ 0xBC1E, 0x9B 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_6
{ 0xBC1F, 0xAD 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_7
{ 0xBC20, 0xBB 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_8
{ 0xBC21, 0xC7 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_9
{ 0xBC22, 0xD1 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_10
{ 0xBC23, 0xDA 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_11
{ 0xBC24, 0xE1 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_12
{ 0xBC25, 0xE8 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_13
{ 0xBC26, 0xEE 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_14
{ 0xBC27, 0xF3 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_15
{ 0xBC28, 0xF7 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_16
{ 0xBC29, 0xFB 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_17
{ 0xBC2A, 0xFF 	,BYTE_LEN,0}, // LL_GAMMA_CONTRAST_CURVE_18
{ 0xBC2B, 0x00  	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_0
{ 0xBC2C, 0x0C  	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_1
{ 0xBC2D, 0x1F 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_2
{ 0xBC2E, 0x36 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_3
{ 0xBC2F, 0x56 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_4
{ 0xBC30, 0x70 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_5
{ 0xBC31, 0x88 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_6
{ 0xBC32, 0x9B 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_7
{ 0xBC33, 0xAB 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_8
{ 0xBC34, 0xB9 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_9
{ 0xBC35, 0xC4 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_10
{ 0xBC36, 0xCE 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_11
{ 0xBC37, 0xD7 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_12
{ 0xBC38, 0xE0 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_13
{ 0xBC39, 0xE7 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_14
{ 0xBC3A, 0xEE 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_15
{ 0xBC3B, 0xF4 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_16
{ 0xBC3C, 0xFA 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_17
{ 0xBC3D, 0xFF 	,BYTE_LEN,0}, // LL_GAMMA_NEUTRAL_CURVE_18
{ 0xBC3E, 0x00 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_0
{ 0xBC3F, 0x18 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_1
{ 0xBC40, 0x25 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_2
{ 0xBC41, 0x3A 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_3
{ 0xBC42, 0x59 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_4
{ 0xBC43, 0x70 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_5
{ 0xBC44, 0x81 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_6
{ 0xBC45, 0x90 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_7
{ 0xBC46, 0x9E 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_8
{ 0xBC47, 0xAB 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_9
{ 0xBC48, 0xB6 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_10
{ 0xBC49, 0xC1 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_11
{ 0xBC4A, 0xCB 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_12
{ 0xBC4B, 0xD5 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_13
{ 0xBC4C, 0xDE 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_14
{ 0xBC4D, 0xE7 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_15
{ 0xBC4E, 0xEF 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_16
{ 0xBC4F, 0xF7 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_17
{ 0xBC50, 0xFF 	,BYTE_LEN,0}, // LL_GAMMA_NR_CURVE_18
{ 0xBC51, 0x04 	,BYTE_LEN,0}, // LL_GAMMA_CURVE_SELECTOR
//BM_dampening
{ 0xB801, 0xE0 	,BYTE_LEN,0}, // STAT_MODE
{ 0xB862, 0x04 	,BYTE_LEN,0}, // STAT_BMTRACKING_SPEED
 //AE
{ 0xB829, 0x02 	,BYTE_LEN,0}, // STAT_LL_BRIGHTNESS_METRIC_DIVISOR
{ 0xB863, 0x02 	,BYTE_LEN,0}, // STAT_BM_MUL
{ 0xB827, 0x0F 	,BYTE_LEN,0}, // STAT_AE_EV_SHIFT
{ 0xA409, 0x4A 	,BYTE_LEN,0}, // AE_RULE_BASE_TARGET
{ 0xA805, 0x06 	,BYTE_LEN,0}, // AE_TRACK_GATE
{ 0xA80D, 0x08,BYTE_LEN,0},
{ 0xA816, 0x0002 	,WORD_LEN,0}, // AE_TRACK_MIN_INT_TIME_ROWS
{ 0xA401, 0x00 	,BYTE_LEN,0}, // AE_RULE_MODE
{ 0xA80E, 0x06 	,BYTE_LEN,0}, // AE_TRACK_MAX_BLACK_LEVEL
 //BM_GM_start_stop
{ 0xC8E6, 0x014C 	,WORD_LEN,0}, // RESERVED_CAM_E6
{ 0xC8E8, 0x0040 	,WORD_LEN,0}, // RESERVED_CAM_E8
{ 0xBC52, 0x00C8 	,WORD_LEN,0}, // LL_START_BRIGHTNESS_METRIC
{ 0xBC54, 0x0A28 	,WORD_LEN,0}, // LL_END_BRIGHTNESS_METRIC
{ 0xBC58, 0x0100 	,WORD_LEN,0}, // LL_START_GAIN_METRIC
{ 0xBC5A, 0x0480 	,WORD_LEN,0}, // LL_END_GAIN_METRIC
{ 0xBC5E, 0x0227 	,WORD_LEN,0}, // LL_START_APERTURE_GAIN_BM
{ 0xBC60, 0x0540 	,WORD_LEN,0}, // LL_END_APERTURE_GAIN_BM
{ 0xBC66, 0x0154 	,WORD_LEN,0}, // LL_START_APERTURE_GM
{ 0xBC68, 0x07D0 	,WORD_LEN,0}, // LL_END_APERTURE_GM
{ 0xBC86, 0x00C8 	,WORD_LEN,0}, // LL_START_FFNR_GM
{ 0xBC88, 0x0420 	,WORD_LEN,0}, // LL_END_FFNR_GM
{ 0xBCBC, 0x0040 	,WORD_LEN,0}, // LL_SFFB_START_GAIN
{ 0xBCBE, 0x01FC 	,WORD_LEN,0}, // LL_SFFB_END_GAIN
{ 0xBCCC, 0x00C8 	,WORD_LEN,0}, // LL_SFFB_START_MAX_GM
{ 0xBCCE, 0x0640 	,WORD_LEN,0}, // LL_SFFB_END_MAX_GM
{ 0xBC90, 0x00C8 	,WORD_LEN,0}, // LL_START_GRB_GM
{ 0xBC92, 0x0640 	,WORD_LEN,0}, // LL_END_GRB_GM
{ 0xBC0E, 0x0032 	,WORD_LEN,0}, // LL_GAMMA_CURVE_ADJ_START_POS
{ 0xBC10, 0x0064 	,WORD_LEN,0}, // LL_GAMMA_CURVE_ADJ_MID_POS
{ 0xBC12, 0x0FA0 	,WORD_LEN,0}, // LL_GAMMA_CURVE_ADJ_END_POS
{ 0xBCAA, 0x03E8 	,WORD_LEN,0}, // LL_CDC_THR_ADJ_START_POS
{ 0xBCAC, 0x012C 	,WORD_LEN,0}, // LL_CDC_THR_ADJ_MID_POS
{ 0xBCAE, 0x0009 	,WORD_LEN,0}, // LL_CDC_THR_ADJ_END_POS
{ 0xBCD8, 0x00C8 	,WORD_LEN,0}, // LL_PCR_START_BM
{ 0xBCDA, 0x0A28 	,WORD_LEN,0}, // LL_PCR_END_BM

 //[Kernel]
{ 0x3380, 0x0504 	,WORD_LEN,0}, // KERNEL_CONFIG
{ 0x3380, 0x0505 	,WORD_LEN,0}, // KERNEL_CONFIG
{ 0x3380, 0x0584 	,WORD_LEN,0}, // KERNEL_CONFIG
{ 0x3380, 0x0586 	,WORD_LEN,0}, // KERNEL_CONFIG
{ 0x3380, 0x0587 	,WORD_LEN,0}, // KERNEL_CONFIG

 //GRB
{ 0xBC94, 0x06 	,BYTE_LEN,0}, // LL_GB_START_THRESHOLD_0
{ 0xBC95, 0x05 	,BYTE_LEN,0}, // LL_GB_START_THRESHOLD_1
{ 0xBC9C, 0x09 	,BYTE_LEN,0}, // RESERVED_LL_9C
{ 0xBC9D, 0x05 	,BYTE_LEN,0}, // RESERVED_LL_9D

 //demosaic
{ 0x33B0, 0x2A16 	,WORD_LEN,0}, // FFNR_ALPHA_BETA
{ 0xBC8A, 0x04 	,BYTE_LEN,0}, // LL_START_FF_MIX_THRESH_Y
{ 0xBC8B, 0x38 	,BYTE_LEN,0}, // LL_END_FF_MIX_THRESH_Y
{ 0xBC8C, 0x18 	,BYTE_LEN,0}, // LL_START_FF_MIX_THRESH_YGAIN
{ 0xBC8D, 0x4F 	,BYTE_LEN,0}, // LL_END_FF_MIX_THRESH_YGAIN
{ 0xBC8E, 0x7C 	,BYTE_LEN,0}, // LL_START_FF_MIX_THRESH_GAIN
{ 0xBC8F, 0x06 	,BYTE_LEN,0}, // LL_END_FF_MIX_THRESH_GAIN
{ 0xBCB2, 0x20 	,BYTE_LEN,0}, // LL_CDC_DARK_CLUS_SLOPE
{ 0xBCB3, 0x3A 	,BYTE_LEN,0}, // LL_CDC_DARK_CLUS_SATUR
{ 0xBCB4, 0x39 	,BYTE_LEN,0}, // RESERVED_LL_B4
{ 0xBCB7, 0x39 	,BYTE_LEN,0}, // RESERVED_LL_B7
{ 0xBCB5, 0x20 	,BYTE_LEN,0}, // RESERVED_LL_B5
{ 0xBCB8, 0x3A 	,BYTE_LEN,0}, // RESERVED_LL_B8
{ 0xBCB6, 0x80 	,BYTE_LEN,0}, // RESERVED_LL_B6
{ 0xBCB9, 0x24 	,BYTE_LEN,0}, // RESERVED_LL_B9

 //SFFB_rev3_noisemodel
{ 0xBCC0, 0x1F 	,BYTE_LEN,0}, // LL_SFFB_RAMP_START
{ 0xBCC1, 0x03 	,BYTE_LEN,0}, // LL_SFFB_RAMP_STOP
{ 0xBCC2, 0x1E 	,BYTE_LEN,0}, // LL_SFFB_SLOPE_START
{ 0xBCC3, 0x10 	,BYTE_LEN,0}, // LL_SFFB_SLOPE_STOP
{ 0xBCC4, 0x07 	,BYTE_LEN,0}, // LL_SFFB_THSTART
{ 0xBCC5, 0x0B 	,BYTE_LEN,0}, // LL_SFFB_THSTOP
{ 0xBCBA, 0x0009 	,WORD_LEN,0}, // LL_SFFB_CONFIG

 //[Step7-CPIPE_Preference]
//ftb_off
{ 0xBC14, 0xFFFE 	,WORD_LEN,0}, // LL_GAMMA_FADE_TO_BLACK_START_POS
{ 0xBC16, 0xFFFF 	,WORD_LEN,0}, // LL_GAMMA_FADE_TO_BLACK_END_POS

 //aperture_preference
{ 0xBC6A, 0x06 	,BYTE_LEN,0}, // LL_START_APERTURE_INTEGER_GAIN
{ 0xBC6B, 0x00 	,BYTE_LEN,0}, // LL_END_APERTURE_INTEGER_GAIN
{ 0xBC6C, 0x00 	,BYTE_LEN,0}, // LL_START_APERTURE_EXP_GAIN
{ 0xBC6D, 0x00 	,BYTE_LEN,0}, // LL_END_APERTURE_EXP_GAIN
{ 0xBCE2, 0x0A 	,BYTE_LEN,0}, // LL_START_POS_KNEE
{ 0xBCE3, 0x2B 	,BYTE_LEN,0}, // LL_END_POS_KNEE
{ 0xBCE4, 0x0A 	,BYTE_LEN,0}, // LL_START_NEG_KNEE
{ 0xBCE5, 0x2B 	,BYTE_LEN,0}, // LL_END_NEG_KNEE
{ 0x33BA, 0x0084 	,WORD_LEN,0}, // APEDGE_CONTROL
{ 0x33BE, 0x0000 	,WORD_LEN,0}, // UA_KNEE_L
{ 0x33C2, 0x5600 	,WORD_LEN,0}, // UA_WEIGHTS
{ 0xBC62, 0x10 	,BYTE_LEN,0}, // LL_START_APERTURE_KPGAIN
{ 0xBC63, 0x1F 	,BYTE_LEN,0}, // LL_END_APERTURE_KPGAIN
{ 0xBC64, 0x10 	,BYTE_LEN,0}, // LL_START_APERTURE_KNGAIN
{ 0xBC65, 0x1F 	,BYTE_LEN,0}, // LL_END_APERTURE_KNGAIN
{ 0xA81C, 0x0043 	,WORD_LEN,0}, // AE_TRACK_MIN_AGAIN
{ 0xA81E, 0x0102 	,WORD_LEN,0}, // AE_TRACK_TARGET_AGAIN
{ 0xA820, 0x0102 	,WORD_LEN,0}, // AE_TRACK_MAX_AGAIN
{ 0xA822, 0x0080 	,WORD_LEN,0}, // AE_TRACK_MIN_DGAIN
{ 0xA824, 0x0080 	,WORD_LEN,0}, // AE_TRACK_MAX_DGAIN

//min_fps
{ 0xA818, 0x07D0 	,WORD_LEN,0}, // AE_TRACK_TARGET_INT_TIME_ROWS
{ 0xA81A, 0x0B38 ,WORD_LEN,0}, //0x0810(10.9Fps)   ,WORD_LEN,0}, //0x0FF4(5Fps) 	,WORD_LEN,0}, // AE_TRACK_MAX_INT_TIME_ROWS

 //ccm_saturation
{ 0xBC56, 0x80		,BYTE_LEN,0}, //0xA8 	,WORD_LEN,0}, // LL_START_CCM_SATURATION
{ 0xBC57, 0x10 	,BYTE_LEN,0}, // LL_END_CCM_SATURATION

 //DCCM
{ 0xBCDE, 0x03 	,BYTE_LEN,0}, // LL_START_SYS_THRESHOLD
{ 0xBCDF, 0x50 	,BYTE_LEN,0}, // LL_STOP_SYS_THRESHOLD
{ 0xBCE0, 0x08 	,BYTE_LEN,0}, // LL_START_SYS_GAIN
{ 0xBCE1, 0x03 	,BYTE_LEN,0}, // LL_STOP_SYS_GAIN

 //sobel
{ 0xBCD0, 0x000A 	,WORD_LEN,0}, // LL_SFFB_SOBEL_FLAT_START
{ 0xBCD2, 0x00FE 	,WORD_LEN,0}, // LL_SFFB_SOBEL_FLAT_STOP
{ 0xBCD4, 0x001E 	,WORD_LEN,0}, // LL_SFFB_SOBEL_SHARP_START
{ 0xBCD6, 0x00FF 	,WORD_LEN,0}, // LL_SFFB_SOBEL_SHARP_STOP
{ 0xBCC6, 0x00 	,BYTE_LEN,0}, // LL_SFFB_SHARPENING_START
{ 0xBCC7, 0x00 	,BYTE_LEN,0}, // LL_SFFB_SHARPENING_STOP
{ 0xBCC8, 0x20 	,BYTE_LEN,0}, // LL_SFFB_FLATNESS_START
{ 0xBCC9, 0x40 	,BYTE_LEN,0}, // LL_SFFB_FLATNESS_STOP
{ 0xBCCA, 0x04 	,BYTE_LEN,0}, // LL_SFFB_TRANSITION_START
{ 0xBCCB, 0x00 	,BYTE_LEN,0}, // LL_SFFB_TRANSITION_STOP

 //SFFB_slope_zero_enable
{ 0xBCE6, 0x03 	,BYTE_LEN,0}, // LL_SFFB_ZERO_ENABLE

 //manual_FD(auto)
{ 0x8417, 0x02 	,BYTE_LEN,0}, // SEQ_STATE_CFG_1_FD
 //tx_setting
{ 0xC8ED, 0x00   ,BYTE_LEN,0}, //0x02 	,WORD_LEN,0}, // CAM_TX_ENABLE_MODE Context A,B time
 //cdc_off

{ 0x8404, 0x06 	,WORD_LEN,300}, // SEQ_CMD
//DELAY=300

 //[Step8-Features]
 //AF_VCM_enable
{ 0xC400, 0x88 	,BYTE_LEN,0}, // AFM_ALGO
{ 0x8419, 0x05 	,BYTE_LEN,0}, // SEQ_STATE_CFG_1_AF
{ 0xC400, 0x08 	,BYTE_LEN,0}, // AFM_ALGO
 //AF_settings
{ 0xB002, 0x0365 	,WORD_LEN,0}, // AF_MODE
{ 0xB004, 0x0002 	,WORD_LEN,0}, // AF_ALGO
{ 0xB045, 0x0015 	,WORD_LEN,0}, // AF_MODE_EX
{ 0xB008, 0x0000002A 	,LONG_LEN,0}, // AF_ZONE_WEIGHTS_HI
{ 0xB00C, 0x0B82A000 	,LONG_LEN,0}, // AF_ZONE_WEIGHTS_LO
//,WORD_LEN,0}, //set_posMin/Max
{ 0x098E, 0xC40C     ,WORD_LEN,0}, // LOGICAL_ADDRESS_ACCESS
{ 0xC40A, 0x0010 	,WORD_LEN,0}, // AFM_POS_MIN
{ 0xC40C, 0x00E8 	,WORD_LEN,0}, // AFM_POS_MAX
{ 0xC407, 0x10   ,BYTE_LEN,0}, // AFM_DEFAULT_POS
{ 0xC408, 0xA0   ,BYTE_LEN,0}, // AFM_MACRO_POS	
 //AF_postition_settings
{ 0xB018, 0x00 	,BYTE_LEN,0}, // AF_FS_POS_0
{ 0xB019, 0x18 	,BYTE_LEN,0}, // AF_FS_POS_1
{ 0xB01A, 0x30 	,BYTE_LEN,0}, // AF_FS_POS_2
{ 0xB01B, 0x48 	,BYTE_LEN,0}, // AF_FS_POS_3
{ 0xB01C, 0x60 	,BYTE_LEN,0}, // AF_FS_POS_4
{ 0xB01D, 0x80 	,BYTE_LEN,0}, // AF_FS_POS_5
{ 0xB01E, 0xA0 	,BYTE_LEN,0}, // AF_FS_POS_6
{ 0xB01F, 0xC0 	,BYTE_LEN,0}, // AF_FS_POS_7
{ 0xB020, 0xE0 	,BYTE_LEN,0}, // AF_FS_POS_8
{ 0xB012, 0x09 	,BYTE_LEN,0}, // AF_FS_NUM_STEPS
 //2nd_scan_option
{ 0xB013, 0x44 	,BYTE_LEN,0}, // AF_FS_NUM_STEPS2
{ 0xB014, 0x06 	,BYTE_LEN,0}, // AF_FS_STEP_SIZE
{ 0x8404, 0x05 	,BYTE_LEN,300}, // SEQ_CMD
//DELAY=300
 //{ 0x3EDA, 0x6060 	,WORD_LEN,0}, // DAC_LD_14_15
//{ 0x0018, 0x2008 	,WORD_LEN,100}, // STANDBY_CONTROL_AND_STATUS //crazyboys 2014 0618
//DELAY=100 
//{ 0x3EDA, 0x6060 	,WORD_LEN,0}, // DAC_LD_14_15 //crazyboys 2014 0618
};
#endif
struct mt9p111_i2c_reg_conf CAPTURE_SIZE_2592_1944[] = {
	//{0xC8AA,0x0A20,WORD_LEN,0},// CAM_OUTPUT_0_IMAGE_WIDTH
	//{0xC8AC,	0x0798,WORD_LEN,0},	// CAM_OUTPUT_0_IMAGE_HEIGHT
	//{0x8404, 0x05, BYTE_LEN,100},
	//{0xC8A4, 0x0A20, WORD_LEN, 0}, 	// CAM_CORE_B_OUTPUT_SIZE_WIDTH
	//{0xC8A6, 0x0798, WORD_LEN, 0}, 	// CAM_CORE_B_OUTPUT_SIZE_HEIGHT  
	//{0x8404, 0x05, BYTE_LEN,100},  // SEQ_CMD
};


struct mt9p111_i2c_reg_conf reg_preview_off[] = {
    {0x3EDA, 0x6060, WORD_LEN, 0}, 	// DAC_LD_14_15
    {0x098E, 0x843C , WORD_LEN, 0}, 	// LOGICAL_ADDRESS_ACCESS
    {0x843c, 0xFF,BYTE_LEN,0},  // LOGICAL_ADDRESS_ACCESS [SEQ_STATE_CFG_5_MAX_FRAME_CNT] 
    {0x8404, 0x02,BYTE_LEN,0},  // SEQ_CMD
    {0x3170, 0x205C,WORD_LEN, 0},   // CLOCKS_CONTROL
    {0x8404, 0x05, BYTE_LEN,100},  // SEQ_CMD
    //{0x8404, 0x06, BYTE_LEN,100},  // SEQ_CMD
};

struct mt9p111_i2c_reg_conf reg_preview_on[] = {
	//{0xC8AA,0x0280,WORD_LEN,0},// CAM_OUTPUT_0_IMAGE_WIDTH
	//{0xC8AC,	0x01e0,WORD_LEN,0},	// CAM_OUTPUT_0_IMAGE_HEIGHT
	//{0x8404, 0x05, BYTE_LEN,100},	
    {0x3EDA, 0x6060, WORD_LEN, 0}, 	// DAC_LD_14_15
    {0x098E, 0x843C , WORD_LEN, 0}, 	// LOGICAL_ADDRESS_ACCESS
    {0x843c, 0x01,BYTE_LEN,0},  // LOGICAL_ADDRESS_ACCESS [SEQ_STATE_CFG_5_MAX_FRAME_CNT] 
    {0x8404, 0x01,BYTE_LEN,0},  // SEQ_CMD
    {0x3170, 0x2096,WORD_LEN, 0},   // CLOCKS_CONTROL
    {0x8404, 0x05, BYTE_LEN,100},  // SEQ_CMD
    //{0x8404, 0x06, BYTE_LEN,100},  // SEQ_CMD
};
#define reg_preview_on_size	\
	(sizeof(reg_preview_on) / sizeof(reg_preview_on[0]))
struct mt9p111_i2c_reg_conf mirror_vertical_preview[]={
	{0xC850, 0x03, BYTE_LEN, 0},
	{0xC851, 0x03, BYTE_LEN,0},
	{0xC888, 0x03, BYTE_LEN,0},
	{0xC889, 0x03, BYTE_LEN, 100},		
	{0x8404, 0x06, BYTE_LEN, 100},//200}, //150},  // SEQ_CMD reflash mode //1000	
};
#define mirror_vertical_preview_size	\
	(sizeof(mirror_vertical_preview) / sizeof(mirror_vertical_preview[0]))
struct mt9p111_i2c_reg_conf auto_af_pwm_continue[]={
{0x8419, 0x03,BYTE_LEN,0},    // SEQ_STATE_CFG_1_AF          
{0xC400, 0x88     ,BYTE_LEN,0},// AFM_ALGO                    
{0xB002, 0x0002     ,WORD_LEN,0},// AF_MODE                     
{0xB004, 0x0010     ,WORD_LEN,0},// AF_ALGO                     
{0xB045, 0x0015     ,WORD_LEN,0},// AF_MODE_EX                  
{0xB02C, 0x20     ,BYTE_LEN,0},// AF_HC_STEP                  
{0xB02D, 0x40     ,BYTE_LEN,0},// AF_HC_LONG_STEP             
{0xB02E, 0x50     ,BYTE_LEN,0},// AF_HC_LONG_STEP_USE_THR     
{0xB048, 0x01     ,BYTE_LEN,0},// AF_C_HC_PROGRESS_TH         
{0xB041, 0x02     ,BYTE_LEN,0},// AF_DEBUG2                   
{0xC856, 0x0423     ,WORD_LEN,0},// CAM_CORE_A_UNUSED1          
{0xC40A, 0x0028     ,WORD_LEN,0},// AFM_POS_MIN                 
{0xC40C, 0x00A0    ,WORD_LEN,0},//BE     ,WORD_LEN,0},// AFM_POS_MAX                 
{0xC402, 0x00     ,BYTE_LEN,0},// AFM_MODE                    
{0xB018, 0x0        ,BYTE_LEN,0},// AF_FS_POS_0
{0xB019, 0x14         ,BYTE_LEN,0},// AF_FS_POS_1                 
{0xB01A, 0x21        ,BYTE_LEN,0},// AF_FS_POS_2                 
{0xB01B, 0x2E         ,BYTE_LEN,0},// AF_FS_POS_3                 
{0xB01C, 0x3B         ,BYTE_LEN,0},// AF_FS_POS_4                 
{0xB01D, 0x48        ,BYTE_LEN,0},// AF_FS_POS_5                 
{0xB01E,0x55         ,BYTE_LEN,0},// AF_FS_POS_6                 
{0xB01F, 0x62        ,BYTE_LEN,0},// AF_FS_POS_7                 
{0xB020, 0x6f         ,BYTE_LEN,0},// AF_FS_POS_8                 
{0xB021, 0x7c         ,BYTE_LEN,0},// AF_FS_POS_9                 
{0xB022, 0x89         ,BYTE_LEN,0},// AF_FS_POS_10
{0xB023, 0x96         ,BYTE_LEN,0},// AF_FS_POS_11
{0xB024, 0xA3         ,BYTE_LEN,0},// AF_FS_POS_12
{0xB025, 0xB0         ,BYTE_LEN,0},// AF_FS_POS_13
{0xB026, 0xBD         ,BYTE_LEN,0},// AF_FS_POS_14
{0xB027, 0xD4        ,BYTE_LEN,0},// AF_FS_POS_15
{0xB028, 0xE1         ,BYTE_LEN,0},// AF_FS_POS_16
{0xB029, 0xEE        ,BYTE_LEN,0},// AF_FS_POS_17
{0xB02A, 0xFC         ,BYTE_LEN,0},// AF_FS_POS_18
{0xB02B, 0xFF         ,BYTE_LEN,0},// AF_FS_POS_19
{0xB012, 0x14     ,BYTE_LEN,0},// AF_FS_NUM_STEPS             
 
{0xB014, 0x0B     ,BYTE_LEN,0},// AF_FS_STEP_SIZE
{ 0xB036, 0x2430     ,WORD_LEN,0},// AF_MD_TH_FOR_STARTING_MOT_EVAL
{ 0xB03C, 0x2430     ,WORD_LEN,0},// AF_MD_TH_FOR_FOCUSING_AFTER_MOT            
{0xB854, 0x52     ,BYTE_LEN,0},// STAT_SM_WINDOW_POS_X        
{0xB855, 0x58     ,BYTE_LEN,0},// STAT_SM_WINDOW_POS_Y        
{0xB856, 0x5D     ,BYTE_LEN,0},// STAT_SM_WINDOW_SIZE_X       
{0xB857, 0x5A     ,BYTE_LEN,0},// STAT_SM_WINDOW_SIZE_Y       
};

#define auto_af_pwm_continue_size	\
	(sizeof(auto_af_pwm_continue) / sizeof(auto_af_pwm_continue[0]))
	
struct mt9p111_i2c_reg_conf auto_af_continue[]={
	{0xB004, 0x0010, WORD_LEN, 0},//AF_ALGO
	{0x8419, 0x03, BYTE_LEN,0},//SEQ_STATE_CFG_1_AF
	{0x8404, 0x06, BYTE_LEN,100},//SEQ_CMD
	{0xB006, 0x01, BYTE_LEN, 0},		
	
};
#define auto_af_continue_size	\
	(sizeof(auto_af_continue) / sizeof(auto_af_continue[0]))
	
struct mt9p111_i2c_reg_conf auto_af_single[]={
	{0x098E, 0xB006, WORD_LEN, 0},           //
	{0xB006, 0x01 , BYTE_LEN, 0},	// AF_PROGRESS
	
};
#define auto_af_single_size	\
	(sizeof(auto_af_single) / sizeof(auto_af_single[0]))
/* User tuned register setting values */



#if 0
#define MT9P111_INIT0	\
	(sizeof(mt9p111_init0) / sizeof(mt9p111_init0[0]))
#define MT9P111_Viewfinder_ON	\
	(sizeof(Viewfinder_ON) / sizeof(Viewfinder_ON[0]))
#define MT9P111_Viewfinder_OFF	\
	(sizeof(Viewfinder_OFF) / sizeof(Viewfinder_OFF[0]))

#define MT9P111_Refresh	\
	(sizeof(Refresh) / sizeof(Refresh[0]))
	
#define MT9P111_set_resol	\
	(sizeof(set_resol_640x480) / sizeof(set_resol_640x480[0]))

unsigned char mt9p111_init_reg1[][4] = {};

unsigned short mt9p111_init_reg2[][2] = {};

unsigned char mt9p111_init_reg3[][4] = {};

unsigned short mt9p111_init_reg4[][2] = {};

unsigned char mt9p111_init_reg5[][4] = {};

unsigned char mt9p111_init_jpeg[][4] = {
	{0x0F, 0x12, 0x00, 0x09},	/* YUV */
	{0x00, 0x2A, 0x02, 0xF8},	/* PLL config */
	{0x0F, 0x12, 0x00, 0x00},
	{0x00, 0x2A, 0x02, 0xE8},	/* PCLK max */
};

unsigned short mt9p111_init_reg6[][2] = {
	{0x0F12, MT9P111_PCLK_MAX},
};

unsigned char mt9p111_init_reg7[][4] = {
	{0x00, 0x2A, 0x02, 0xEA}, /* PCLK min */
};

unsigned short mt9p111_init_reg8[][2] = {
	{0x0F12, MT9P111_PCLK_MIN},
};

unsigned char mt9p111_init_reg9[][4] = {};

unsigned short mt9p111_init_reg10[][2] = {};

unsigned char mt9p111_init_reg11[][4] = {};

#define MT9P111_INIT_REGS1	\
	(sizeof(mt9p111_init_reg1) / sizeof(mt9p111_init_reg1[0]))
#define MT9P111_INIT_REGS2	\
	(sizeof(mt9p111_init_reg2) / sizeof(mt9p111_init_reg2[0]))
#define MT9P111_INIT_REGS3	\
	(sizeof(mt9p111_init_reg3) / sizeof(mt9p111_init_reg3[0]))
#define MT9P111_INIT_REGS4	\
	(sizeof(mt9p111_init_reg4) / sizeof(mt9p111_init_reg4[0]))
#define MT9P111_INIT_JPEG	\
	(sizeof(mt9p111_init_jpeg) / sizeof(mt9p111_init_jpeg[0]))
#define MT9P111_INIT_REGS5\
	(sizeof(mt9p111_init_reg5) / sizeof(mt9p111_init_reg5[0]))
#define MT9P111_INIT_REGS6	\
	(sizeof(mt9p111_init_reg6) / sizeof(mt9p111_init_reg6[0]))
#define MT9P111_INIT_REGS7	\
	(sizeof(mt9p111_init_reg7) / sizeof(mt9p111_init_reg7[0]))
#define MT9P111_INIT_REGS8	\
	(sizeof(mt9p111_init_reg8) / sizeof(mt9p111_init_reg8[0]))
#define MT9P111_INIT_REGS9	\
	(sizeof(mt9p111_init_reg9) / sizeof(mt9p111_init_reg9[0]))
#define MT9P111_INIT_REGS10	\
	(sizeof(mt9p111_init_reg10) / sizeof(mt9p111_init_reg10[0]))
#define MT9P111_INIT_REGS11	\
	(sizeof(mt9p111_init_reg11) / sizeof(mt9p111_init_reg11[0]))

unsigned short mt9p111_sleep_reg[][2] = {
	{0x002A, MT9P111_REG_TC_GP_EnablePreview},
	{0x0F12, 0x0000},
	{0x002A, MT9P111_REG_TC_GP_EnablePreviewChanged},
	{0x0F12, 0x0001},
	{REG_DELAY, 100},
};

#define MT9P111_SLEEP_REGS	\
	(sizeof(mt9p111_sleep_reg) / sizeof(mt9p111_sleep_reg[0]))

unsigned short mt9p111_wakeup_reg[][2] = {
	{0x002A, 0x02F0},
	{0x0F12, 0x0052},
	{0x002A, MT9P111_REG_TC_GP_PrevConfigChanged},
	{0x0F12, 0x0001},
};

#define MT9P111_WAKEUP_REGS	\
	(sizeof(mt9p111_wakeup_reg) / sizeof(mt9p111_wakeup_reg[0]))

/* Preview configuration preset #1 */
/* Preview configuration preset #2 */
/* Preview configuration preset #3 */
/* Preview configuration preset #4 */

/* Capture configuration preset #0 */
/* Capture configuration preset #1 */
/* Capture configuration preset #2 */
/* Capture configuration preset #3 */
/* Capture configuration preset #4 */

/*
 * EV bias
 */

static const struct mt9p111_reg mt9p111_ev_m6[] = {
};

static const struct mt9p111_reg mt9p111_ev_m5[] = {
};

static const struct mt9p111_reg mt9p111_ev_m4[] = {
};

static const struct mt9p111_reg mt9p111_ev_m3[] = {
};

static const struct mt9p111_reg mt9p111_ev_m2[] = {
};

static const struct mt9p111_reg mt9p111_ev_m1[] = {
};

static const struct mt9p111_reg mt9p111_ev_default[] = {
};

static const struct mt9p111_reg mt9p111_ev_p1[] = {
};

static const struct mt9p111_reg mt9p111_ev_p2[] = {
};

static const struct mt9p111_reg mt9p111_ev_p3[] = {
};

static const struct mt9p111_reg mt9p111_ev_p4[] = {
};

static const struct mt9p111_reg mt9p111_ev_p5[] = {
};

static const struct mt9p111_reg mt9p111_ev_p6[] = {
};
#endif

enum mt9p111_preview_frame_size {
	MT9P111_PREVIEW_QCIF = 0,	/*1 176x144 */
	MT9P111_PREVIEW_CIF,		/*2 352x288 */ 
	MT9P111_PREVIEW_VGA,		/*3 640x480 */
	MT9P111_PREVIEW_D1,		/*4 720x480 */
	MT9P111_PREVIEW_960,		/*5 960x640 */
	MT9P111_PREVIEW_720P,		/*6 1280x720 */
	MT9P111_PREVIEW_MAX,
};

/* Capture Size List: Capture size is defined as below.
 *
 *	MT9P111_CAPTURE_VGA:		640x480
 *	MT9P111_CAPTURE_WVGA:		800x480
 *	MT9P111_CAPTURE_SVGA:		800x600
 *	MT9P111_CAPTURE_WSVGA:		1024x600
 *	MT9P111_CAPTURE_1MP:		1280x960
 *	MT9P111_CAPTURE_W1MP:		1600x960
 *	MT9P111_CAPTURE_2MP:		UXGA - 1600x1200
 *	MT9P111_CAPTURE_W2MP:		35mm Academy Offset Standard 1.66
 *					2048x1232, 2.4MP
 *	MT9P111_CAPTURE_3MP:		QXGA  - 2048x1536
 *	MT9P111_CAPTURE_W4MP:		WQXGA - 2560x1536
 *	MT9P111_CAPTURE_5MP:		2560x1920
 */

enum mt9p111_capture_frame_size {
	MT9P111_CAPTURE_VGA = 0,	/* 640x480 */
	MT9P111_CAPTURE_1MP,		/* 1280x960 */
	MT9P111_CAPTURE_2MP,		/* UXGA  - 1600x1200 */
	MT9P111_CAPTURE_3MP,		/* QXGA  - 2048x1536 */
	MT9P111_CAPTURE_5MP,		/* 2592x1944 */
	MT9P111_CAPTURE_MAX,
};

enum mt9p111_fps_index {
	I_FPS_0,
	I_FPS_7,
	I_FPS_10,
	I_FPS_12,
	I_FPS_15,
	I_FPS_25,
	I_FPS_30,
	I_FPS_MAX,
};
#ifdef CONFIG_LOAD_FILE
#define DEBUG_WRITE_REGS
struct mt9p111_regset_table {
	const char	*const name;
};

#define MT9P111_REGSET(x, y)		\
	[(x)] = {			\
		.name		= #y,	\
}

#define MT9P111_REGSET_TABLE(y)	\
	{				\
		.name		= #y,	\
}
#else
struct mt9p111_regset_table {
	const u32	*const reg;
	const u32	array_size;
#ifdef DEBUG_WRITE_REGS
	const char	*const name;
#endif
};

#ifdef DEBUG_WRITE_REGS
#define MT9P111_REGSET(x, y)		\
	[(x)] = {					\
		.reg		= (y),			\
		.array_size	= ARRAY_SIZE((y)),	\
		.name		= #y,			\
}

#define MT9P111_REGSET_TABLE(y)		\
	{					\
		.reg		= (y),			\
		.array_size	= ARRAY_SIZE((y)),	\
		.name		= #y,			\
}
#else
#define MT9P111_REGSET(x, y)		\
	[(x)] = {					\
		.reg		= (y),			\
		.array_size	= ARRAY_SIZE((y)),	\
}

#define MT9P111_REGSET_TABLE(y)		\
	{					\
		.reg		= (y),			\
		.array_size	= ARRAY_SIZE((y)),	\
}
#endif /* DEBUG_WRITE_REGS */
#endif /* CONFIG_LOAD_FILE */


struct mt9p111_regs {
	struct mt9p111_regset_table preview_size[MT9P111_PREVIEW_MAX];
	struct mt9p111_regset_table capture_start[MT9P111_CAPTURE_MAX];
	struct mt9p111_regset_table fps[I_FPS_MAX];
#if 0
	struct mt9p111_regset_table ev[EV_MAX];
	struct mt9p111_regset_table metering[METERING_MAX];
	struct mt9p111_regset_table iso[ISO_MAX];
	struct mt9p111_regset_table effect[IMAGE_EFFECT_MAX];
	struct mt9p111_regset_table white_balance[WHITE_BALANCE_MAX];
	struct mt9p111_regset_table scene_mode[SCENE_MODE_MAX];
	struct mt9p111_regset_table saturation[SATURATION_MAX];
	struct mt9p111_regset_table contrast[CONTRAST_MAX];
	struct mt9p111_regset_table sharpness[SHARPNESS_MAX];
#endif
	struct mt9p111_regset_table preview_return;
	struct mt9p111_regset_table jpeg_quality_high;
	struct mt9p111_regset_table jpeg_quality_normal;
	struct mt9p111_regset_table jpeg_quality_low;
	struct mt9p111_regset_table flash_start;
	struct mt9p111_regset_table flash_end;

	struct mt9p111_regset_table af_assist_flash_start;
	struct mt9p111_regset_table af_assist_flash_end;
	struct mt9p111_regset_table af_low_light_mode_on;
	struct mt9p111_regset_table af_low_light_mode_off;

	struct mt9p111_regset_table ae_awb_lock_on;
	struct mt9p111_regset_table ae_awb_lock_off;
	struct mt9p111_regset_table restore_cap;
	struct mt9p111_regset_table change_wide_cap;
	struct mt9p111_regset_table af_macro_mode_1;
	struct mt9p111_regset_table af_macro_mode_2;
	struct mt9p111_regset_table af_macro_mode_3;
	struct mt9p111_regset_table af_normal_mode_1;
	struct mt9p111_regset_table af_normal_mode_2;
	struct mt9p111_regset_table af_normal_mode_3;

	struct mt9p111_regset_table single_af_start;
	struct mt9p111_regset_table video_af_start;
	struct mt9p111_regset_table single_af_off_1;
	struct mt9p111_regset_table single_af_off_2;
	struct mt9p111_regset_table init_arm;
	struct mt9p111_regset_table init_reg;

	struct mt9p111_regset_table get_ae_stable_status;
	struct mt9p111_regset_table get_light_level;
	struct mt9p111_regset_table get_1st_af_search_status;
	struct mt9p111_regset_table get_2nd_af_search_status;
	struct mt9p111_regset_table get_capture_status;
	
	struct mt9p111_regset_table get_esd_status;
	struct mt9p111_regset_table get_iso;
	struct mt9p111_regset_table get_ev;
	struct mt9p111_regset_table get_ae_stable;
	struct mt9p111_regset_table get_shutterspeed;
	struct mt9p111_regset_table update_preview;
	struct mt9p111_regset_table update_hd_preview;
	struct mt9p111_regset_table stream_stop;
};
#if defined(FEATURE_YUV_CAPTURE)
/* JPEG MEMORY SIZE */
#define SENSOR_JPEG_OUTPUT_MAXSIZE	0x29999A /*2726298bytes, 2.6M */
#define EXTRA_MEMSIZE			(0 * SZ_1K)
#define SENSOR_JPEG_SNAPSHOT_MEMSIZE 	0x99C600
#define SENSOR_JPEG_THUMB_MAXSIZE		0xFC00
#define SENSOR_JPEG_POST_MAXSIZE		0xBB800
#endif

#endif
